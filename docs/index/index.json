{
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Essentials",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdecksession\/devices",
                "title" : "var devices: [StreamDeck]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdecksession\/didsetup",
                "title" : "var didSetUp: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdecksession\/driverversion",
                "title" : "var driverVersion: Version?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdecksession\/newdevicepublisher",
                "title" : "var newDevicePublisher: AnyPublisher<StreamDeck, Never>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdecksession\/state-swift.property",
                "title" : "var state: State",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdecksession\/setup(statehandler:newdevicehandler:)-swift.method",
                "title" : "func setUp(stateHandler: StateHandler?, newDeviceHandler: NewDeviceHandler?)",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdecksession\/newdevicehandler",
                "title" : "StreamDeckSession.NewDeviceHandler",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdecksession\/statehandler",
                "title" : "StreamDeckSession.StateHandler",
                "type" : "typealias"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdecksession\/instance",
                "title" : "static let instance: StreamDeckSession",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdecksession\/setup(statehandler:newdevicehandler:)-swift.type.method",
                "title" : "static func setUp(stateHandler: StateHandler?, newDeviceHandler: NewDeviceHandler?)",
                "type" : "method"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecksession\/sessionerror\/driverversionmismatch",
                    "title" : "case driverVersionMismatch",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecksession\/sessionerror\/missingentitlement",
                    "title" : "case missingEntitlement",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecksession\/sessionerror\/unexpecteddrivererror",
                    "title" : "case unexpectedDriverError",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/streamdecksession\/sessionerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/streamdeckkit\/streamdecksession\/sessionerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/streamdecksession\/sessionerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/streamdeckkit\/streamdecksession\/sessionerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/streamdecksession\/sessionerror",
                "title" : "StreamDeckSession.SessionError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecksession\/state-swift.enum\/failed(_:)",
                    "title" : "case failed(SessionError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecksession\/state-swift.enum\/idle",
                    "title" : "case idle",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecksession\/state-swift.enum\/started",
                    "title" : "case started",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/streamdecksession\/state-swift.enum\/debugdescription",
                        "title" : "var debugDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/streamdeckkit\/streamdecksession\/state-swift.enum\/customdebugstringconvertible-implementations",
                    "title" : "CustomDebugStringConvertible Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/streamdecksession\/state-swift.enum\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/streamdeckkit\/streamdecksession\/state-swift.enum\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/streamdecksession\/state-swift.enum",
                "title" : "StreamDeckSession.State",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/streamdecksession",
            "title" : "StreamDeckSession",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/init(keyarea:windowarea:)",
                "title" : "init(keyArea: @MainActor () -> KeyArea, windowArea: @MainActor () -> WindowArea)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/body",
                "title" : "var body: some View",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accentcolor(_:)",
                    "title" : "func accentColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibility(activationpoint:)-26ink",
                    "title" : "func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibility(activationpoint:)-648i5",
                    "title" : "func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibility(addtraits:)",
                    "title" : "func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibility(hidden:)",
                    "title" : "func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibility(hint:)",
                    "title" : "func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibility(identifier:)",
                    "title" : "func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibility(inputlabels:)",
                    "title" : "func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibility(label:)",
                    "title" : "func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibility(removetraits:)",
                    "title" : "func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibility(selectionidentifier:)",
                    "title" : "func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibility(sortpriority:)",
                    "title" : "func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibility(value:)",
                    "title" : "func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityaction(_:_:)",
                    "title" : "func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityaction(action:label:)",
                    "title" : "func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityaction(named:_:)-386os",
                    "title" : "func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityaction(named:_:)-3w4e4",
                    "title" : "func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityaction(named:_:)-661am",
                    "title" : "func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityactions(_:)",
                    "title" : "func accessibilityActions<Content>(() -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityactivationpoint(_:)-44ptc",
                    "title" : "func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityactivationpoint(_:)-iygq",
                    "title" : "func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityaddtraits(_:)",
                    "title" : "func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityadjustableaction(_:)",
                    "title" : "func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitychartdescriptor(_:)",
                    "title" : "func accessibilityChartDescriptor<R>(R) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitychildren(children:)",
                    "title" : "func accessibilityChildren<V>(children: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitycustomcontent(_:_:importance:)-2a1aw",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitycustomcontent(_:_:importance:)-2vaoc",
                    "title" : "func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitycustomcontent(_:_:importance:)-2z65e",
                    "title" : "func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitycustomcontent(_:_:importance:)-3de3p",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitycustomcontent(_:_:importance:)-4dwfa",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitycustomcontent(_:_:importance:)-4le3q",
                    "title" : "func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitycustomcontent(_:_:importance:)-67ld9",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitycustomcontent(_:_:importance:)-8e8j",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitydirecttouch(_:options:)",
                    "title" : "func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityelement(children:)",
                    "title" : "func accessibilityElement(children: AccessibilityChildBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityfocused(_:)",
                    "title" : "func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityfocused(_:equals:)",
                    "title" : "func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityheading(_:)",
                    "title" : "func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityhidden(_:)",
                    "title" : "func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityhint(_:)-6r0iu",
                    "title" : "func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityhint(_:)-7kxuu",
                    "title" : "func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityhint(_:)-7u7oe",
                    "title" : "func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityidentifier(_:)",
                    "title" : "func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityignoresinvertcolors(_:)",
                    "title" : "func accessibilityIgnoresInvertColors(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityinputlabels(_:)-592yv",
                    "title" : "func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityinputlabels(_:)-78tvt",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityinputlabels(_:)-8ymki",
                    "title" : "func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitylabel(_:)-2a4he",
                    "title" : "func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitylabel(_:)-8qvre",
                    "title" : "func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitylabel(_:)-8wj6f",
                    "title" : "func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitylabeledpair(role:id:in:)",
                    "title" : "func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitylinkedgroup(id:in:)",
                    "title" : "func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityremovetraits(_:)",
                    "title" : "func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrepresentation(representation:)",
                    "title" : "func accessibilityRepresentation<V>(representation: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrespondstouserinteraction(_:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotor(_:entries:)-3zio1",
                    "title" : "func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotor(_:entries:)-4hipl",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotor(_:entries:)-7089q",
                    "title" : "func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotor(_:entries:)-7rgbb",
                    "title" : "func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotor(_:entries:entryid:entrylabel:)-2o4tp",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotor(_:entries:entryid:entrylabel:)-9ieig",
                    "title" : "func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotor(_:entries:entryid:entrylabel:)-9rcnc",
                    "title" : "func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotor(_:entries:entryid:entrylabel:)-h9mk",
                    "title" : "func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotor(_:entries:entrylabel:)-156x8",
                    "title" : "func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotor(_:entries:entrylabel:)-1v9e2",
                    "title" : "func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotor(_:entries:entrylabel:)-6p7zj",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotor(_:entries:entrylabel:)-7d2g2",
                    "title" : "func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotor(_:textranges:)-20qq4",
                    "title" : "func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotor(_:textranges:)-86wbj",
                    "title" : "func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotor(_:textranges:)-9wps6",
                    "title" : "func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotor(_:textranges:)-9y17d",
                    "title" : "func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityrotorentry(id:in:)",
                    "title" : "func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityscrollaction(_:)",
                    "title" : "func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityshowslargecontentviewer()",
                    "title" : "func accessibilityShowsLargeContentViewer() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityshowslargecontentviewer(_:)",
                    "title" : "func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitysortpriority(_:)",
                    "title" : "func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilitytextcontenttype(_:)",
                    "title" : "func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityvalue(_:)-6utoa",
                    "title" : "func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityvalue(_:)-bgn9",
                    "title" : "func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityvalue(_:)-l66l",
                    "title" : "func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/accessibilityzoomaction(_:)",
                    "title" : "func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/actionsheet(ispresented:content:)",
                    "title" : "func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/actionsheet(item:content:)",
                    "title" : "func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alert(_:ispresented:actions:)-6jw2o",
                    "title" : "func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alert(_:ispresented:actions:)-9isqc",
                    "title" : "func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alert(_:ispresented:actions:)-9wslt",
                    "title" : "func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alert(_:ispresented:actions:message:)-33662",
                    "title" : "func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alert(_:ispresented:actions:message:)-8k3kc",
                    "title" : "func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alert(_:ispresented:actions:message:)-8w8cb",
                    "title" : "func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alert(_:ispresented:presenting:actions:)-2mla8",
                    "title" : "func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alert(_:ispresented:presenting:actions:)-3iu7h",
                    "title" : "func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alert(_:ispresented:presenting:actions:)-4i4od",
                    "title" : "func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alert(_:ispresented:presenting:actions:message:)-11sbs",
                    "title" : "func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alert(_:ispresented:presenting:actions:message:)-7xwnv",
                    "title" : "func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alert(_:ispresented:presenting:actions:message:)-8wr63",
                    "title" : "func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alert(ispresented:content:)",
                    "title" : "func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alert(ispresented:error:actions:)",
                    "title" : "func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alert(ispresented:error:actions:message:)",
                    "title" : "func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alert(item:content:)",
                    "title" : "func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alignmentguide(_:computevalue:)-46u08",
                    "title" : "func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alignmentguide(_:computevalue:)-7lihp",
                    "title" : "func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/alloweddynamicrange(_:)",
                    "title" : "func allowedDynamicRange(Image.DynamicRange?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/allowshittesting(_:)",
                    "title" : "func allowsHitTesting(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/allowstightening(_:)",
                    "title" : "func allowsTightening(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/anchorpreference(key:value:transform:)",
                    "title" : "func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/animation(_:)",
                    "title" : "func animation(Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/animation(_:body:)",
                    "title" : "func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/animation(_:value:)",
                    "title" : "func animation<V>(Animation?, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/aspectratio(_:contentmode:)-2ivmp",
                    "title" : "func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/aspectratio(_:contentmode:)-4esjs",
                    "title" : "func aspectRatio(CGSize, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/autocapitalization(_:)",
                    "title" : "func autocapitalization(UITextAutocapitalizationType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/autocorrectiondisabled(_:)",
                    "title" : "func autocorrectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/background(_:alignment:)",
                    "title" : "func background<Background>(Background, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/background(_:ignoressafeareaedges:)",
                    "title" : "func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/background(_:in:fillstyle:)-6igjy",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/background(_:in:fillstyle:)-74z18",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/background(alignment:content:)",
                    "title" : "func background<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/background(ignoressafeareaedges:)",
                    "title" : "func background(ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/background(in:fillstyle:)-3cd7f",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/background(in:fillstyle:)-5qsio",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/backgroundpreferencevalue(_:_:)",
                    "title" : "func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/backgroundpreferencevalue(_:alignment:_:)",
                    "title" : "func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/backgroundstyle(_:)",
                    "title" : "func backgroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/badge(_:)-5k9f5",
                    "title" : "func badge(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/badge(_:)-70oof",
                    "title" : "func badge(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/badge(_:)-96ahz",
                    "title" : "func badge(LocalizedStringKey?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/badge(_:)-9j42v",
                    "title" : "func badge<S>(S?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/badgeprominence(_:)",
                    "title" : "func badgeProminence(BadgeProminence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/baselineoffset(_:)",
                    "title" : "func baselineOffset(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/blendmode(_:)",
                    "title" : "func blendMode(BlendMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/blur(radius:opaque:)",
                    "title" : "func blur(radius: CGFloat, opaque: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/bold(_:)",
                    "title" : "func bold(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/border(_:width:)",
                    "title" : "func border<S>(S, width: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/brightness(_:)",
                    "title" : "func brightness(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/buttonbordershape(_:)",
                    "title" : "func buttonBorderShape(ButtonBorderShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/buttonrepeatbehavior(_:)",
                    "title" : "func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/buttonstyle(_:)-35p4f",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/buttonstyle(_:)-5dgg3",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/clipshape(_:style:)",
                    "title" : "func clipShape<S>(S, style: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/clipped(antialiased:)",
                    "title" : "func clipped(antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/coloreffect(_:isenabled:)",
                    "title" : "func colorEffect(Shader, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/colorinvert()",
                    "title" : "func colorInvert() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/colormultiply(_:)",
                    "title" : "func colorMultiply(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/compositinggroup()",
                    "title" : "func compositingGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9w28k",
                    "title" : "func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/confirmationdialog(_:ispresented:titlevisibility:actions:)-afqn",
                    "title" : "func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/confirmationdialog(_:ispresented:titlevisibility:actions:)-mpu4",
                    "title" : "func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1vfn0",
                    "title" : "func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5slbz",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-zebm",
                    "title" : "func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2l2jp",
                    "title" : "func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-49y0j",
                    "title" : "func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-b8ak",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-181p4",
                    "title" : "func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2s1av",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8shrf",
                    "title" : "func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/containerbackground(_:for:)",
                    "title" : "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/containerbackground(for:alignment:content:)",
                    "title" : "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/containerrelativeframe(_:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/containerrelativeframe(_:alignment:_:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/containerrelativeframe(_:count:span:spacing:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/containershape(_:)",
                    "title" : "func containerShape<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/contentmargins(_:_:for:)-1s9o5",
                    "title" : "func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/contentmargins(_:_:for:)-41i4o",
                    "title" : "func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/contentmargins(_:for:)",
                    "title" : "func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/contentshape(_:_:eofill:)",
                    "title" : "func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/contentshape(_:eofill:)",
                    "title" : "func contentShape<S>(S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/contenttransition(_:)",
                    "title" : "func contentTransition(ContentTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/contextmenu(_:)",
                    "title" : "func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/contextmenu(forselectiontype:menu:primaryaction:)",
                    "title" : "func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/contextmenu(menuitems:)",
                    "title" : "func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/contextmenu(menuitems:preview:)",
                    "title" : "func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/contrast(_:)",
                    "title" : "func contrast(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/controlgroupstyle(_:)",
                    "title" : "func controlGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/controlsize(_:)",
                    "title" : "func controlSize(ControlSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/coordinatespace(_:)",
                    "title" : "func coordinateSpace(NamedCoordinateSpace) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/coordinatespace(name:)",
                    "title" : "func coordinateSpace<T>(name: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/cornerradius(_:antialiased:)",
                    "title" : "func cornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/datepickerstyle(_:)",
                    "title" : "func datePickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/defaultappstorage(_:)",
                    "title" : "func defaultAppStorage(UserDefaults) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/defaultfocus(_:_:priority:)",
                    "title" : "func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/defaulthovereffect(_:)",
                    "title" : "func defaultHoverEffect(HoverEffect?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/defaultscrollanchor(_:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/deferssystemgestures(on:)",
                    "title" : "func defersSystemGestures(on: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/deletedisabled(_:)",
                    "title" : "func deleteDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/dialogsuppressiontoggle(_:issuppressed:)-1cepd",
                    "title" : "func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/dialogsuppressiontoggle(_:issuppressed:)-3t2x2",
                    "title" : "func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/dialogsuppressiontoggle(_:issuppressed:)-8ebf3",
                    "title" : "func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/dialogsuppressiontoggle(issuppressed:)",
                    "title" : "func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/disableautocorrection(_:)",
                    "title" : "func disableAutocorrection(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/disabled(_:)",
                    "title" : "func disabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/disclosuregroupstyle(_:)",
                    "title" : "func disclosureGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/distortioneffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/draggable(_:)",
                    "title" : "func draggable<T>(() -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/draggable(_:preview:)",
                    "title" : "func draggable<V, T>(() -> T, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/drawinggroup(opaque:colormode:)",
                    "title" : "func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/dropdestination(for:action:istargeted:)",
                    "title" : "func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/dynamictypesize(_:)",
                    "title" : "func dynamicTypeSize(DynamicTypeSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/edgesignoringsafearea(_:)",
                    "title" : "func edgesIgnoringSafeArea(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/environment(_:)",
                    "title" : "func environment<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/environment(_:_:)",
                    "title" : "func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/environmentobject(_:)",
                    "title" : "func environmentObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/filedialogbrowseroptions(_:)",
                    "title" : "func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/filedialogconfirmationlabel(_:)-1fuen",
                    "title" : "func fileDialogConfirmationLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/filedialogconfirmationlabel(_:)-9kwm9",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/filedialogconfirmationlabel(_:)-c66c",
                    "title" : "func fileDialogConfirmationLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/filedialogcustomizationid(_:)",
                    "title" : "func fileDialogCustomizationID(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/filedialogdefaultdirectory(_:)",
                    "title" : "func fileDialogDefaultDirectory(URL?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/filedialogimportsunresolvedaliases(_:)",
                    "title" : "func fileDialogImportsUnresolvedAliases(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/filedialogmessage(_:)-415x8",
                    "title" : "func fileDialogMessage<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/filedialogmessage(_:)-7fytn",
                    "title" : "func fileDialogMessage(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/filedialogmessage(_:)-832gp",
                    "title" : "func fileDialogMessage(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/filedialogurlenabled(_:)",
                    "title" : "func fileDialogURLEnabled(Predicate<URL>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-554or",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-98q4y",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-4x4oe",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-alis",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fileexporter(ispresented:documents:contenttype:oncompletion:)-329wj",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3ud4",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-2nm76",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3k5ev",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fileexporterfilenamelabel(_:)-4k18x",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fileexporterfilenamelabel(_:)-4u51x",
                    "title" : "func fileExporterFilenameLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fileexporterfilenamelabel(_:)-6is24",
                    "title" : "func fileExporterFilenameLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/filemover(ispresented:file:oncompletion:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/filemover(ispresented:file:oncompletion:oncancellation:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/filemover(ispresented:files:oncompletion:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/filemover(ispresented:files:oncompletion:oncancellation:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/finddisabled(_:)",
                    "title" : "func findDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/findnavigator(ispresented:)",
                    "title" : "func findNavigator(isPresented: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fixedsize()",
                    "title" : "func fixedSize() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fixedsize(horizontal:vertical:)",
                    "title" : "func fixedSize(horizontal: Bool, vertical: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/flipsforrighttoleftlayoutdirection(_:)",
                    "title" : "func flipsForRightToLeftLayoutDirection(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/focuseffectdisabled(_:)",
                    "title" : "func focusEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/focusable(_:)",
                    "title" : "func focusable(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/focusable(_:interactions:)",
                    "title" : "func focusable(Bool, interactions: FocusInteractions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/focused(_:)",
                    "title" : "func focused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/focused(_:equals:)",
                    "title" : "func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/focusedobject(_:)-5yurr",
                    "title" : "func focusedObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/focusedobject(_:)-60dzu",
                    "title" : "func focusedObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/focusedsceneobject(_:)-7e051",
                    "title" : "func focusedSceneObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/focusedsceneobject(_:)-or8n",
                    "title" : "func focusedSceneObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/focusedscenevalue(_:_:)-4232h",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/focusedscenevalue(_:_:)-gveq",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/focusedvalue(_:)",
                    "title" : "func focusedValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/focusedvalue(_:_:)-1pkk8",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/focusedvalue(_:_:)-7t67u",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/font(_:)",
                    "title" : "func font(Font?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fontdesign(_:)",
                    "title" : "func fontDesign(Font.Design?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fontweight(_:)",
                    "title" : "func fontWeight(Font.Weight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fontwidth(_:)",
                    "title" : "func fontWidth(Font.Width?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/foregroundstyle(_:)",
                    "title" : "func foregroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/foregroundstyle(_:_:)",
                    "title" : "func foregroundStyle<S1, S2>(S1, S2) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/foregroundstyle(_:_:_:)",
                    "title" : "func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/formstyle(_:)",
                    "title" : "func formStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/frame()",
                    "title" : "func frame() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/frame(width:height:alignment:)",
                    "title" : "func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fullscreencover(ispresented:ondismiss:content:)",
                    "title" : "func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/fullscreencover(item:ondismiss:content:)",
                    "title" : "func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/gaugestyle(_:)",
                    "title" : "func gaugeStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/geometrygroup()",
                    "title" : "func geometryGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/gesture(_:including:)",
                    "title" : "func gesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/grayscale(_:)",
                    "title" : "func grayscale(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/gridcellanchor(_:)",
                    "title" : "func gridCellAnchor(UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/gridcellcolumns(_:)",
                    "title" : "func gridCellColumns(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/gridcellunsizedaxes(_:)",
                    "title" : "func gridCellUnsizedAxes(Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/gridcolumnalignment(_:)",
                    "title" : "func gridColumnAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/groupboxstyle(_:)",
                    "title" : "func groupBoxStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/handlesexternalevents(preferring:allowing:)",
                    "title" : "func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/headerprominence(_:)",
                    "title" : "func headerProminence(Prominence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/help(_:)-54roa",
                    "title" : "func help<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/help(_:)-6whdy",
                    "title" : "func help(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/help(_:)-9fk1q",
                    "title" : "func help(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/hidden()",
                    "title" : "func hidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/highprioritygesture(_:including:)",
                    "title" : "func highPriorityGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/hovereffect(_:)",
                    "title" : "func hoverEffect(HoverEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/hovereffect(_:isenabled:)",
                    "title" : "func hoverEffect(HoverEffect, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/hovereffectdisabled(_:)",
                    "title" : "func hoverEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/huerotation(_:)",
                    "title" : "func hueRotation(Angle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/id(_:)",
                    "title" : "func id<ID>(ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/ignoressafearea(_:edges:)",
                    "title" : "func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/imagescale(_:)",
                    "title" : "func imageScale(Image.Scale) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/indexviewstyle(_:)",
                    "title" : "func indexViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/inspector(ispresented:content:)",
                    "title" : "func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/inspectorcolumnwidth(_:)",
                    "title" : "func inspectorColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/inspectorcolumnwidth(min:ideal:max:)",
                    "title" : "func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/interactionactivitytrackingtag(_:)",
                    "title" : "func interactionActivityTrackingTag(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/interactivedismissdisabled(_:)",
                    "title" : "func interactiveDismissDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/invalidatablecontent(_:)",
                    "title" : "func invalidatableContent(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/italic(_:)",
                    "title" : "func italic(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/itemprovider(_:)",
                    "title" : "func itemProvider(Optional<() -> NSItemProvider?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/kerning(_:)",
                    "title" : "func kerning(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/keyboardshortcut(_:)-6hid9",
                    "title" : "func keyboardShortcut(KeyboardShortcut) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/keyboardshortcut(_:)-7gajs",
                    "title" : "func keyboardShortcut(KeyboardShortcut?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/keyboardshortcut(_:modifiers:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/keyboardshortcut(_:modifiers:localization:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/keyboardtype(_:)",
                    "title" : "func keyboardType(UIKeyboardType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/keyframeanimator(initialvalue:repeating:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/keyframeanimator(initialvalue:trigger:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/labelstyle(_:)",
                    "title" : "func labelStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/labeledcontentstyle(_:)",
                    "title" : "func labeledContentStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/labelshidden()",
                    "title" : "func labelsHidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/layereffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/layoutdirectionbehavior(_:)",
                    "title" : "func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/layoutpriority(_:)",
                    "title" : "func layoutPriority(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/layoutvalue(key:value:)",
                    "title" : "func layoutValue<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/linelimit(_:)-4e4kl",
                    "title" : "func lineLimit(ClosedRange<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/linelimit(_:)-561ax",
                    "title" : "func lineLimit(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/linelimit(_:)-5bj4n",
                    "title" : "func lineLimit(PartialRangeThrough<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/linelimit(_:)-7yarr",
                    "title" : "func lineLimit(PartialRangeFrom<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/linelimit(_:reservesspace:)",
                    "title" : "func lineLimit(Int, reservesSpace: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/linespacing(_:)",
                    "title" : "func lineSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/listitemtint(_:)-4lm5q",
                    "title" : "func listItemTint(ListItemTint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/listitemtint(_:)-4rg66",
                    "title" : "func listItemTint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/listrowbackground(_:)",
                    "title" : "func listRowBackground<V>(V?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/listrowinsets(_:)",
                    "title" : "func listRowInsets(EdgeInsets?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/listrowseparator(_:edges:)",
                    "title" : "func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/listrowseparatortint(_:edges:)",
                    "title" : "func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/listrowspacing(_:)",
                    "title" : "func listRowSpacing(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/listsectionseparator(_:edges:)",
                    "title" : "func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/listsectionseparatortint(_:edges:)",
                    "title" : "func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/listsectionspacing(_:)-22jnw",
                    "title" : "func listSectionSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/listsectionspacing(_:)-8k6zx",
                    "title" : "func listSectionSpacing(ListSectionSpacing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/liststyle(_:)",
                    "title" : "func listStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/luminancetoalpha()",
                    "title" : "func luminanceToAlpha() -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/mask(_:)",
                    "title" : "func mask<Mask>(Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/mask(alignment:_:)",
                    "title" : "func mask<Mask>(alignment: Alignment, () -> Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/matchedgeometryeffect(id:in:properties:anchor:issource:)",
                    "title" : "func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/menuactiondismissbehavior(_:)",
                    "title" : "func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/menuindicator(_:)",
                    "title" : "func menuIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/menuorder(_:)",
                    "title" : "func menuOrder(MenuOrder) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/menustyle(_:)",
                    "title" : "func menuStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/minimumscalefactor(_:)",
                    "title" : "func minimumScaleFactor(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/modifier(_:)",
                    "title" : "func modifier<T>(T) -> ModifiedContent<Self, T>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/monospaced(_:)",
                    "title" : "func monospaced(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/monospaceddigit()",
                    "title" : "func monospacedDigit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/movedisabled(_:)",
                    "title" : "func moveDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(TextAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationbarbackbuttonhidden(_:)",
                    "title" : "func navigationBarBackButtonHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationbarhidden(_:)",
                    "title" : "func navigationBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationbaritems(leading:)",
                    "title" : "func navigationBarItems<L>(leading: L) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationbaritems(leading:trailing:)",
                    "title" : "func navigationBarItems<L, T>(leading: L, trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationbaritems(trailing:)",
                    "title" : "func navigationBarItems<T>(trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationbartitle(_:)-38rjj",
                    "title" : "func navigationBarTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationbartitle(_:)-66v31",
                    "title" : "func navigationBarTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationbartitle(_:)-6xuls",
                    "title" : "func navigationBarTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationbartitle(_:displaymode:)-66prq",
                    "title" : "func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationbartitle(_:displaymode:)-6ik37",
                    "title" : "func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationbartitle(_:displaymode:)-6kpqp",
                    "title" : "func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationbartitledisplaymode(_:)",
                    "title" : "func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationdestination(for:destination:)",
                    "title" : "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationdestination(ispresented:destination:)",
                    "title" : "func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationdestination(item:destination:)",
                    "title" : "func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationdocument(_:)",
                    "title" : "func navigationDocument(URL) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationdocument(_:preview:)-3gv1a",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationdocument(_:preview:)-4iild",
                    "title" : "func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationdocument(_:preview:)-6zrkt",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationdocument(_:preview:)-8l4nz",
                    "title" : "func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationsplitviewcolumnwidth(_:)",
                    "title" : "func navigationSplitViewColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationsplitviewcolumnwidth(min:ideal:max:)",
                    "title" : "func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationsplitviewstyle(_:)",
                    "title" : "func navigationSplitViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationtitle(_:)-1gojc",
                    "title" : "func navigationTitle(Binding<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationtitle(_:)-6j398",
                    "title" : "func navigationTitle<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationtitle(_:)-8ye2x",
                    "title" : "func navigationTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationtitle(_:)-97t8",
                    "title" : "func navigationTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationtitle(_:)-jfiq",
                    "title" : "func navigationTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/navigationviewstyle(_:)",
                    "title" : "func navigationViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/offset(_:)",
                    "title" : "func offset(CGSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/offset(x:y:)",
                    "title" : "func offset(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onappear(perform:)",
                    "title" : "func onAppear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onchange(of:initial:_:)-6qbws",
                    "title" : "func onChange<V>(of: V, initial: Bool, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onchange(of:initial:_:)-70wzi",
                    "title" : "func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onchange(of:perform:)",
                    "title" : "func onChange<V>(of: V, perform: (V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/oncontinueuseractivity(_:perform:)",
                    "title" : "func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/oncontinuoushover(coordinatespace:perform:)",
                    "title" : "func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/ondrag(_:)",
                    "title" : "func onDrag(() -> NSItemProvider) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/ondrag(_:preview:)",
                    "title" : "func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/ondrop(of:delegate:)-3mica",
                    "title" : "func onDrop(of: [String], delegate: DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/ondrop(of:delegate:)-5md5w",
                    "title" : "func onDrop(of: [UTType], delegate: DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/ondrop(of:istargeted:perform:)-119r1",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/ondrop(of:istargeted:perform:)-129mr",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/ondrop(of:istargeted:perform:)-1ilrv",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/ondrop(of:istargeted:perform:)-38pdj",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onhover(perform:)",
                    "title" : "func onHover(perform: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onkeypress(_:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onkeypress(_:phases:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onkeypress(characters:phases:action:)",
                    "title" : "func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onkeypress(keys:phases:action:)",
                    "title" : "func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onkeypress(phases:action:)",
                    "title" : "func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onlongpressgesture(minimumduration:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onlongpressgesture(minimumduration:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onpreferencechange(_:perform:)",
                    "title" : "func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onreceive(_:perform:)",
                    "title" : "func onReceive<P>(P, perform: (P.Output) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/onsubmit(of:_:)",
                    "title" : "func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/ontapgesture(count:coordinatespace:perform:)",
                    "title" : "func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/ontapgesture(count:perform:)",
                    "title" : "func onTapGesture(count: Int, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/opacity(_:)",
                    "title" : "func opacity(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/overlay(_:alignment:)",
                    "title" : "func overlay<Overlay>(Overlay, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/overlay(_:ignoressafeareaedges:)",
                    "title" : "func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/overlay(_:in:fillstyle:)",
                    "title" : "func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/overlay(alignment:content:)",
                    "title" : "func overlay<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/overlaypreferencevalue(_:_:)",
                    "title" : "func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/overlaypreferencevalue(_:alignment:_:)",
                    "title" : "func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/padding(_:)-17res",
                    "title" : "func padding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/padding(_:)-mu4l",
                    "title" : "func padding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/paletteselectioneffect(_:)",
                    "title" : "func paletteSelectionEffect(PaletteSelectionEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/persistentsystemoverlays(_:)",
                    "title" : "func persistentSystemOverlays(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/phaseanimator(_:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/phaseanimator(_:trigger:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/pickerstyle(_:)",
                    "title" : "func pickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/popover(ispresented:attachmentanchor:arrowedge:content:)",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/popover(item:attachmentanchor:arrowedge:content:)",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/position(_:)",
                    "title" : "func position(CGPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/position(x:y:)",
                    "title" : "func position(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/preference(key:value:)",
                    "title" : "func preference<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/preferredcolorscheme(_:)",
                    "title" : "func preferredColorScheme(ColorScheme?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/presentationbackground(_:)",
                    "title" : "func presentationBackground<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/presentationbackground(alignment:content:)",
                    "title" : "func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/presentationbackgroundinteraction(_:)",
                    "title" : "func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/presentationcompactadaptation(_:)",
                    "title" : "func presentationCompactAdaptation(PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/presentationcompactadaptation(horizontal:vertical:)",
                    "title" : "func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/presentationcontentinteraction(_:)",
                    "title" : "func presentationContentInteraction(PresentationContentInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/presentationcornerradius(_:)",
                    "title" : "func presentationCornerRadius(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/presentationdetents(_:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/presentationdetents(_:selection:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/presentationdragindicator(_:)",
                    "title" : "func presentationDragIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/previewcontext(_:)",
                    "title" : "func previewContext<C>(C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/previewdevice(_:)",
                    "title" : "func previewDevice(PreviewDevice?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/previewdisplayname(_:)",
                    "title" : "func previewDisplayName(String?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/previewinterfaceorientation(_:)",
                    "title" : "func previewInterfaceOrientation(InterfaceOrientation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/previewlayout(_:)",
                    "title" : "func previewLayout(PreviewLayout) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/privacysensitive(_:)",
                    "title" : "func privacySensitive(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/progressviewstyle(_:)",
                    "title" : "func progressViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/projectioneffect(_:)",
                    "title" : "func projectionEffect(ProjectionTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/redacted(reason:)",
                    "title" : "func redacted(reason: RedactionReasons) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/refreshable(action:)",
                    "title" : "func refreshable(action: () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/renameaction(_:)-4rd8p",
                    "title" : "func renameAction(() -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/renameaction(_:)-7dcza",
                    "title" : "func renameAction(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/replacedisabled(_:)",
                    "title" : "func replaceDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/rotation3deffect(_:axis:anchor:anchorz:perspective:)",
                    "title" : "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/rotationeffect(_:anchor:)",
                    "title" : "func rotationEffect(Angle, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/safeareainset(edge:alignment:spacing:content:)-4om56",
                    "title" : "func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/safeareainset(edge:alignment:spacing:content:)-7y868",
                    "title" : "func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/safeareapadding(_:)-8dx70",
                    "title" : "func safeAreaPadding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/safeareapadding(_:)-9w04h",
                    "title" : "func safeAreaPadding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/safeareapadding(_:_:)",
                    "title" : "func safeAreaPadding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/saturation(_:)",
                    "title" : "func saturation(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scaleeffect(_:anchor:)-2la60",
                    "title" : "func scaleEffect(CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scaleeffect(_:anchor:)-6jngo",
                    "title" : "func scaleEffect(CGSize, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scaleeffect(x:y:anchor:)",
                    "title" : "func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scaledtofill()",
                    "title" : "func scaledToFill() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scaledtofit()",
                    "title" : "func scaledToFit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scenepadding(_:)",
                    "title" : "func scenePadding(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scenepadding(_:edges:)",
                    "title" : "func scenePadding(ScenePadding, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scrollbouncebehavior(_:axes:)",
                    "title" : "func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scrollclipdisabled(_:)",
                    "title" : "func scrollClipDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scrollcontentbackground(_:)",
                    "title" : "func scrollContentBackground(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scrolldisabled(_:)",
                    "title" : "func scrollDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scrolldismisseskeyboard(_:)",
                    "title" : "func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scrollindicators(_:axes:)",
                    "title" : "func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scrollindicatorsflash(onappear:)",
                    "title" : "func scrollIndicatorsFlash(onAppear: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scrollindicatorsflash(trigger:)",
                    "title" : "func scrollIndicatorsFlash(trigger: some Equatable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scrollposition(id:anchor:)",
                    "title" : "func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scrolltargetbehavior(_:)",
                    "title" : "func scrollTargetBehavior(some ScrollTargetBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scrolltargetlayout(isenabled:)",
                    "title" : "func scrollTargetLayout(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scrolltransition(_:axis:transition:)",
                    "title" : "func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/scrolltransition(topleading:bottomtrailing:axis:transition:)",
                    "title" : "func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchcompletion(_:)",
                    "title" : "func searchCompletion(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchdictationbehavior(_:)",
                    "title" : "func searchDictationBehavior(TextInputDictationBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchscopes(_:activation:_:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchscopes(_:scopes:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchsuggestions(_:)",
                    "title" : "func searchSuggestions<S>(() -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchsuggestions(_:for:)",
                    "title" : "func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2r0ay",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-48fqi",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6bfxm",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:editabletokens:placement:prompt:token:)-9se6v",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:editabletokens:placement:prompt:token:)-rbc7",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:editabletokens:placement:prompt:token:)-twzd",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:ispresented:placement:prompt:)-14ivj",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:ispresented:placement:prompt:)-2pbqa",
                    "title" : "func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:ispresented:placement:prompt:)-9s983",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:placement:prompt:)-1uyn7",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:placement:prompt:)-24r2f",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:placement:prompt:)-4fhcz",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:placement:prompt:suggestions:)-2vyiv",
                    "title" : "func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:placement:prompt:suggestions:)-4r4b0",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:placement:prompt:suggestions:)-9cyjs",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:tokens:ispresented:placement:prompt:token:)-2sukc",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:tokens:ispresented:placement:prompt:token:)-3ltm7",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:tokens:ispresented:placement:prompt:token:)-l4hi",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:tokens:placement:prompt:token:)-5fgj4",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:tokens:placement:prompt:token:)-8f6ad",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:tokens:placement:prompt:token:)-8m46n",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1f15b",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-57zv3",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-t12r",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1ifiw",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-uay9",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-wfgy",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/selectiondisabled(_:)",
                    "title" : "func selectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/sensoryfeedback(_:trigger:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/sensoryfeedback(_:trigger:condition:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/sensoryfeedback(trigger:_:)",
                    "title" : "func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/shadow(color:radius:x:y:)",
                    "title" : "func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/sheet(ispresented:ondismiss:content:)",
                    "title" : "func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/sheet(item:ondismiss:content:)",
                    "title" : "func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/simultaneousgesture(_:including:)",
                    "title" : "func simultaneousGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/speechadjustedpitch(_:)",
                    "title" : "func speechAdjustedPitch(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/speechalwaysincludespunctuation(_:)",
                    "title" : "func speechAlwaysIncludesPunctuation(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/speechannouncementsqueued(_:)",
                    "title" : "func speechAnnouncementsQueued(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/speechspellsoutcharacters(_:)",
                    "title" : "func speechSpellsOutCharacters(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/springloadingbehavior(_:)",
                    "title" : "func springLoadingBehavior(SpringLoadingBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/statusbar(hidden:)",
                    "title" : "func statusBar(hidden: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/statusbarhidden(_:)",
                    "title" : "func statusBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/strikethrough(_:pattern:color:)",
                    "title" : "func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/submitlabel(_:)",
                    "title" : "func submitLabel(SubmitLabel) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/submitscope(_:)",
                    "title" : "func submitScope(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/swipeactions(edge:allowsfullswipe:content:)",
                    "title" : "func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/symboleffect(_:options:isactive:)",
                    "title" : "func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/symboleffect(_:options:value:)",
                    "title" : "func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/symboleffectsremoved(_:)",
                    "title" : "func symbolEffectsRemoved(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/symbolrenderingmode(_:)",
                    "title" : "func symbolRenderingMode(SymbolRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/symbolvariant(_:)",
                    "title" : "func symbolVariant(SymbolVariants) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/tabitem(_:)",
                    "title" : "func tabItem<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/tabviewstyle(_:)",
                    "title" : "func tabViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/tablecolumnheaders(_:)",
                    "title" : "func tableColumnHeaders(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/tablestyle(_:)",
                    "title" : "func tableStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/tag(_:)",
                    "title" : "func tag<V>(V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/task(id:priority:_:)",
                    "title" : "func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/textcase(_:)",
                    "title" : "func textCase(Text.Case?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/textcontenttype(_:)",
                    "title" : "func textContentType(UITextContentType?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/texteditorstyle(_:)",
                    "title" : "func textEditorStyle(some TextEditorStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/textfieldstyle(_:)",
                    "title" : "func textFieldStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/textinputautocapitalization(_:)",
                    "title" : "func textInputAutocapitalization(TextInputAutocapitalization?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/textscale(_:isenabled:)",
                    "title" : "func textScale(Text.Scale, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/textselection(_:)",
                    "title" : "func textSelection<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/tint(_:)",
                    "title" : "func tint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/togglestyle(_:)",
                    "title" : "func toggleStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/toolbar(_:for:)",
                    "title" : "func toolbar(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/toolbar(content:)-5c18p",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/toolbar(content:)-vclx",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/toolbar(id:content:)",
                    "title" : "func toolbar<Content>(id: String, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/toolbar(removing:)",
                    "title" : "func toolbar(removing: ToolbarDefaultItemKind?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/toolbarbackground(_:for:)",
                    "title" : "func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/toolbarcolorscheme(_:for:)",
                    "title" : "func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/toolbarrole(_:)",
                    "title" : "func toolbarRole(ToolbarRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/toolbartitledisplaymode(_:)",
                    "title" : "func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/toolbartitlemenu(content:)",
                    "title" : "func toolbarTitleMenu<C>(content: () -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/tracking(_:)",
                    "title" : "func tracking(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/transaction(_:)",
                    "title" : "func transaction((inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/transaction(_:body:)",
                    "title" : "func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/transaction(value:_:)",
                    "title" : "func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/transformanchorpreference(key:value:transform:)",
                    "title" : "func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/transformeffect(_:)",
                    "title" : "func transformEffect(CGAffineTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/transformenvironment(_:transform:)",
                    "title" : "func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/transformpreference(_:_:)",
                    "title" : "func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/transition(_:)",
                    "title" : "func transition(AnyTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/truncationmode(_:)",
                    "title" : "func truncationMode(Text.TruncationMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/typeselectequivalent(_:)-1m9pc",
                    "title" : "func typeSelectEquivalent(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/typeselectequivalent(_:)-32bm8",
                    "title" : "func typeSelectEquivalent<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/typeselectequivalent(_:)-4oxi5",
                    "title" : "func typeSelectEquivalent(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/typesettinglanguage(_:isenabled:)-53lb4",
                    "title" : "func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/typesettinglanguage(_:isenabled:)-lm5z",
                    "title" : "func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/underline(_:pattern:color:)",
                    "title" : "func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/unredacted()",
                    "title" : "func unredacted() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/useractivity(_:element:_:)",
                    "title" : "func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/useractivity(_:isactive:_:)",
                    "title" : "func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/visualeffect(_:)",
                    "title" : "func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/zindex(_:)",
                    "title" : "func zIndex(Double) -> some View",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/streamdecklayout\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/streamdecklayout",
            "title" : "StreamDeckLayout",
            "type" : "struct"
          },
          {
            "title" : "Classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/init(client:info:capabilities:)",
                "title" : "init(client: StreamDeckClientProtocol, info: DeviceInfo, capabilities: DeviceCapabilities)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/capabilities",
                "title" : "let capabilities: DeviceCapabilities",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/info",
                "title" : "let info: DeviceInfo",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/inputeventhandler-swift.property",
                "title" : "var inputEventHandler: InputEventHandler?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/inputeventspublisher",
                "title" : "var inputEventsPublisher: AnyPublisher<InputEvent, Never>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/isclosed",
                "title" : "var isClosed: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/close()",
                "title" : "func close()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/fillkey(_:at:)",
                "title" : "func fillKey(UIColor, at: Int)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/fillscreen(_:)",
                "title" : "func fillScreen(UIColor)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/onclose(_:)",
                "title" : "func onClose(CloseHandler)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/render(_:)",
                "title" : "func render<Content>(Content)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/setbrightness(_:)",
                "title" : "func setBrightness(Int)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/setkeyimage(_:at:scaleaspectfit:)",
                "title" : "func setKeyImage(UIImage, at: Int, scaleAspectFit: Bool)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/setscreenimage(_:scaleaspectfit:)",
                "title" : "func setScreenImage(UIImage, scaleAspectFit: Bool)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/setwindowimage(_:at:scaleaspectfit:)",
                "title" : "func setWindowImage(UIImage, at: CGRect, scaleAspectFit: Bool)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/setwindowimage(_:scaleaspectfit:)",
                "title" : "func setWindowImage(UIImage, scaleAspectFit: Bool)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/showlogo()",
                "title" : "func showLogo()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/supports(_:)",
                "title" : "func supports(DeviceCapabilities.Features) -> Bool",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/closehandler",
                "title" : "StreamDeck.CloseHandler",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/inputeventhandler-swift.typealias",
                "title" : "StreamDeck.InputEventHandler",
                "type" : "typealias"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/minimumdriverversion",
                "title" : "static let minimumDriverVersion: Version",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeck\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeck\/==(_:_:)",
                    "title" : "static func == (StreamDeck, StreamDeck) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeck\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/hashable-implementations",
                "title" : "Hashable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeck\/id",
                    "title" : "var id: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/streamdeck\/identifiable-implementations",
                "title" : "Identifiable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/streamdeck",
            "title" : "StreamDeck",
            "type" : "class"
          },
          {
            "title" : "Protocols",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckclientprotocol\/close()",
                "title" : "func close()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckclientprotocol\/fillkey(red:green:blue:at:)",
                "title" : "func fillKey(red: UInt8, green: UInt8, blue: UInt8, at: Int)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckclientprotocol\/fillscreen(red:green:blue:)",
                "title" : "func fillScreen(red: UInt8, green: UInt8, blue: UInt8)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckclientprotocol\/setbrightness(_:)",
                "title" : "func setBrightness(Int)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckclientprotocol\/setinputeventhandler(_:)",
                "title" : "func setInputEventHandler(InputEventHandler)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckclientprotocol\/setkeyimage(_:at:)",
                "title" : "func setKeyImage(Data, at: Int)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckclientprotocol\/setscreenimage(_:)",
                "title" : "func setScreenImage(Data)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckclientprotocol\/setwindowimage(_:)",
                "title" : "func setWindowImage(Data)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckclientprotocol\/setwindowimage(_:at:)",
                "title" : "func setWindowImage(Data, at: CGRect)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckclientprotocol\/showlogo()",
                "title" : "func showLogo()",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/streamdeckclientprotocol",
            "title" : "StreamDeckClientProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckview\/streamdeckbody-swift.associatedtype",
                "title" : "StreamDeckBody",
                "type" : "associatedtype"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckview\/streamdeckbody-swift.property",
                "title" : "var streamDeckBody: Self.StreamDeckBody",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/streamdeckview",
            "title" : "StreamDeckView",
            "type" : "protocol"
          },
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/init(rawvalue:)",
                    "title" : "init(rawValue: UInt32)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/rawvalue",
                    "title" : "var rawValue: UInt32",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/fillkey",
                    "title" : "static let fillKey: DeviceCapabilities.Features",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/fillscreen",
                    "title" : "static let fillScreen: DeviceCapabilities.Features",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/flingevents",
                    "title" : "static let flingEvents: DeviceCapabilities.Features",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/keypressevents",
                    "title" : "static let keyPressEvents: DeviceCapabilities.Features",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/rotaryevents",
                    "title" : "static let rotaryEvents: DeviceCapabilities.Features",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/setbrightness",
                    "title" : "static let setBrightness: DeviceCapabilities.Features",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/setkeyimage",
                    "title" : "static let setKeyImage: DeviceCapabilities.Features",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/setscreenimage",
                    "title" : "static let setScreenImage: DeviceCapabilities.Features",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/setwindowimage",
                    "title" : "static let setWindowImage: DeviceCapabilities.Features",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/setwindowimageatxy",
                    "title" : "static let setWindowImageAtXY: DeviceCapabilities.Features",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/showlogo",
                    "title" : "static let showLogo: DeviceCapabilities.Features",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/touchevents",
                    "title" : "static let touchEvents: DeviceCapabilities.Features",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/init()",
                        "title" : "init()",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/contains(_:)",
                        "title" : "func contains(Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/formintersection(_:)",
                        "title" : "func formIntersection(Self)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/formsymmetricdifference(_:)",
                        "title" : "func formSymmetricDifference(Self)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/formunion(_:)",
                        "title" : "func formUnion(Self)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/insert(_:)",
                        "title" : "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/intersection(_:)",
                        "title" : "func intersection(Self) -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/remove(_:)",
                        "title" : "func remove(Self.Element) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/symmetricdifference(_:)",
                        "title" : "func symmetricDifference(Self) -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/union(_:)",
                        "title" : "func union(Self) -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/update(with:)",
                        "title" : "func update(with: Self.Element) -> Self.Element?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/optionset-implementations",
                    "title" : "OptionSet Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/init(_:)",
                        "title" : "init<S>(S)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/init(arrayliteral:)",
                        "title" : "init(arrayLiteral: Self.Element...)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/isempty",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/isdisjoint(with:)",
                        "title" : "func isDisjoint(with: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/isstrictsubset(of:)",
                        "title" : "func isStrictSubset(of: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/isstrictsuperset(of:)",
                        "title" : "func isStrictSuperset(of: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/issubset(of:)",
                        "title" : "func isSubset(of: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/issuperset(of:)",
                        "title" : "func isSuperset(of: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/subtract(_:)",
                        "title" : "func subtract(Self)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/subtracting(_:)",
                        "title" : "func subtracting(Self) -> Self",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct\/setalgebra-implementations",
                    "title" : "SetAlgebra Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.struct",
                "title" : "DeviceCapabilities.Features",
                "type" : "struct"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/init(keycount:keysize:keyrows:keycolumns:dialcount:screensize:keyarearect:windowrect:keyhorizontalspacing:keyverticalspacing:imageformat:transform:features:)",
                "title" : "init(keyCount: Int, keySize: CGSize?, keyRows: Int, keyColumns: Int, dialCount: Int, screenSize: CGSize?, keyAreaRect: CGRect?, windowRect: CGRect?, keyHorizontalSpacing: CGFloat, keyVerticalSpacing: CGFloat, imageFormat: ImageFormat, transform: CGAffineTransform, features: Features)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/dialcount",
                "title" : "let dialCount: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/features-swift.property",
                "title" : "let features: Features",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/keyareabottomspacing",
                "title" : "var keyAreaBottomSpacing: CGFloat",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/keyarealeadingspacing",
                "title" : "var keyAreaLeadingSpacing: CGFloat",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/keyarearect",
                "title" : "let keyAreaRect: CGRect?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/keyareatopspacing",
                "title" : "var keyAreaTopSpacing: CGFloat",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/keyareatrailingspacing",
                "title" : "var keyAreaTrailingSpacing: CGFloat",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/keycolumns",
                "title" : "let keyColumns: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/keycount",
                "title" : "let keyCount: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/keyhorizontalspacing",
                "title" : "let keyHorizontalSpacing: CGFloat",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/keyrows",
                "title" : "let keyRows: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/keysize",
                "title" : "let keySize: CGSize?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/keyverticalspacing",
                "title" : "let keyVerticalSpacing: CGFloat",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/screensize",
                "title" : "let screenSize: CGSize?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/windowarealeadingspacing",
                "title" : "var windowAreaLeadingSpacing: CGFloat",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/windowareatrailingspacing",
                "title" : "var windowAreaTrailingSpacing: CGFloat",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/windowrect",
                "title" : "let windowRect: CGRect?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/getdialareasectiondevicerect(_:)",
                "title" : "func getDialAreaSectionDeviceRect(Int) -> CGRect",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/getdialareasectionrect(_:)",
                "title" : "func getDialAreaSectionRect(Int) -> CGRect",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/devicecapabilities\/getkeyrect(_:)",
                "title" : "func getKeyRect(Int) -> CGRect",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/devicecapabilities",
            "title" : "DeviceCapabilities",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/deviceinfo\/init(vendorid:productid:manufacturer:productname:serialnumber:)",
                "title" : "init(vendorID: Int, productID: Int, manufacturer: String, productName: String, serialNumber: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/deviceinfo\/manufacturer",
                "title" : "let manufacturer: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/deviceinfo\/product",
                "title" : "let product: StreamDeckProduct?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/deviceinfo\/productid",
                "title" : "let productID: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/deviceinfo\/productname",
                "title" : "let productName: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/deviceinfo\/serialnumber",
                "title" : "let serialNumber: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/deviceinfo\/vendorid",
                "title" : "let vendorID: Int",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/deviceinfo\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/deviceinfo\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/deviceinfo",
            "title" : "DeviceInfo",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/init(rotate:press:touch:fling:dial:)-1yw81",
                "title" : "init(rotate: DialRotationHandler?, press: @MainActor (Int) -> Void, touch: TouchHandler?, fling: FlingHandler?, dial: DialProvider)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/init(rotate:press:touch:fling:dial:)-9gxl7",
                "title" : "init(rotate: DialRotationHandler?, press: DialPressHandler?, touch: TouchHandler?, fling: FlingHandler?, dial: DialProvider)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/body",
                "title" : "var body: some View",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/dialpresshandler",
                "title" : "StreamDeckDialAreaLayout.DialPressHandler",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/dialprovider",
                "title" : "StreamDeckDialAreaLayout.DialProvider",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/dialrotationhandler",
                "title" : "StreamDeckDialAreaLayout.DialRotationHandler",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/flinghandler",
                "title" : "StreamDeckDialAreaLayout.FlingHandler",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/touchhandler",
                "title" : "StreamDeckDialAreaLayout.TouchHandler",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accentcolor(_:)",
                    "title" : "func accentColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibility(activationpoint:)-2mf1m",
                    "title" : "func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibility(activationpoint:)-9k8c",
                    "title" : "func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibility(addtraits:)",
                    "title" : "func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibility(hidden:)",
                    "title" : "func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibility(hint:)",
                    "title" : "func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibility(identifier:)",
                    "title" : "func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibility(inputlabels:)",
                    "title" : "func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibility(label:)",
                    "title" : "func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibility(removetraits:)",
                    "title" : "func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibility(selectionidentifier:)",
                    "title" : "func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibility(sortpriority:)",
                    "title" : "func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibility(value:)",
                    "title" : "func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityaction(_:_:)",
                    "title" : "func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityaction(action:label:)",
                    "title" : "func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityaction(named:_:)-2xh7b",
                    "title" : "func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityaction(named:_:)-3v4jt",
                    "title" : "func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityaction(named:_:)-5xgq5",
                    "title" : "func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityactions(_:)",
                    "title" : "func accessibilityActions<Content>(() -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityactivationpoint(_:)-58ask",
                    "title" : "func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityactivationpoint(_:)-8q2x0",
                    "title" : "func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityaddtraits(_:)",
                    "title" : "func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityadjustableaction(_:)",
                    "title" : "func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitychartdescriptor(_:)",
                    "title" : "func accessibilityChartDescriptor<R>(R) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitychildren(children:)",
                    "title" : "func accessibilityChildren<V>(children: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitycustomcontent(_:_:importance:)-1z3kh",
                    "title" : "func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitycustomcontent(_:_:importance:)-21m37",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitycustomcontent(_:_:importance:)-2gjmh",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitycustomcontent(_:_:importance:)-3bvh9",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitycustomcontent(_:_:importance:)-3da62",
                    "title" : "func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitycustomcontent(_:_:importance:)-5h5uc",
                    "title" : "func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitycustomcontent(_:_:importance:)-6b23s",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitycustomcontent(_:_:importance:)-87jrp",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitydirecttouch(_:options:)",
                    "title" : "func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityelement(children:)",
                    "title" : "func accessibilityElement(children: AccessibilityChildBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityfocused(_:)",
                    "title" : "func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityfocused(_:equals:)",
                    "title" : "func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityheading(_:)",
                    "title" : "func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityhidden(_:)",
                    "title" : "func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityhint(_:)-6b0uj",
                    "title" : "func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityhint(_:)-9q7sp",
                    "title" : "func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityhint(_:)-jsi4",
                    "title" : "func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityidentifier(_:)",
                    "title" : "func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityignoresinvertcolors(_:)",
                    "title" : "func accessibilityIgnoresInvertColors(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityinputlabels(_:)-6982x",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityinputlabels(_:)-7ha5w",
                    "title" : "func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityinputlabels(_:)-7xt41",
                    "title" : "func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitylabel(_:)-20vi5",
                    "title" : "func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitylabel(_:)-8jg4q",
                    "title" : "func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitylabel(_:)-9i9gw",
                    "title" : "func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitylabeledpair(role:id:in:)",
                    "title" : "func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitylinkedgroup(id:in:)",
                    "title" : "func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityremovetraits(_:)",
                    "title" : "func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrepresentation(representation:)",
                    "title" : "func accessibilityRepresentation<V>(representation: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrespondstouserinteraction(_:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotor(_:entries:)-3yyay",
                    "title" : "func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotor(_:entries:)-5gng0",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotor(_:entries:)-6ddq5",
                    "title" : "func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotor(_:entries:)-8k0t3",
                    "title" : "func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotor(_:entries:entryid:entrylabel:)-3i8o5",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotor(_:entries:entryid:entrylabel:)-4gxvn",
                    "title" : "func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotor(_:entries:entryid:entrylabel:)-57427",
                    "title" : "func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotor(_:entries:entryid:entrylabel:)-j3vd",
                    "title" : "func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotor(_:entries:entrylabel:)-12qpt",
                    "title" : "func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotor(_:entries:entrylabel:)-340su",
                    "title" : "func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotor(_:entries:entrylabel:)-5esmu",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotor(_:entries:entrylabel:)-9j3ru",
                    "title" : "func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotor(_:textranges:)-3iwmv",
                    "title" : "func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotor(_:textranges:)-3myfl",
                    "title" : "func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotor(_:textranges:)-3z1fv",
                    "title" : "func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotor(_:textranges:)-61ivg",
                    "title" : "func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityrotorentry(id:in:)",
                    "title" : "func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityscrollaction(_:)",
                    "title" : "func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityshowslargecontentviewer()",
                    "title" : "func accessibilityShowsLargeContentViewer() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityshowslargecontentviewer(_:)",
                    "title" : "func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitysortpriority(_:)",
                    "title" : "func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilitytextcontenttype(_:)",
                    "title" : "func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityvalue(_:)-322je",
                    "title" : "func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityvalue(_:)-3tlhp",
                    "title" : "func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityvalue(_:)-9rxbm",
                    "title" : "func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/accessibilityzoomaction(_:)",
                    "title" : "func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/actionsheet(ispresented:content:)",
                    "title" : "func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/actionsheet(item:content:)",
                    "title" : "func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alert(_:ispresented:actions:)-30zrl",
                    "title" : "func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alert(_:ispresented:actions:)-3nre7",
                    "title" : "func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alert(_:ispresented:actions:)-6kcd9",
                    "title" : "func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alert(_:ispresented:actions:message:)-71u82",
                    "title" : "func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alert(_:ispresented:actions:message:)-81yr3",
                    "title" : "func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alert(_:ispresented:actions:message:)-8yd1m",
                    "title" : "func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alert(_:ispresented:presenting:actions:)-2pzrv",
                    "title" : "func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alert(_:ispresented:presenting:actions:)-5uwtj",
                    "title" : "func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alert(_:ispresented:presenting:actions:)-65bki",
                    "title" : "func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alert(_:ispresented:presenting:actions:message:)-3dc1c",
                    "title" : "func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alert(_:ispresented:presenting:actions:message:)-9g0mj",
                    "title" : "func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alert(_:ispresented:presenting:actions:message:)-9ut9y",
                    "title" : "func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alert(ispresented:content:)",
                    "title" : "func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alert(ispresented:error:actions:)",
                    "title" : "func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alert(ispresented:error:actions:message:)",
                    "title" : "func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alert(item:content:)",
                    "title" : "func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alignmentguide(_:computevalue:)-3r1gf",
                    "title" : "func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alignmentguide(_:computevalue:)-43q2w",
                    "title" : "func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/alloweddynamicrange(_:)",
                    "title" : "func allowedDynamicRange(Image.DynamicRange?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/allowshittesting(_:)",
                    "title" : "func allowsHitTesting(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/allowstightening(_:)",
                    "title" : "func allowsTightening(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/anchorpreference(key:value:transform:)",
                    "title" : "func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/animation(_:)",
                    "title" : "func animation(Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/animation(_:body:)",
                    "title" : "func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/animation(_:value:)",
                    "title" : "func animation<V>(Animation?, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/aspectratio(_:contentmode:)-1tsxu",
                    "title" : "func aspectRatio(CGSize, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/aspectratio(_:contentmode:)-3dpxx",
                    "title" : "func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/autocapitalization(_:)",
                    "title" : "func autocapitalization(UITextAutocapitalizationType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/autocorrectiondisabled(_:)",
                    "title" : "func autocorrectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/background(_:alignment:)",
                    "title" : "func background<Background>(Background, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/background(_:ignoressafeareaedges:)",
                    "title" : "func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/background(_:in:fillstyle:)-2zw4j",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/background(_:in:fillstyle:)-595yb",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/background(alignment:content:)",
                    "title" : "func background<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/background(ignoressafeareaedges:)",
                    "title" : "func background(ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/background(in:fillstyle:)-5ppai",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/background(in:fillstyle:)-672ny",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/backgroundpreferencevalue(_:_:)",
                    "title" : "func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/backgroundpreferencevalue(_:alignment:_:)",
                    "title" : "func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/backgroundstyle(_:)",
                    "title" : "func backgroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/badge(_:)-5p3ag",
                    "title" : "func badge<S>(S?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/badge(_:)-78geb",
                    "title" : "func badge(LocalizedStringKey?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/badge(_:)-8wfs2",
                    "title" : "func badge(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/badge(_:)-9yulk",
                    "title" : "func badge(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/badgeprominence(_:)",
                    "title" : "func badgeProminence(BadgeProminence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/baselineoffset(_:)",
                    "title" : "func baselineOffset(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/blendmode(_:)",
                    "title" : "func blendMode(BlendMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/blur(radius:opaque:)",
                    "title" : "func blur(radius: CGFloat, opaque: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/bold(_:)",
                    "title" : "func bold(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/border(_:width:)",
                    "title" : "func border<S>(S, width: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/brightness(_:)",
                    "title" : "func brightness(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/buttonbordershape(_:)",
                    "title" : "func buttonBorderShape(ButtonBorderShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/buttonrepeatbehavior(_:)",
                    "title" : "func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/buttonstyle(_:)-47a93",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/buttonstyle(_:)-9j2ej",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/clipshape(_:style:)",
                    "title" : "func clipShape<S>(S, style: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/clipped(antialiased:)",
                    "title" : "func clipped(antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/coloreffect(_:isenabled:)",
                    "title" : "func colorEffect(Shader, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/colorinvert()",
                    "title" : "func colorInvert() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/colormultiply(_:)",
                    "title" : "func colorMultiply(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/compositinggroup()",
                    "title" : "func compositingGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2as8y",
                    "title" : "func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/confirmationdialog(_:ispresented:titlevisibility:actions:)-39qj2",
                    "title" : "func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/confirmationdialog(_:ispresented:titlevisibility:actions:)-dguk",
                    "title" : "func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3e4qd",
                    "title" : "func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3o30o",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3o9qf",
                    "title" : "func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3f98o",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8thf3",
                    "title" : "func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-98vl1",
                    "title" : "func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1dt82",
                    "title" : "func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1ubw",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2x33k",
                    "title" : "func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/containerbackground(_:for:)",
                    "title" : "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/containerbackground(for:alignment:content:)",
                    "title" : "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/containerrelativeframe(_:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/containerrelativeframe(_:alignment:_:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/containerrelativeframe(_:count:span:spacing:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/containershape(_:)",
                    "title" : "func containerShape<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/contentmargins(_:_:for:)-1x820",
                    "title" : "func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/contentmargins(_:_:for:)-8i8q0",
                    "title" : "func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/contentmargins(_:for:)",
                    "title" : "func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/contentshape(_:_:eofill:)",
                    "title" : "func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/contentshape(_:eofill:)",
                    "title" : "func contentShape<S>(S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/contenttransition(_:)",
                    "title" : "func contentTransition(ContentTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/contextmenu(_:)",
                    "title" : "func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/contextmenu(forselectiontype:menu:primaryaction:)",
                    "title" : "func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/contextmenu(menuitems:)",
                    "title" : "func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/contextmenu(menuitems:preview:)",
                    "title" : "func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/contrast(_:)",
                    "title" : "func contrast(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/controlgroupstyle(_:)",
                    "title" : "func controlGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/controlsize(_:)",
                    "title" : "func controlSize(ControlSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/coordinatespace(_:)",
                    "title" : "func coordinateSpace(NamedCoordinateSpace) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/coordinatespace(name:)",
                    "title" : "func coordinateSpace<T>(name: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/cornerradius(_:antialiased:)",
                    "title" : "func cornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/datepickerstyle(_:)",
                    "title" : "func datePickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/defaultappstorage(_:)",
                    "title" : "func defaultAppStorage(UserDefaults) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/defaultfocus(_:_:priority:)",
                    "title" : "func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/defaulthovereffect(_:)",
                    "title" : "func defaultHoverEffect(HoverEffect?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/defaultscrollanchor(_:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/deferssystemgestures(on:)",
                    "title" : "func defersSystemGestures(on: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/deletedisabled(_:)",
                    "title" : "func deleteDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/dialogsuppressiontoggle(_:issuppressed:)-3o72q",
                    "title" : "func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/dialogsuppressiontoggle(_:issuppressed:)-4dkp6",
                    "title" : "func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/dialogsuppressiontoggle(_:issuppressed:)-9u9d4",
                    "title" : "func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/dialogsuppressiontoggle(issuppressed:)",
                    "title" : "func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/disableautocorrection(_:)",
                    "title" : "func disableAutocorrection(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/disabled(_:)",
                    "title" : "func disabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/disclosuregroupstyle(_:)",
                    "title" : "func disclosureGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/distortioneffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/draggable(_:)",
                    "title" : "func draggable<T>(() -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/draggable(_:preview:)",
                    "title" : "func draggable<V, T>(() -> T, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/drawinggroup(opaque:colormode:)",
                    "title" : "func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/dropdestination(for:action:istargeted:)",
                    "title" : "func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/dynamictypesize(_:)",
                    "title" : "func dynamicTypeSize(DynamicTypeSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/edgesignoringsafearea(_:)",
                    "title" : "func edgesIgnoringSafeArea(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/environment(_:)",
                    "title" : "func environment<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/environment(_:_:)",
                    "title" : "func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/environmentobject(_:)",
                    "title" : "func environmentObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/filedialogbrowseroptions(_:)",
                    "title" : "func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/filedialogconfirmationlabel(_:)-5rzmh",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/filedialogconfirmationlabel(_:)-5xvoe",
                    "title" : "func fileDialogConfirmationLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/filedialogconfirmationlabel(_:)-81irz",
                    "title" : "func fileDialogConfirmationLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/filedialogcustomizationid(_:)",
                    "title" : "func fileDialogCustomizationID(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/filedialogdefaultdirectory(_:)",
                    "title" : "func fileDialogDefaultDirectory(URL?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/filedialogimportsunresolvedaliases(_:)",
                    "title" : "func fileDialogImportsUnresolvedAliases(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/filedialogmessage(_:)-5eccn",
                    "title" : "func fileDialogMessage(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/filedialogmessage(_:)-6hpkq",
                    "title" : "func fileDialogMessage<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/filedialogmessage(_:)-6qxzf",
                    "title" : "func fileDialogMessage(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/filedialogurlenabled(_:)",
                    "title" : "func fileDialogURLEnabled(Predicate<URL>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7gt2j",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-94bdk",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6mw3w",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-zhld",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7vgj1",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8q9ps",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-1vj1i",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-nlwz",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fileexporterfilenamelabel(_:)-2ossz",
                    "title" : "func fileExporterFilenameLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fileexporterfilenamelabel(_:)-30tub",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fileexporterfilenamelabel(_:)-8iiig",
                    "title" : "func fileExporterFilenameLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/filemover(ispresented:file:oncompletion:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/filemover(ispresented:file:oncompletion:oncancellation:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/filemover(ispresented:files:oncompletion:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/filemover(ispresented:files:oncompletion:oncancellation:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/finddisabled(_:)",
                    "title" : "func findDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/findnavigator(ispresented:)",
                    "title" : "func findNavigator(isPresented: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fixedsize()",
                    "title" : "func fixedSize() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fixedsize(horizontal:vertical:)",
                    "title" : "func fixedSize(horizontal: Bool, vertical: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/flipsforrighttoleftlayoutdirection(_:)",
                    "title" : "func flipsForRightToLeftLayoutDirection(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/focuseffectdisabled(_:)",
                    "title" : "func focusEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/focusable(_:)",
                    "title" : "func focusable(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/focusable(_:interactions:)",
                    "title" : "func focusable(Bool, interactions: FocusInteractions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/focused(_:)",
                    "title" : "func focused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/focused(_:equals:)",
                    "title" : "func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/focusedobject(_:)-57di0",
                    "title" : "func focusedObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/focusedobject(_:)-8kv3t",
                    "title" : "func focusedObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/focusedsceneobject(_:)-4a8s",
                    "title" : "func focusedSceneObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/focusedsceneobject(_:)-9ppq1",
                    "title" : "func focusedSceneObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/focusedscenevalue(_:_:)-8sq3k",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/focusedscenevalue(_:_:)-91ul0",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/focusedvalue(_:)",
                    "title" : "func focusedValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/focusedvalue(_:_:)-1kvha",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/focusedvalue(_:_:)-3ahqp",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/font(_:)",
                    "title" : "func font(Font?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fontdesign(_:)",
                    "title" : "func fontDesign(Font.Design?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fontweight(_:)",
                    "title" : "func fontWeight(Font.Weight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fontwidth(_:)",
                    "title" : "func fontWidth(Font.Width?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/foregroundstyle(_:)",
                    "title" : "func foregroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/foregroundstyle(_:_:)",
                    "title" : "func foregroundStyle<S1, S2>(S1, S2) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/foregroundstyle(_:_:_:)",
                    "title" : "func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/formstyle(_:)",
                    "title" : "func formStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/frame()",
                    "title" : "func frame() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/frame(width:height:alignment:)",
                    "title" : "func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fullscreencover(ispresented:ondismiss:content:)",
                    "title" : "func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/fullscreencover(item:ondismiss:content:)",
                    "title" : "func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/gaugestyle(_:)",
                    "title" : "func gaugeStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/geometrygroup()",
                    "title" : "func geometryGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/gesture(_:including:)",
                    "title" : "func gesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/grayscale(_:)",
                    "title" : "func grayscale(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/gridcellanchor(_:)",
                    "title" : "func gridCellAnchor(UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/gridcellcolumns(_:)",
                    "title" : "func gridCellColumns(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/gridcellunsizedaxes(_:)",
                    "title" : "func gridCellUnsizedAxes(Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/gridcolumnalignment(_:)",
                    "title" : "func gridColumnAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/groupboxstyle(_:)",
                    "title" : "func groupBoxStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/handlesexternalevents(preferring:allowing:)",
                    "title" : "func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/headerprominence(_:)",
                    "title" : "func headerProminence(Prominence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/help(_:)-4er6q",
                    "title" : "func help(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/help(_:)-5wv9n",
                    "title" : "func help(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/help(_:)-7u4lj",
                    "title" : "func help<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/hidden()",
                    "title" : "func hidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/highprioritygesture(_:including:)",
                    "title" : "func highPriorityGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/hovereffect(_:)",
                    "title" : "func hoverEffect(HoverEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/hovereffect(_:isenabled:)",
                    "title" : "func hoverEffect(HoverEffect, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/hovereffectdisabled(_:)",
                    "title" : "func hoverEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/huerotation(_:)",
                    "title" : "func hueRotation(Angle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/id(_:)",
                    "title" : "func id<ID>(ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/ignoressafearea(_:edges:)",
                    "title" : "func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/imagescale(_:)",
                    "title" : "func imageScale(Image.Scale) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/indexviewstyle(_:)",
                    "title" : "func indexViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/inspector(ispresented:content:)",
                    "title" : "func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/inspectorcolumnwidth(_:)",
                    "title" : "func inspectorColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/inspectorcolumnwidth(min:ideal:max:)",
                    "title" : "func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/interactionactivitytrackingtag(_:)",
                    "title" : "func interactionActivityTrackingTag(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/interactivedismissdisabled(_:)",
                    "title" : "func interactiveDismissDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/invalidatablecontent(_:)",
                    "title" : "func invalidatableContent(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/italic(_:)",
                    "title" : "func italic(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/itemprovider(_:)",
                    "title" : "func itemProvider(Optional<() -> NSItemProvider?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/kerning(_:)",
                    "title" : "func kerning(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/keyboardshortcut(_:)-5w9x4",
                    "title" : "func keyboardShortcut(KeyboardShortcut?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/keyboardshortcut(_:)-7i2d4",
                    "title" : "func keyboardShortcut(KeyboardShortcut) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/keyboardshortcut(_:modifiers:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/keyboardshortcut(_:modifiers:localization:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/keyboardtype(_:)",
                    "title" : "func keyboardType(UIKeyboardType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/keyframeanimator(initialvalue:repeating:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/keyframeanimator(initialvalue:trigger:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/labelstyle(_:)",
                    "title" : "func labelStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/labeledcontentstyle(_:)",
                    "title" : "func labeledContentStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/labelshidden()",
                    "title" : "func labelsHidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/layereffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/layoutdirectionbehavior(_:)",
                    "title" : "func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/layoutpriority(_:)",
                    "title" : "func layoutPriority(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/layoutvalue(key:value:)",
                    "title" : "func layoutValue<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/linelimit(_:)-1bk7l",
                    "title" : "func lineLimit(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/linelimit(_:)-6c0lm",
                    "title" : "func lineLimit(PartialRangeFrom<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/linelimit(_:)-6ptjo",
                    "title" : "func lineLimit(ClosedRange<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/linelimit(_:)-8q4hu",
                    "title" : "func lineLimit(PartialRangeThrough<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/linelimit(_:reservesspace:)",
                    "title" : "func lineLimit(Int, reservesSpace: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/linespacing(_:)",
                    "title" : "func lineSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/listitemtint(_:)-1fdnt",
                    "title" : "func listItemTint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/listitemtint(_:)-75bxz",
                    "title" : "func listItemTint(ListItemTint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/listrowbackground(_:)",
                    "title" : "func listRowBackground<V>(V?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/listrowinsets(_:)",
                    "title" : "func listRowInsets(EdgeInsets?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/listrowseparator(_:edges:)",
                    "title" : "func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/listrowseparatortint(_:edges:)",
                    "title" : "func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/listrowspacing(_:)",
                    "title" : "func listRowSpacing(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/listsectionseparator(_:edges:)",
                    "title" : "func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/listsectionseparatortint(_:edges:)",
                    "title" : "func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/listsectionspacing(_:)-25hh",
                    "title" : "func listSectionSpacing(ListSectionSpacing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/listsectionspacing(_:)-5aulz",
                    "title" : "func listSectionSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/liststyle(_:)",
                    "title" : "func listStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/luminancetoalpha()",
                    "title" : "func luminanceToAlpha() -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/mask(_:)",
                    "title" : "func mask<Mask>(Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/mask(alignment:_:)",
                    "title" : "func mask<Mask>(alignment: Alignment, () -> Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/matchedgeometryeffect(id:in:properties:anchor:issource:)",
                    "title" : "func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/menuactiondismissbehavior(_:)",
                    "title" : "func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/menuindicator(_:)",
                    "title" : "func menuIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/menuorder(_:)",
                    "title" : "func menuOrder(MenuOrder) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/menustyle(_:)",
                    "title" : "func menuStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/minimumscalefactor(_:)",
                    "title" : "func minimumScaleFactor(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/modifier(_:)",
                    "title" : "func modifier<T>(T) -> ModifiedContent<Self, T>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/monospaced(_:)",
                    "title" : "func monospaced(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/monospaceddigit()",
                    "title" : "func monospacedDigit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/movedisabled(_:)",
                    "title" : "func moveDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(TextAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationbarbackbuttonhidden(_:)",
                    "title" : "func navigationBarBackButtonHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationbarhidden(_:)",
                    "title" : "func navigationBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationbaritems(leading:)",
                    "title" : "func navigationBarItems<L>(leading: L) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationbaritems(leading:trailing:)",
                    "title" : "func navigationBarItems<L, T>(leading: L, trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationbaritems(trailing:)",
                    "title" : "func navigationBarItems<T>(trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationbartitle(_:)-4kzrx",
                    "title" : "func navigationBarTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationbartitle(_:)-6f4f7",
                    "title" : "func navigationBarTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationbartitle(_:)-6x86a",
                    "title" : "func navigationBarTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationbartitle(_:displaymode:)-193hw",
                    "title" : "func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationbartitle(_:displaymode:)-4p6fm",
                    "title" : "func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationbartitle(_:displaymode:)-8cuzs",
                    "title" : "func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationbartitledisplaymode(_:)",
                    "title" : "func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationdestination(for:destination:)",
                    "title" : "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationdestination(ispresented:destination:)",
                    "title" : "func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationdestination(item:destination:)",
                    "title" : "func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationdocument(_:)",
                    "title" : "func navigationDocument(URL) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationdocument(_:preview:)-23dxy",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationdocument(_:preview:)-25gn3",
                    "title" : "func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationdocument(_:preview:)-5bf85",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationdocument(_:preview:)-65f9e",
                    "title" : "func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationsplitviewcolumnwidth(_:)",
                    "title" : "func navigationSplitViewColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationsplitviewcolumnwidth(min:ideal:max:)",
                    "title" : "func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationsplitviewstyle(_:)",
                    "title" : "func navigationSplitViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationtitle(_:)-1u3w5",
                    "title" : "func navigationTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationtitle(_:)-5pg2b",
                    "title" : "func navigationTitle<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationtitle(_:)-6rx1z",
                    "title" : "func navigationTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationtitle(_:)-8thro",
                    "title" : "func navigationTitle(Binding<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationtitle(_:)-973me",
                    "title" : "func navigationTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/navigationviewstyle(_:)",
                    "title" : "func navigationViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/offset(_:)",
                    "title" : "func offset(CGSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/offset(x:y:)",
                    "title" : "func offset(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onappear(perform:)",
                    "title" : "func onAppear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onchange(of:initial:_:)-15h0c",
                    "title" : "func onChange<V>(of: V, initial: Bool, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onchange(of:initial:_:)-6s0fq",
                    "title" : "func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onchange(of:perform:)",
                    "title" : "func onChange<V>(of: V, perform: (V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/oncontinueuseractivity(_:perform:)",
                    "title" : "func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/oncontinuoushover(coordinatespace:perform:)",
                    "title" : "func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/ondrag(_:)",
                    "title" : "func onDrag(() -> NSItemProvider) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/ondrag(_:preview:)",
                    "title" : "func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/ondrop(of:delegate:)-4xh83",
                    "title" : "func onDrop(of: [UTType], delegate: DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/ondrop(of:delegate:)-806m6",
                    "title" : "func onDrop(of: [String], delegate: DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/ondrop(of:istargeted:perform:)-2odcl",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/ondrop(of:istargeted:perform:)-66ts9",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/ondrop(of:istargeted:perform:)-7fw3f",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/ondrop(of:istargeted:perform:)-9bntp",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onhover(perform:)",
                    "title" : "func onHover(perform: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onkeypress(_:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onkeypress(_:phases:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onkeypress(characters:phases:action:)",
                    "title" : "func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onkeypress(keys:phases:action:)",
                    "title" : "func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onkeypress(phases:action:)",
                    "title" : "func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onlongpressgesture(minimumduration:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onlongpressgesture(minimumduration:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onpreferencechange(_:perform:)",
                    "title" : "func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onreceive(_:perform:)",
                    "title" : "func onReceive<P>(P, perform: (P.Output) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/onsubmit(of:_:)",
                    "title" : "func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/ontapgesture(count:coordinatespace:perform:)",
                    "title" : "func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/ontapgesture(count:perform:)",
                    "title" : "func onTapGesture(count: Int, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/opacity(_:)",
                    "title" : "func opacity(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/overlay(_:alignment:)",
                    "title" : "func overlay<Overlay>(Overlay, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/overlay(_:ignoressafeareaedges:)",
                    "title" : "func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/overlay(_:in:fillstyle:)",
                    "title" : "func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/overlay(alignment:content:)",
                    "title" : "func overlay<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/overlaypreferencevalue(_:_:)",
                    "title" : "func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/overlaypreferencevalue(_:alignment:_:)",
                    "title" : "func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/padding(_:)-1d6cy",
                    "title" : "func padding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/padding(_:)-zg52",
                    "title" : "func padding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/paletteselectioneffect(_:)",
                    "title" : "func paletteSelectionEffect(PaletteSelectionEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/persistentsystemoverlays(_:)",
                    "title" : "func persistentSystemOverlays(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/phaseanimator(_:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/phaseanimator(_:trigger:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/pickerstyle(_:)",
                    "title" : "func pickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/popover(ispresented:attachmentanchor:arrowedge:content:)",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/popover(item:attachmentanchor:arrowedge:content:)",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/position(_:)",
                    "title" : "func position(CGPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/position(x:y:)",
                    "title" : "func position(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/preference(key:value:)",
                    "title" : "func preference<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/preferredcolorscheme(_:)",
                    "title" : "func preferredColorScheme(ColorScheme?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/presentationbackground(_:)",
                    "title" : "func presentationBackground<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/presentationbackground(alignment:content:)",
                    "title" : "func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/presentationbackgroundinteraction(_:)",
                    "title" : "func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/presentationcompactadaptation(_:)",
                    "title" : "func presentationCompactAdaptation(PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/presentationcompactadaptation(horizontal:vertical:)",
                    "title" : "func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/presentationcontentinteraction(_:)",
                    "title" : "func presentationContentInteraction(PresentationContentInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/presentationcornerradius(_:)",
                    "title" : "func presentationCornerRadius(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/presentationdetents(_:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/presentationdetents(_:selection:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/presentationdragindicator(_:)",
                    "title" : "func presentationDragIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/previewcontext(_:)",
                    "title" : "func previewContext<C>(C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/previewdevice(_:)",
                    "title" : "func previewDevice(PreviewDevice?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/previewdisplayname(_:)",
                    "title" : "func previewDisplayName(String?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/previewinterfaceorientation(_:)",
                    "title" : "func previewInterfaceOrientation(InterfaceOrientation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/previewlayout(_:)",
                    "title" : "func previewLayout(PreviewLayout) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/privacysensitive(_:)",
                    "title" : "func privacySensitive(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/progressviewstyle(_:)",
                    "title" : "func progressViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/projectioneffect(_:)",
                    "title" : "func projectionEffect(ProjectionTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/redacted(reason:)",
                    "title" : "func redacted(reason: RedactionReasons) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/refreshable(action:)",
                    "title" : "func refreshable(action: () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/renameaction(_:)-105hk",
                    "title" : "func renameAction(() -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/renameaction(_:)-2ixci",
                    "title" : "func renameAction(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/replacedisabled(_:)",
                    "title" : "func replaceDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/rotation3deffect(_:axis:anchor:anchorz:perspective:)",
                    "title" : "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/rotationeffect(_:anchor:)",
                    "title" : "func rotationEffect(Angle, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/safeareainset(edge:alignment:spacing:content:)-80bcf",
                    "title" : "func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/safeareainset(edge:alignment:spacing:content:)-9ldts",
                    "title" : "func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/safeareapadding(_:)-24xwo",
                    "title" : "func safeAreaPadding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/safeareapadding(_:)-ex66",
                    "title" : "func safeAreaPadding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/safeareapadding(_:_:)",
                    "title" : "func safeAreaPadding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/saturation(_:)",
                    "title" : "func saturation(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scaleeffect(_:anchor:)-2vqi2",
                    "title" : "func scaleEffect(CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scaleeffect(_:anchor:)-8sz22",
                    "title" : "func scaleEffect(CGSize, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scaleeffect(x:y:anchor:)",
                    "title" : "func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scaledtofill()",
                    "title" : "func scaledToFill() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scaledtofit()",
                    "title" : "func scaledToFit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scenepadding(_:)",
                    "title" : "func scenePadding(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scenepadding(_:edges:)",
                    "title" : "func scenePadding(ScenePadding, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scrollbouncebehavior(_:axes:)",
                    "title" : "func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scrollclipdisabled(_:)",
                    "title" : "func scrollClipDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scrollcontentbackground(_:)",
                    "title" : "func scrollContentBackground(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scrolldisabled(_:)",
                    "title" : "func scrollDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scrolldismisseskeyboard(_:)",
                    "title" : "func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scrollindicators(_:axes:)",
                    "title" : "func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scrollindicatorsflash(onappear:)",
                    "title" : "func scrollIndicatorsFlash(onAppear: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scrollindicatorsflash(trigger:)",
                    "title" : "func scrollIndicatorsFlash(trigger: some Equatable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scrollposition(id:anchor:)",
                    "title" : "func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scrolltargetbehavior(_:)",
                    "title" : "func scrollTargetBehavior(some ScrollTargetBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scrolltargetlayout(isenabled:)",
                    "title" : "func scrollTargetLayout(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scrolltransition(_:axis:transition:)",
                    "title" : "func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/scrolltransition(topleading:bottomtrailing:axis:transition:)",
                    "title" : "func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchcompletion(_:)",
                    "title" : "func searchCompletion(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchdictationbehavior(_:)",
                    "title" : "func searchDictationBehavior(TextInputDictationBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchscopes(_:activation:_:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchscopes(_:scopes:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchsuggestions(_:)",
                    "title" : "func searchSuggestions<S>(() -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchsuggestions(_:for:)",
                    "title" : "func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2mrp2",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5gu7",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6rris",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:editabletokens:placement:prompt:token:)-5o0k8",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:editabletokens:placement:prompt:token:)-7rs8y",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:editabletokens:placement:prompt:token:)-8eqag",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:ispresented:placement:prompt:)-17ltf",
                    "title" : "func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:ispresented:placement:prompt:)-1tjqr",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:ispresented:placement:prompt:)-3j0xf",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:placement:prompt:)-36b58",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:placement:prompt:)-8tzjo",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:placement:prompt:)-8ymcc",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:placement:prompt:suggestions:)-1vaqc",
                    "title" : "func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:placement:prompt:suggestions:)-3n31w",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:placement:prompt:suggestions:)-7tqzt",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:tokens:ispresented:placement:prompt:token:)-39iqk",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:tokens:ispresented:placement:prompt:token:)-7da6n",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:tokens:ispresented:placement:prompt:token:)-9cmoz",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:tokens:placement:prompt:token:)-3b6ob",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:tokens:placement:prompt:token:)-9xp9u",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:tokens:placement:prompt:token:)-grxr",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-2pl0m",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-93vyd",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9ncz2",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2wdho",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7j00g",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7mql7",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/selectiondisabled(_:)",
                    "title" : "func selectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/sensoryfeedback(_:trigger:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/sensoryfeedback(_:trigger:condition:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/sensoryfeedback(trigger:_:)",
                    "title" : "func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/shadow(color:radius:x:y:)",
                    "title" : "func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/sheet(ispresented:ondismiss:content:)",
                    "title" : "func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/sheet(item:ondismiss:content:)",
                    "title" : "func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/simultaneousgesture(_:including:)",
                    "title" : "func simultaneousGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/speechadjustedpitch(_:)",
                    "title" : "func speechAdjustedPitch(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/speechalwaysincludespunctuation(_:)",
                    "title" : "func speechAlwaysIncludesPunctuation(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/speechannouncementsqueued(_:)",
                    "title" : "func speechAnnouncementsQueued(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/speechspellsoutcharacters(_:)",
                    "title" : "func speechSpellsOutCharacters(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/springloadingbehavior(_:)",
                    "title" : "func springLoadingBehavior(SpringLoadingBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/statusbar(hidden:)",
                    "title" : "func statusBar(hidden: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/statusbarhidden(_:)",
                    "title" : "func statusBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/strikethrough(_:pattern:color:)",
                    "title" : "func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/submitlabel(_:)",
                    "title" : "func submitLabel(SubmitLabel) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/submitscope(_:)",
                    "title" : "func submitScope(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/swipeactions(edge:allowsfullswipe:content:)",
                    "title" : "func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/symboleffect(_:options:isactive:)",
                    "title" : "func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/symboleffect(_:options:value:)",
                    "title" : "func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/symboleffectsremoved(_:)",
                    "title" : "func symbolEffectsRemoved(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/symbolrenderingmode(_:)",
                    "title" : "func symbolRenderingMode(SymbolRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/symbolvariant(_:)",
                    "title" : "func symbolVariant(SymbolVariants) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/tabitem(_:)",
                    "title" : "func tabItem<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/tabviewstyle(_:)",
                    "title" : "func tabViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/tablecolumnheaders(_:)",
                    "title" : "func tableColumnHeaders(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/tablestyle(_:)",
                    "title" : "func tableStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/tag(_:)",
                    "title" : "func tag<V>(V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/task(id:priority:_:)",
                    "title" : "func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/textcase(_:)",
                    "title" : "func textCase(Text.Case?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/textcontenttype(_:)",
                    "title" : "func textContentType(UITextContentType?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/texteditorstyle(_:)",
                    "title" : "func textEditorStyle(some TextEditorStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/textfieldstyle(_:)",
                    "title" : "func textFieldStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/textinputautocapitalization(_:)",
                    "title" : "func textInputAutocapitalization(TextInputAutocapitalization?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/textscale(_:isenabled:)",
                    "title" : "func textScale(Text.Scale, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/textselection(_:)",
                    "title" : "func textSelection<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/tint(_:)",
                    "title" : "func tint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/togglestyle(_:)",
                    "title" : "func toggleStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/toolbar(_:for:)",
                    "title" : "func toolbar(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/toolbar(content:)-2u9gy",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/toolbar(content:)-76pc5",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/toolbar(id:content:)",
                    "title" : "func toolbar<Content>(id: String, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/toolbar(removing:)",
                    "title" : "func toolbar(removing: ToolbarDefaultItemKind?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/toolbarbackground(_:for:)",
                    "title" : "func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/toolbarcolorscheme(_:for:)",
                    "title" : "func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/toolbarrole(_:)",
                    "title" : "func toolbarRole(ToolbarRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/toolbartitledisplaymode(_:)",
                    "title" : "func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/toolbartitlemenu(content:)",
                    "title" : "func toolbarTitleMenu<C>(content: () -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/tracking(_:)",
                    "title" : "func tracking(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/transaction(_:)",
                    "title" : "func transaction((inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/transaction(_:body:)",
                    "title" : "func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/transaction(value:_:)",
                    "title" : "func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/transformanchorpreference(key:value:transform:)",
                    "title" : "func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/transformeffect(_:)",
                    "title" : "func transformEffect(CGAffineTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/transformenvironment(_:transform:)",
                    "title" : "func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/transformpreference(_:_:)",
                    "title" : "func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/transition(_:)",
                    "title" : "func transition(AnyTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/truncationmode(_:)",
                    "title" : "func truncationMode(Text.TruncationMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/typeselectequivalent(_:)-3frrp",
                    "title" : "func typeSelectEquivalent(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/typeselectequivalent(_:)-7ltbq",
                    "title" : "func typeSelectEquivalent<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/typeselectequivalent(_:)-9ul7v",
                    "title" : "func typeSelectEquivalent(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/typesettinglanguage(_:isenabled:)-2xmlq",
                    "title" : "func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/typesettinglanguage(_:isenabled:)-lul2",
                    "title" : "func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/underline(_:pattern:color:)",
                    "title" : "func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/unredacted()",
                    "title" : "func unredacted() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/useractivity(_:element:_:)",
                    "title" : "func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/useractivity(_:isactive:_:)",
                    "title" : "func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/visualeffect(_:)",
                    "title" : "func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/zindex(_:)",
                    "title" : "func zIndex(Double) -> some View",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/streamdeckdialarealayout",
            "title" : "StreamDeckDialAreaLayout",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/init(rotate:press:touch:content:)-1zcbz",
                "title" : "init(rotate: DialRotationHandler?, press: DialPressHandler?, touch: TouchHandler?, content: @MainActor () -> Content)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/init(rotate:press:touch:content:)-8ibcx",
                "title" : "init(rotate: DialRotationHandler?, press: @MainActor () -> Void, touch: TouchHandler?, content: @MainActor () -> Content)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/body",
                "title" : "var body: some View",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/dialpresshandler",
                "title" : "StreamDeckDialView.DialPressHandler",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/dialrotationhandler",
                "title" : "StreamDeckDialView.DialRotationHandler",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/touchhandler",
                "title" : "StreamDeckDialView.TouchHandler",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accentcolor(_:)",
                    "title" : "func accentColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibility(activationpoint:)-6wvk5",
                    "title" : "func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibility(activationpoint:)-9snoh",
                    "title" : "func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibility(addtraits:)",
                    "title" : "func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibility(hidden:)",
                    "title" : "func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibility(hint:)",
                    "title" : "func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibility(identifier:)",
                    "title" : "func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibility(inputlabels:)",
                    "title" : "func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibility(label:)",
                    "title" : "func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibility(removetraits:)",
                    "title" : "func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibility(selectionidentifier:)",
                    "title" : "func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibility(sortpriority:)",
                    "title" : "func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibility(value:)",
                    "title" : "func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityaction(_:_:)",
                    "title" : "func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityaction(action:label:)",
                    "title" : "func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityaction(named:_:)-1kguu",
                    "title" : "func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityaction(named:_:)-24owa",
                    "title" : "func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityaction(named:_:)-3hhl",
                    "title" : "func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityactions(_:)",
                    "title" : "func accessibilityActions<Content>(() -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityactivationpoint(_:)-1442t",
                    "title" : "func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityactivationpoint(_:)-z485",
                    "title" : "func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityaddtraits(_:)",
                    "title" : "func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityadjustableaction(_:)",
                    "title" : "func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitychartdescriptor(_:)",
                    "title" : "func accessibilityChartDescriptor<R>(R) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitychildren(children:)",
                    "title" : "func accessibilityChildren<V>(children: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitycustomcontent(_:_:importance:)-1l3x5",
                    "title" : "func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitycustomcontent(_:_:importance:)-36dh",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitycustomcontent(_:_:importance:)-4h9yq",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitycustomcontent(_:_:importance:)-689lu",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitycustomcontent(_:_:importance:)-6urlb",
                    "title" : "func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitycustomcontent(_:_:importance:)-77fbt",
                    "title" : "func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitycustomcontent(_:_:importance:)-7hajq",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitycustomcontent(_:_:importance:)-91ht2",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitydirecttouch(_:options:)",
                    "title" : "func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityelement(children:)",
                    "title" : "func accessibilityElement(children: AccessibilityChildBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityfocused(_:)",
                    "title" : "func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityfocused(_:equals:)",
                    "title" : "func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityheading(_:)",
                    "title" : "func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityhidden(_:)",
                    "title" : "func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityhint(_:)-4s5mr",
                    "title" : "func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityhint(_:)-58o9v",
                    "title" : "func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityhint(_:)-8fcey",
                    "title" : "func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityidentifier(_:)",
                    "title" : "func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityignoresinvertcolors(_:)",
                    "title" : "func accessibilityIgnoresInvertColors(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityinputlabels(_:)-1ehod",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityinputlabels(_:)-8sr4",
                    "title" : "func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityinputlabels(_:)-9mz1r",
                    "title" : "func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitylabel(_:)-1rg7s",
                    "title" : "func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitylabel(_:)-4oiis",
                    "title" : "func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitylabel(_:)-k2x",
                    "title" : "func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitylabeledpair(role:id:in:)",
                    "title" : "func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitylinkedgroup(id:in:)",
                    "title" : "func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityremovetraits(_:)",
                    "title" : "func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrepresentation(representation:)",
                    "title" : "func accessibilityRepresentation<V>(representation: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrespondstouserinteraction(_:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotor(_:entries:)-1pc8",
                    "title" : "func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotor(_:entries:)-2s34f",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotor(_:entries:)-72ac3",
                    "title" : "func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotor(_:entries:)-8h4lr",
                    "title" : "func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotor(_:entries:entryid:entrylabel:)-54grk",
                    "title" : "func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6tp40",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8186r",
                    "title" : "func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9870e",
                    "title" : "func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotor(_:entries:entrylabel:)-1yi9e",
                    "title" : "func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotor(_:entries:entrylabel:)-275fg",
                    "title" : "func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotor(_:entries:entrylabel:)-5m14o",
                    "title" : "func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotor(_:entries:entrylabel:)-5o08e",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotor(_:textranges:)-1h1wl",
                    "title" : "func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotor(_:textranges:)-2bboz",
                    "title" : "func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotor(_:textranges:)-3tkpy",
                    "title" : "func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotor(_:textranges:)-4ko86",
                    "title" : "func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityrotorentry(id:in:)",
                    "title" : "func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityscrollaction(_:)",
                    "title" : "func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityshowslargecontentviewer()",
                    "title" : "func accessibilityShowsLargeContentViewer() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityshowslargecontentviewer(_:)",
                    "title" : "func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitysortpriority(_:)",
                    "title" : "func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilitytextcontenttype(_:)",
                    "title" : "func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityvalue(_:)-1ofpl",
                    "title" : "func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityvalue(_:)-8e701",
                    "title" : "func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityvalue(_:)-9ey2u",
                    "title" : "func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/accessibilityzoomaction(_:)",
                    "title" : "func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/actionsheet(ispresented:content:)",
                    "title" : "func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/actionsheet(item:content:)",
                    "title" : "func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alert(_:ispresented:actions:)-4dsba",
                    "title" : "func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alert(_:ispresented:actions:)-5u8q",
                    "title" : "func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alert(_:ispresented:actions:)-85vnj",
                    "title" : "func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alert(_:ispresented:actions:message:)-2uby7",
                    "title" : "func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alert(_:ispresented:actions:message:)-3pf1a",
                    "title" : "func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alert(_:ispresented:actions:message:)-3suty",
                    "title" : "func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alert(_:ispresented:presenting:actions:)-2xolm",
                    "title" : "func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alert(_:ispresented:presenting:actions:)-34mw6",
                    "title" : "func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alert(_:ispresented:presenting:actions:)-8634j",
                    "title" : "func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alert(_:ispresented:presenting:actions:message:)-27n6s",
                    "title" : "func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alert(_:ispresented:presenting:actions:message:)-3h40e",
                    "title" : "func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alert(_:ispresented:presenting:actions:message:)-3zcv2",
                    "title" : "func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alert(ispresented:content:)",
                    "title" : "func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alert(ispresented:error:actions:)",
                    "title" : "func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alert(ispresented:error:actions:message:)",
                    "title" : "func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alert(item:content:)",
                    "title" : "func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alignmentguide(_:computevalue:)-3v7u4",
                    "title" : "func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alignmentguide(_:computevalue:)-599n",
                    "title" : "func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/alloweddynamicrange(_:)",
                    "title" : "func allowedDynamicRange(Image.DynamicRange?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/allowshittesting(_:)",
                    "title" : "func allowsHitTesting(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/allowstightening(_:)",
                    "title" : "func allowsTightening(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/anchorpreference(key:value:transform:)",
                    "title" : "func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/animation(_:)",
                    "title" : "func animation(Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/animation(_:body:)",
                    "title" : "func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/animation(_:value:)",
                    "title" : "func animation<V>(Animation?, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/aspectratio(_:contentmode:)-4ksa3",
                    "title" : "func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/aspectratio(_:contentmode:)-8spa7",
                    "title" : "func aspectRatio(CGSize, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/autocapitalization(_:)",
                    "title" : "func autocapitalization(UITextAutocapitalizationType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/autocorrectiondisabled(_:)",
                    "title" : "func autocorrectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/background(_:alignment:)",
                    "title" : "func background<Background>(Background, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/background(_:ignoressafeareaedges:)",
                    "title" : "func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/background(_:in:fillstyle:)-4vpw3",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/background(_:in:fillstyle:)-8o31o",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/background(alignment:content:)",
                    "title" : "func background<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/background(ignoressafeareaedges:)",
                    "title" : "func background(ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/background(in:fillstyle:)-3lcga",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/background(in:fillstyle:)-6wj1z",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/backgroundpreferencevalue(_:_:)",
                    "title" : "func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/backgroundpreferencevalue(_:alignment:_:)",
                    "title" : "func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/backgroundstyle(_:)",
                    "title" : "func backgroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/badge(_:)-2fnlu",
                    "title" : "func badge(LocalizedStringKey?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/badge(_:)-5oe2y",
                    "title" : "func badge(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/badge(_:)-6d0cq",
                    "title" : "func badge<S>(S?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/badge(_:)-8zklg",
                    "title" : "func badge(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/badgeprominence(_:)",
                    "title" : "func badgeProminence(BadgeProminence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/baselineoffset(_:)",
                    "title" : "func baselineOffset(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/blendmode(_:)",
                    "title" : "func blendMode(BlendMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/blur(radius:opaque:)",
                    "title" : "func blur(radius: CGFloat, opaque: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/bold(_:)",
                    "title" : "func bold(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/border(_:width:)",
                    "title" : "func border<S>(S, width: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/brightness(_:)",
                    "title" : "func brightness(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/buttonbordershape(_:)",
                    "title" : "func buttonBorderShape(ButtonBorderShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/buttonrepeatbehavior(_:)",
                    "title" : "func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/buttonstyle(_:)-29whe",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/buttonstyle(_:)-2j370",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/clipshape(_:style:)",
                    "title" : "func clipShape<S>(S, style: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/clipped(antialiased:)",
                    "title" : "func clipped(antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/coloreffect(_:isenabled:)",
                    "title" : "func colorEffect(Shader, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/colorinvert()",
                    "title" : "func colorInvert() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/colormultiply(_:)",
                    "title" : "func colorMultiply(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/compositinggroup()",
                    "title" : "func compositingGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2j8xy",
                    "title" : "func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2lhc6",
                    "title" : "func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-46l18",
                    "title" : "func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2sduc",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7bgvp",
                    "title" : "func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7qve",
                    "title" : "func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-25oaa",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5v9qc",
                    "title" : "func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-ffva",
                    "title" : "func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3rskb",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5ejox",
                    "title" : "func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8okgm",
                    "title" : "func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/containerbackground(_:for:)",
                    "title" : "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/containerbackground(for:alignment:content:)",
                    "title" : "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/containerrelativeframe(_:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/containerrelativeframe(_:alignment:_:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/containerrelativeframe(_:count:span:spacing:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/containershape(_:)",
                    "title" : "func containerShape<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/contentmargins(_:_:for:)-4qjku",
                    "title" : "func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/contentmargins(_:_:for:)-7espc",
                    "title" : "func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/contentmargins(_:for:)",
                    "title" : "func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/contentshape(_:_:eofill:)",
                    "title" : "func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/contentshape(_:eofill:)",
                    "title" : "func contentShape<S>(S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/contenttransition(_:)",
                    "title" : "func contentTransition(ContentTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/contextmenu(_:)",
                    "title" : "func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/contextmenu(forselectiontype:menu:primaryaction:)",
                    "title" : "func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/contextmenu(menuitems:)",
                    "title" : "func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/contextmenu(menuitems:preview:)",
                    "title" : "func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/contrast(_:)",
                    "title" : "func contrast(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/controlgroupstyle(_:)",
                    "title" : "func controlGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/controlsize(_:)",
                    "title" : "func controlSize(ControlSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/coordinatespace(_:)",
                    "title" : "func coordinateSpace(NamedCoordinateSpace) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/coordinatespace(name:)",
                    "title" : "func coordinateSpace<T>(name: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/cornerradius(_:antialiased:)",
                    "title" : "func cornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/datepickerstyle(_:)",
                    "title" : "func datePickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/defaultappstorage(_:)",
                    "title" : "func defaultAppStorage(UserDefaults) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/defaultfocus(_:_:priority:)",
                    "title" : "func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/defaulthovereffect(_:)",
                    "title" : "func defaultHoverEffect(HoverEffect?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/defaultscrollanchor(_:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/deferssystemgestures(on:)",
                    "title" : "func defersSystemGestures(on: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/deletedisabled(_:)",
                    "title" : "func deleteDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/dialogsuppressiontoggle(_:issuppressed:)-39b6k",
                    "title" : "func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/dialogsuppressiontoggle(_:issuppressed:)-9qek2",
                    "title" : "func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/dialogsuppressiontoggle(_:issuppressed:)-ej7l",
                    "title" : "func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/dialogsuppressiontoggle(issuppressed:)",
                    "title" : "func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/disableautocorrection(_:)",
                    "title" : "func disableAutocorrection(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/disabled(_:)",
                    "title" : "func disabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/disclosuregroupstyle(_:)",
                    "title" : "func disclosureGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/distortioneffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/draggable(_:)",
                    "title" : "func draggable<T>(() -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/draggable(_:preview:)",
                    "title" : "func draggable<V, T>(() -> T, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/drawinggroup(opaque:colormode:)",
                    "title" : "func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/dropdestination(for:action:istargeted:)",
                    "title" : "func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/dynamictypesize(_:)",
                    "title" : "func dynamicTypeSize(DynamicTypeSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/edgesignoringsafearea(_:)",
                    "title" : "func edgesIgnoringSafeArea(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/environment(_:)",
                    "title" : "func environment<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/environment(_:_:)",
                    "title" : "func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/environmentobject(_:)",
                    "title" : "func environmentObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/filedialogbrowseroptions(_:)",
                    "title" : "func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/filedialogconfirmationlabel(_:)-1eo3d",
                    "title" : "func fileDialogConfirmationLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/filedialogconfirmationlabel(_:)-84f79",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/filedialogconfirmationlabel(_:)-8cnsi",
                    "title" : "func fileDialogConfirmationLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/filedialogcustomizationid(_:)",
                    "title" : "func fileDialogCustomizationID(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/filedialogdefaultdirectory(_:)",
                    "title" : "func fileDialogDefaultDirectory(URL?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/filedialogimportsunresolvedaliases(_:)",
                    "title" : "func fileDialogImportsUnresolvedAliases(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/filedialogmessage(_:)-33u57",
                    "title" : "func fileDialogMessage<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/filedialogmessage(_:)-4becy",
                    "title" : "func fileDialogMessage(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/filedialogmessage(_:)-794k4",
                    "title" : "func fileDialogMessage(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/filedialogurlenabled(_:)",
                    "title" : "func fileDialogURLEnabled(Predicate<URL>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-19fuv",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4cys3",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1yhgl",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-4nhg7",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2x02e",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-ikz5",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3sga5",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-4e41i",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fileexporterfilenamelabel(_:)-1i96u",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fileexporterfilenamelabel(_:)-6q02b",
                    "title" : "func fileExporterFilenameLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fileexporterfilenamelabel(_:)-6wkcd",
                    "title" : "func fileExporterFilenameLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/filemover(ispresented:file:oncompletion:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/filemover(ispresented:file:oncompletion:oncancellation:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/filemover(ispresented:files:oncompletion:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/filemover(ispresented:files:oncompletion:oncancellation:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/finddisabled(_:)",
                    "title" : "func findDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/findnavigator(ispresented:)",
                    "title" : "func findNavigator(isPresented: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fixedsize()",
                    "title" : "func fixedSize() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fixedsize(horizontal:vertical:)",
                    "title" : "func fixedSize(horizontal: Bool, vertical: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/flipsforrighttoleftlayoutdirection(_:)",
                    "title" : "func flipsForRightToLeftLayoutDirection(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/focuseffectdisabled(_:)",
                    "title" : "func focusEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/focusable(_:)",
                    "title" : "func focusable(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/focusable(_:interactions:)",
                    "title" : "func focusable(Bool, interactions: FocusInteractions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/focused(_:)",
                    "title" : "func focused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/focused(_:equals:)",
                    "title" : "func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/focusedobject(_:)-1u8fu",
                    "title" : "func focusedObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/focusedobject(_:)-4ob08",
                    "title" : "func focusedObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/focusedsceneobject(_:)-3633b",
                    "title" : "func focusedSceneObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/focusedsceneobject(_:)-4x7t8",
                    "title" : "func focusedSceneObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/focusedscenevalue(_:_:)-25t7u",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/focusedscenevalue(_:_:)-51qen",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/focusedvalue(_:)",
                    "title" : "func focusedValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/focusedvalue(_:_:)-8fkdv",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/focusedvalue(_:_:)-9hkef",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/font(_:)",
                    "title" : "func font(Font?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fontdesign(_:)",
                    "title" : "func fontDesign(Font.Design?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fontweight(_:)",
                    "title" : "func fontWeight(Font.Weight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fontwidth(_:)",
                    "title" : "func fontWidth(Font.Width?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/foregroundstyle(_:)",
                    "title" : "func foregroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/foregroundstyle(_:_:)",
                    "title" : "func foregroundStyle<S1, S2>(S1, S2) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/foregroundstyle(_:_:_:)",
                    "title" : "func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/formstyle(_:)",
                    "title" : "func formStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/frame()",
                    "title" : "func frame() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/frame(width:height:alignment:)",
                    "title" : "func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fullscreencover(ispresented:ondismiss:content:)",
                    "title" : "func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/fullscreencover(item:ondismiss:content:)",
                    "title" : "func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/gaugestyle(_:)",
                    "title" : "func gaugeStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/geometrygroup()",
                    "title" : "func geometryGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/gesture(_:including:)",
                    "title" : "func gesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/grayscale(_:)",
                    "title" : "func grayscale(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/gridcellanchor(_:)",
                    "title" : "func gridCellAnchor(UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/gridcellcolumns(_:)",
                    "title" : "func gridCellColumns(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/gridcellunsizedaxes(_:)",
                    "title" : "func gridCellUnsizedAxes(Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/gridcolumnalignment(_:)",
                    "title" : "func gridColumnAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/groupboxstyle(_:)",
                    "title" : "func groupBoxStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/handlesexternalevents(preferring:allowing:)",
                    "title" : "func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/headerprominence(_:)",
                    "title" : "func headerProminence(Prominence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/help(_:)-8y9mo",
                    "title" : "func help<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/help(_:)-jf5u",
                    "title" : "func help(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/help(_:)-r24v",
                    "title" : "func help(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/hidden()",
                    "title" : "func hidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/highprioritygesture(_:including:)",
                    "title" : "func highPriorityGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/hovereffect(_:)",
                    "title" : "func hoverEffect(HoverEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/hovereffect(_:isenabled:)",
                    "title" : "func hoverEffect(HoverEffect, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/hovereffectdisabled(_:)",
                    "title" : "func hoverEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/huerotation(_:)",
                    "title" : "func hueRotation(Angle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/id(_:)",
                    "title" : "func id<ID>(ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/ignoressafearea(_:edges:)",
                    "title" : "func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/imagescale(_:)",
                    "title" : "func imageScale(Image.Scale) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/indexviewstyle(_:)",
                    "title" : "func indexViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/inspector(ispresented:content:)",
                    "title" : "func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/inspectorcolumnwidth(_:)",
                    "title" : "func inspectorColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/inspectorcolumnwidth(min:ideal:max:)",
                    "title" : "func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/interactionactivitytrackingtag(_:)",
                    "title" : "func interactionActivityTrackingTag(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/interactivedismissdisabled(_:)",
                    "title" : "func interactiveDismissDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/invalidatablecontent(_:)",
                    "title" : "func invalidatableContent(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/italic(_:)",
                    "title" : "func italic(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/itemprovider(_:)",
                    "title" : "func itemProvider(Optional<() -> NSItemProvider?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/kerning(_:)",
                    "title" : "func kerning(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/keyboardshortcut(_:)-8zv20",
                    "title" : "func keyboardShortcut(KeyboardShortcut?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/keyboardshortcut(_:)-9vl4a",
                    "title" : "func keyboardShortcut(KeyboardShortcut) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/keyboardshortcut(_:modifiers:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/keyboardshortcut(_:modifiers:localization:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/keyboardtype(_:)",
                    "title" : "func keyboardType(UIKeyboardType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/keyframeanimator(initialvalue:repeating:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/keyframeanimator(initialvalue:trigger:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/labelstyle(_:)",
                    "title" : "func labelStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/labeledcontentstyle(_:)",
                    "title" : "func labeledContentStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/labelshidden()",
                    "title" : "func labelsHidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/layereffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/layoutdirectionbehavior(_:)",
                    "title" : "func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/layoutpriority(_:)",
                    "title" : "func layoutPriority(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/layoutvalue(key:value:)",
                    "title" : "func layoutValue<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/linelimit(_:)-2zu6i",
                    "title" : "func lineLimit(PartialRangeFrom<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/linelimit(_:)-5w6d2",
                    "title" : "func lineLimit(ClosedRange<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/linelimit(_:)-89fi6",
                    "title" : "func lineLimit(PartialRangeThrough<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/linelimit(_:)-9pxaq",
                    "title" : "func lineLimit(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/linelimit(_:reservesspace:)",
                    "title" : "func lineLimit(Int, reservesSpace: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/linespacing(_:)",
                    "title" : "func lineSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/listitemtint(_:)-7mw93",
                    "title" : "func listItemTint(ListItemTint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/listitemtint(_:)-sag9",
                    "title" : "func listItemTint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/listrowbackground(_:)",
                    "title" : "func listRowBackground<V>(V?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/listrowinsets(_:)",
                    "title" : "func listRowInsets(EdgeInsets?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/listrowseparator(_:edges:)",
                    "title" : "func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/listrowseparatortint(_:edges:)",
                    "title" : "func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/listrowspacing(_:)",
                    "title" : "func listRowSpacing(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/listsectionseparator(_:edges:)",
                    "title" : "func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/listsectionseparatortint(_:edges:)",
                    "title" : "func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/listsectionspacing(_:)-14pz7",
                    "title" : "func listSectionSpacing(ListSectionSpacing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/listsectionspacing(_:)-4812u",
                    "title" : "func listSectionSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/liststyle(_:)",
                    "title" : "func listStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/luminancetoalpha()",
                    "title" : "func luminanceToAlpha() -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/mask(_:)",
                    "title" : "func mask<Mask>(Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/mask(alignment:_:)",
                    "title" : "func mask<Mask>(alignment: Alignment, () -> Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/matchedgeometryeffect(id:in:properties:anchor:issource:)",
                    "title" : "func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/menuactiondismissbehavior(_:)",
                    "title" : "func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/menuindicator(_:)",
                    "title" : "func menuIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/menuorder(_:)",
                    "title" : "func menuOrder(MenuOrder) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/menustyle(_:)",
                    "title" : "func menuStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/minimumscalefactor(_:)",
                    "title" : "func minimumScaleFactor(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/modifier(_:)",
                    "title" : "func modifier<T>(T) -> ModifiedContent<Self, T>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/monospaced(_:)",
                    "title" : "func monospaced(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/monospaceddigit()",
                    "title" : "func monospacedDigit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/movedisabled(_:)",
                    "title" : "func moveDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(TextAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationbarbackbuttonhidden(_:)",
                    "title" : "func navigationBarBackButtonHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationbarhidden(_:)",
                    "title" : "func navigationBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationbaritems(leading:)",
                    "title" : "func navigationBarItems<L>(leading: L) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationbaritems(leading:trailing:)",
                    "title" : "func navigationBarItems<L, T>(leading: L, trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationbaritems(trailing:)",
                    "title" : "func navigationBarItems<T>(trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationbartitle(_:)-4qpom",
                    "title" : "func navigationBarTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationbartitle(_:)-60k71",
                    "title" : "func navigationBarTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationbartitle(_:)-6j3zw",
                    "title" : "func navigationBarTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationbartitle(_:displaymode:)-1787j",
                    "title" : "func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationbartitle(_:displaymode:)-3vheb",
                    "title" : "func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationbartitle(_:displaymode:)-bn35",
                    "title" : "func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationbartitledisplaymode(_:)",
                    "title" : "func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationdestination(for:destination:)",
                    "title" : "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationdestination(ispresented:destination:)",
                    "title" : "func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationdestination(item:destination:)",
                    "title" : "func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationdocument(_:)",
                    "title" : "func navigationDocument(URL) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationdocument(_:preview:)-1fwwh",
                    "title" : "func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationdocument(_:preview:)-2w9zm",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationdocument(_:preview:)-42ab0",
                    "title" : "func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationdocument(_:preview:)-66lmp",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationsplitviewcolumnwidth(_:)",
                    "title" : "func navigationSplitViewColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationsplitviewcolumnwidth(min:ideal:max:)",
                    "title" : "func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationsplitviewstyle(_:)",
                    "title" : "func navigationSplitViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationtitle(_:)-3o97f",
                    "title" : "func navigationTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationtitle(_:)-6noau",
                    "title" : "func navigationTitle<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationtitle(_:)-ijqu",
                    "title" : "func navigationTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationtitle(_:)-jzjd",
                    "title" : "func navigationTitle(Binding<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationtitle(_:)-riui",
                    "title" : "func navigationTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/navigationviewstyle(_:)",
                    "title" : "func navigationViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/offset(_:)",
                    "title" : "func offset(CGSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/offset(x:y:)",
                    "title" : "func offset(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onappear(perform:)",
                    "title" : "func onAppear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onchange(of:initial:_:)-5eyja",
                    "title" : "func onChange<V>(of: V, initial: Bool, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onchange(of:initial:_:)-9js4q",
                    "title" : "func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onchange(of:perform:)",
                    "title" : "func onChange<V>(of: V, perform: (V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/oncontinueuseractivity(_:perform:)",
                    "title" : "func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/oncontinuoushover(coordinatespace:perform:)",
                    "title" : "func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/ondrag(_:)",
                    "title" : "func onDrag(() -> NSItemProvider) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/ondrag(_:preview:)",
                    "title" : "func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/ondrop(of:delegate:)-3xfrq",
                    "title" : "func onDrop(of: [UTType], delegate: DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/ondrop(of:delegate:)-64arq",
                    "title" : "func onDrop(of: [String], delegate: DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/ondrop(of:istargeted:perform:)-2ko7a",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/ondrop(of:istargeted:perform:)-4fy6a",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/ondrop(of:istargeted:perform:)-5m2pd",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/ondrop(of:istargeted:perform:)-5qmmc",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onhover(perform:)",
                    "title" : "func onHover(perform: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onkeypress(_:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onkeypress(_:phases:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onkeypress(characters:phases:action:)",
                    "title" : "func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onkeypress(keys:phases:action:)",
                    "title" : "func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onkeypress(phases:action:)",
                    "title" : "func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onlongpressgesture(minimumduration:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onpreferencechange(_:perform:)",
                    "title" : "func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onreceive(_:perform:)",
                    "title" : "func onReceive<P>(P, perform: (P.Output) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/onsubmit(of:_:)",
                    "title" : "func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/ontapgesture(count:coordinatespace:perform:)",
                    "title" : "func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/ontapgesture(count:perform:)",
                    "title" : "func onTapGesture(count: Int, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/opacity(_:)",
                    "title" : "func opacity(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/overlay(_:alignment:)",
                    "title" : "func overlay<Overlay>(Overlay, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/overlay(_:ignoressafeareaedges:)",
                    "title" : "func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/overlay(_:in:fillstyle:)",
                    "title" : "func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/overlay(alignment:content:)",
                    "title" : "func overlay<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/overlaypreferencevalue(_:_:)",
                    "title" : "func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/overlaypreferencevalue(_:alignment:_:)",
                    "title" : "func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/padding(_:)-1bv8m",
                    "title" : "func padding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/padding(_:)-8jw8x",
                    "title" : "func padding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/paletteselectioneffect(_:)",
                    "title" : "func paletteSelectionEffect(PaletteSelectionEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/persistentsystemoverlays(_:)",
                    "title" : "func persistentSystemOverlays(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/phaseanimator(_:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/phaseanimator(_:trigger:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/pickerstyle(_:)",
                    "title" : "func pickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/popover(ispresented:attachmentanchor:arrowedge:content:)",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/popover(item:attachmentanchor:arrowedge:content:)",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/position(_:)",
                    "title" : "func position(CGPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/position(x:y:)",
                    "title" : "func position(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/preference(key:value:)",
                    "title" : "func preference<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/preferredcolorscheme(_:)",
                    "title" : "func preferredColorScheme(ColorScheme?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/presentationbackground(_:)",
                    "title" : "func presentationBackground<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/presentationbackground(alignment:content:)",
                    "title" : "func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/presentationbackgroundinteraction(_:)",
                    "title" : "func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/presentationcompactadaptation(_:)",
                    "title" : "func presentationCompactAdaptation(PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/presentationcompactadaptation(horizontal:vertical:)",
                    "title" : "func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/presentationcontentinteraction(_:)",
                    "title" : "func presentationContentInteraction(PresentationContentInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/presentationcornerradius(_:)",
                    "title" : "func presentationCornerRadius(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/presentationdetents(_:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/presentationdetents(_:selection:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/presentationdragindicator(_:)",
                    "title" : "func presentationDragIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/previewcontext(_:)",
                    "title" : "func previewContext<C>(C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/previewdevice(_:)",
                    "title" : "func previewDevice(PreviewDevice?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/previewdisplayname(_:)",
                    "title" : "func previewDisplayName(String?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/previewinterfaceorientation(_:)",
                    "title" : "func previewInterfaceOrientation(InterfaceOrientation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/previewlayout(_:)",
                    "title" : "func previewLayout(PreviewLayout) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/privacysensitive(_:)",
                    "title" : "func privacySensitive(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/progressviewstyle(_:)",
                    "title" : "func progressViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/projectioneffect(_:)",
                    "title" : "func projectionEffect(ProjectionTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/redacted(reason:)",
                    "title" : "func redacted(reason: RedactionReasons) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/refreshable(action:)",
                    "title" : "func refreshable(action: () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/renameaction(_:)-63r82",
                    "title" : "func renameAction(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/renameaction(_:)-8a4k3",
                    "title" : "func renameAction(() -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/replacedisabled(_:)",
                    "title" : "func replaceDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)",
                    "title" : "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/rotationeffect(_:anchor:)",
                    "title" : "func rotationEffect(Angle, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/safeareainset(edge:alignment:spacing:content:)-5j4y4",
                    "title" : "func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/safeareainset(edge:alignment:spacing:content:)-8u9zy",
                    "title" : "func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/safeareapadding(_:)-6gho6",
                    "title" : "func safeAreaPadding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/safeareapadding(_:)-7muyx",
                    "title" : "func safeAreaPadding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/safeareapadding(_:_:)",
                    "title" : "func safeAreaPadding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/saturation(_:)",
                    "title" : "func saturation(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scaleeffect(_:anchor:)-6l50o",
                    "title" : "func scaleEffect(CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scaleeffect(_:anchor:)-9r3w9",
                    "title" : "func scaleEffect(CGSize, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scaleeffect(x:y:anchor:)",
                    "title" : "func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scaledtofill()",
                    "title" : "func scaledToFill() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scaledtofit()",
                    "title" : "func scaledToFit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scenepadding(_:)",
                    "title" : "func scenePadding(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scenepadding(_:edges:)",
                    "title" : "func scenePadding(ScenePadding, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scrollbouncebehavior(_:axes:)",
                    "title" : "func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scrollclipdisabled(_:)",
                    "title" : "func scrollClipDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scrollcontentbackground(_:)",
                    "title" : "func scrollContentBackground(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scrolldisabled(_:)",
                    "title" : "func scrollDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scrolldismisseskeyboard(_:)",
                    "title" : "func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scrollindicators(_:axes:)",
                    "title" : "func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scrollindicatorsflash(onappear:)",
                    "title" : "func scrollIndicatorsFlash(onAppear: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scrollindicatorsflash(trigger:)",
                    "title" : "func scrollIndicatorsFlash(trigger: some Equatable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scrollposition(id:anchor:)",
                    "title" : "func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scrolltargetbehavior(_:)",
                    "title" : "func scrollTargetBehavior(some ScrollTargetBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scrolltargetlayout(isenabled:)",
                    "title" : "func scrollTargetLayout(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scrolltransition(_:axis:transition:)",
                    "title" : "func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/scrolltransition(topleading:bottomtrailing:axis:transition:)",
                    "title" : "func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchcompletion(_:)",
                    "title" : "func searchCompletion(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchdictationbehavior(_:)",
                    "title" : "func searchDictationBehavior(TextInputDictationBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchscopes(_:activation:_:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchscopes(_:scopes:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchsuggestions(_:)",
                    "title" : "func searchSuggestions<S>(() -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchsuggestions(_:for:)",
                    "title" : "func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7tvhx",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-8jgvj",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-8vcbg",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:editabletokens:placement:prompt:token:)-2l6zo",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:editabletokens:placement:prompt:token:)-2ti0d",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:editabletokens:placement:prompt:token:)-96et8",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:ispresented:placement:prompt:)-22sps",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:ispresented:placement:prompt:)-54xh7",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:ispresented:placement:prompt:)-6bclm",
                    "title" : "func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:placement:prompt:)-1rnv6",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:placement:prompt:)-62zee",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:placement:prompt:)-6dlci",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:placement:prompt:suggestions:)-4r2wk",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:placement:prompt:suggestions:)-6549l",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:placement:prompt:suggestions:)-lzhr",
                    "title" : "func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:tokens:ispresented:placement:prompt:token:)-2ri8z",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5vadl",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:tokens:ispresented:placement:prompt:token:)-628ry",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:tokens:placement:prompt:token:)-23llw",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:tokens:placement:prompt:token:)-4vfnq",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:tokens:placement:prompt:token:)-8ne7q",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3ujfu",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4hbbt",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9hwx",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1geoe",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1t51w",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4mr05",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/selectiondisabled(_:)",
                    "title" : "func selectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/sensoryfeedback(_:trigger:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/sensoryfeedback(_:trigger:condition:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/sensoryfeedback(trigger:_:)",
                    "title" : "func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/shadow(color:radius:x:y:)",
                    "title" : "func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/sheet(ispresented:ondismiss:content:)",
                    "title" : "func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/sheet(item:ondismiss:content:)",
                    "title" : "func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/simultaneousgesture(_:including:)",
                    "title" : "func simultaneousGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/speechadjustedpitch(_:)",
                    "title" : "func speechAdjustedPitch(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/speechalwaysincludespunctuation(_:)",
                    "title" : "func speechAlwaysIncludesPunctuation(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/speechannouncementsqueued(_:)",
                    "title" : "func speechAnnouncementsQueued(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/speechspellsoutcharacters(_:)",
                    "title" : "func speechSpellsOutCharacters(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/springloadingbehavior(_:)",
                    "title" : "func springLoadingBehavior(SpringLoadingBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/statusbar(hidden:)",
                    "title" : "func statusBar(hidden: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/statusbarhidden(_:)",
                    "title" : "func statusBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/strikethrough(_:pattern:color:)",
                    "title" : "func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/submitlabel(_:)",
                    "title" : "func submitLabel(SubmitLabel) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/submitscope(_:)",
                    "title" : "func submitScope(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/swipeactions(edge:allowsfullswipe:content:)",
                    "title" : "func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/symboleffect(_:options:isactive:)",
                    "title" : "func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/symboleffect(_:options:value:)",
                    "title" : "func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/symboleffectsremoved(_:)",
                    "title" : "func symbolEffectsRemoved(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/symbolrenderingmode(_:)",
                    "title" : "func symbolRenderingMode(SymbolRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/symbolvariant(_:)",
                    "title" : "func symbolVariant(SymbolVariants) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/tabitem(_:)",
                    "title" : "func tabItem<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/tabviewstyle(_:)",
                    "title" : "func tabViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/tablecolumnheaders(_:)",
                    "title" : "func tableColumnHeaders(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/tablestyle(_:)",
                    "title" : "func tableStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/tag(_:)",
                    "title" : "func tag<V>(V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/task(id:priority:_:)",
                    "title" : "func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/textcase(_:)",
                    "title" : "func textCase(Text.Case?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/textcontenttype(_:)",
                    "title" : "func textContentType(UITextContentType?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/texteditorstyle(_:)",
                    "title" : "func textEditorStyle(some TextEditorStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/textfieldstyle(_:)",
                    "title" : "func textFieldStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/textinputautocapitalization(_:)",
                    "title" : "func textInputAutocapitalization(TextInputAutocapitalization?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/textscale(_:isenabled:)",
                    "title" : "func textScale(Text.Scale, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/textselection(_:)",
                    "title" : "func textSelection<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/tint(_:)",
                    "title" : "func tint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/togglestyle(_:)",
                    "title" : "func toggleStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/toolbar(_:for:)",
                    "title" : "func toolbar(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/toolbar(content:)-7u6rl",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/toolbar(content:)-zzg1",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/toolbar(id:content:)",
                    "title" : "func toolbar<Content>(id: String, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/toolbar(removing:)",
                    "title" : "func toolbar(removing: ToolbarDefaultItemKind?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/toolbarbackground(_:for:)",
                    "title" : "func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/toolbarcolorscheme(_:for:)",
                    "title" : "func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/toolbarrole(_:)",
                    "title" : "func toolbarRole(ToolbarRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/toolbartitledisplaymode(_:)",
                    "title" : "func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/toolbartitlemenu(content:)",
                    "title" : "func toolbarTitleMenu<C>(content: () -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/tracking(_:)",
                    "title" : "func tracking(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/transaction(_:)",
                    "title" : "func transaction((inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/transaction(_:body:)",
                    "title" : "func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/transaction(value:_:)",
                    "title" : "func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/transformanchorpreference(key:value:transform:)",
                    "title" : "func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/transformeffect(_:)",
                    "title" : "func transformEffect(CGAffineTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/transformenvironment(_:transform:)",
                    "title" : "func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/transformpreference(_:_:)",
                    "title" : "func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/transition(_:)",
                    "title" : "func transition(AnyTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/truncationmode(_:)",
                    "title" : "func truncationMode(Text.TruncationMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/typeselectequivalent(_:)-2am0o",
                    "title" : "func typeSelectEquivalent(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/typeselectequivalent(_:)-4qtrd",
                    "title" : "func typeSelectEquivalent(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/typeselectequivalent(_:)-6e88v",
                    "title" : "func typeSelectEquivalent<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/typesettinglanguage(_:isenabled:)-5kfvi",
                    "title" : "func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/typesettinglanguage(_:isenabled:)-92qok",
                    "title" : "func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/underline(_:pattern:color:)",
                    "title" : "func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/unredacted()",
                    "title" : "func unredacted() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/useractivity(_:element:_:)",
                    "title" : "func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/useractivity(_:isactive:_:)",
                    "title" : "func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/visualeffect(_:)",
                    "title" : "func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/zindex(_:)",
                    "title" : "func zIndex(Double) -> some View",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/streamdeckdialview\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/streamdeckdialview",
            "title" : "StreamDeckDialView",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/init(keyview:)",
                "title" : "init(keyView: KeyViewProvider)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/body",
                "title" : "var body: some View",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/keyviewprovider",
                "title" : "StreamDeckKeyAreaLayout.KeyViewProvider",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accentcolor(_:)",
                    "title" : "func accentColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibility(activationpoint:)-3ctkn",
                    "title" : "func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibility(activationpoint:)-5ijm7",
                    "title" : "func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibility(addtraits:)",
                    "title" : "func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibility(hidden:)",
                    "title" : "func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibility(hint:)",
                    "title" : "func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibility(identifier:)",
                    "title" : "func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibility(inputlabels:)",
                    "title" : "func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibility(label:)",
                    "title" : "func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibility(removetraits:)",
                    "title" : "func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibility(selectionidentifier:)",
                    "title" : "func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibility(sortpriority:)",
                    "title" : "func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibility(value:)",
                    "title" : "func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityaction(_:_:)",
                    "title" : "func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityaction(action:label:)",
                    "title" : "func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityaction(named:_:)-4c0g8",
                    "title" : "func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityaction(named:_:)-4w69x",
                    "title" : "func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityaction(named:_:)-5s1sj",
                    "title" : "func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityactions(_:)",
                    "title" : "func accessibilityActions<Content>(() -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityactivationpoint(_:)-599st",
                    "title" : "func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityactivationpoint(_:)-61u4c",
                    "title" : "func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityaddtraits(_:)",
                    "title" : "func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityadjustableaction(_:)",
                    "title" : "func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitychartdescriptor(_:)",
                    "title" : "func accessibilityChartDescriptor<R>(R) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitychildren(children:)",
                    "title" : "func accessibilityChildren<V>(children: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitycustomcontent(_:_:importance:)-2bqu1",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitycustomcontent(_:_:importance:)-4qsro",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitycustomcontent(_:_:importance:)-5eqx7",
                    "title" : "func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitycustomcontent(_:_:importance:)-679vz",
                    "title" : "func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitycustomcontent(_:_:importance:)-9q4k5",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitycustomcontent(_:_:importance:)-dqn7",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitycustomcontent(_:_:importance:)-m4r3",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitycustomcontent(_:_:importance:)-vyxt",
                    "title" : "func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitydirecttouch(_:options:)",
                    "title" : "func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityelement(children:)",
                    "title" : "func accessibilityElement(children: AccessibilityChildBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityfocused(_:)",
                    "title" : "func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityfocused(_:equals:)",
                    "title" : "func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityheading(_:)",
                    "title" : "func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityhidden(_:)",
                    "title" : "func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityhint(_:)-3bqo9",
                    "title" : "func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityhint(_:)-6is0c",
                    "title" : "func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityhint(_:)-f18q",
                    "title" : "func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityidentifier(_:)",
                    "title" : "func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityignoresinvertcolors(_:)",
                    "title" : "func accessibilityIgnoresInvertColors(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityinputlabels(_:)-431es",
                    "title" : "func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityinputlabels(_:)-8arnd",
                    "title" : "func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityinputlabels(_:)-9spp5",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitylabel(_:)-587kr",
                    "title" : "func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitylabel(_:)-61tf",
                    "title" : "func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitylabel(_:)-sjdb",
                    "title" : "func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitylabeledpair(role:id:in:)",
                    "title" : "func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitylinkedgroup(id:in:)",
                    "title" : "func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityremovetraits(_:)",
                    "title" : "func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrepresentation(representation:)",
                    "title" : "func accessibilityRepresentation<V>(representation: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrespondstouserinteraction(_:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotor(_:entries:)-12kqo",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotor(_:entries:)-47ot3",
                    "title" : "func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotor(_:entries:)-503xl",
                    "title" : "func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotor(_:entries:)-7r9m8",
                    "title" : "func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotor(_:entries:entryid:entrylabel:)-3c3ju",
                    "title" : "func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotor(_:entries:entryid:entrylabel:)-3tykm",
                    "title" : "func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotor(_:entries:entryid:entrylabel:)-4t9iy",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotor(_:entries:entryid:entrylabel:)-960gp",
                    "title" : "func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotor(_:entries:entrylabel:)-19zem",
                    "title" : "func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotor(_:entries:entrylabel:)-28hqk",
                    "title" : "func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotor(_:entries:entrylabel:)-3wk5i",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotor(_:entries:entrylabel:)-4ap43",
                    "title" : "func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotor(_:textranges:)-4acmw",
                    "title" : "func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotor(_:textranges:)-6c6h",
                    "title" : "func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotor(_:textranges:)-keyn",
                    "title" : "func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotor(_:textranges:)-ykog",
                    "title" : "func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityrotorentry(id:in:)",
                    "title" : "func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityscrollaction(_:)",
                    "title" : "func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityshowslargecontentviewer()",
                    "title" : "func accessibilityShowsLargeContentViewer() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityshowslargecontentviewer(_:)",
                    "title" : "func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitysortpriority(_:)",
                    "title" : "func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilitytextcontenttype(_:)",
                    "title" : "func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityvalue(_:)-353nb",
                    "title" : "func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityvalue(_:)-5qyw1",
                    "title" : "func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityvalue(_:)-5wuke",
                    "title" : "func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/accessibilityzoomaction(_:)",
                    "title" : "func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/actionsheet(ispresented:content:)",
                    "title" : "func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/actionsheet(item:content:)",
                    "title" : "func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alert(_:ispresented:actions:)-1alie",
                    "title" : "func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alert(_:ispresented:actions:)-68n1f",
                    "title" : "func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alert(_:ispresented:actions:)-81wkw",
                    "title" : "func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alert(_:ispresented:actions:message:)-11ugw",
                    "title" : "func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alert(_:ispresented:actions:message:)-4a4e0",
                    "title" : "func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alert(_:ispresented:actions:message:)-4dw4l",
                    "title" : "func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alert(_:ispresented:presenting:actions:)-39cv9",
                    "title" : "func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alert(_:ispresented:presenting:actions:)-84tq1",
                    "title" : "func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alert(_:ispresented:presenting:actions:)-infn",
                    "title" : "func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alert(_:ispresented:presenting:actions:message:)-4gmvh",
                    "title" : "func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alert(_:ispresented:presenting:actions:message:)-67eoz",
                    "title" : "func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alert(_:ispresented:presenting:actions:message:)-s72k",
                    "title" : "func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alert(ispresented:content:)",
                    "title" : "func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alert(ispresented:error:actions:)",
                    "title" : "func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alert(ispresented:error:actions:message:)",
                    "title" : "func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alert(item:content:)",
                    "title" : "func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alignmentguide(_:computevalue:)-9rx3f",
                    "title" : "func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alignmentguide(_:computevalue:)-o5x",
                    "title" : "func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/alloweddynamicrange(_:)",
                    "title" : "func allowedDynamicRange(Image.DynamicRange?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/allowshittesting(_:)",
                    "title" : "func allowsHitTesting(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/allowstightening(_:)",
                    "title" : "func allowsTightening(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/anchorpreference(key:value:transform:)",
                    "title" : "func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/animation(_:)",
                    "title" : "func animation(Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/animation(_:body:)",
                    "title" : "func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/animation(_:value:)",
                    "title" : "func animation<V>(Animation?, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/aspectratio(_:contentmode:)-42at2",
                    "title" : "func aspectRatio(CGSize, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/aspectratio(_:contentmode:)-9wkbg",
                    "title" : "func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/autocapitalization(_:)",
                    "title" : "func autocapitalization(UITextAutocapitalizationType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/autocorrectiondisabled(_:)",
                    "title" : "func autocorrectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/background(_:alignment:)",
                    "title" : "func background<Background>(Background, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/background(_:ignoressafeareaedges:)",
                    "title" : "func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/background(_:in:fillstyle:)-3dyft",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/background(_:in:fillstyle:)-3o0kf",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/background(alignment:content:)",
                    "title" : "func background<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/background(ignoressafeareaedges:)",
                    "title" : "func background(ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/background(in:fillstyle:)-5837a",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/background(in:fillstyle:)-9iirm",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/backgroundpreferencevalue(_:_:)",
                    "title" : "func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/backgroundpreferencevalue(_:alignment:_:)",
                    "title" : "func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/backgroundstyle(_:)",
                    "title" : "func backgroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/badge(_:)-3gj4y",
                    "title" : "func badge(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/badge(_:)-7zay1",
                    "title" : "func badge(LocalizedStringKey?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/badge(_:)-9jzt4",
                    "title" : "func badge<S>(S?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/badge(_:)-e7h9",
                    "title" : "func badge(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/badgeprominence(_:)",
                    "title" : "func badgeProminence(BadgeProminence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/baselineoffset(_:)",
                    "title" : "func baselineOffset(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/blendmode(_:)",
                    "title" : "func blendMode(BlendMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/blur(radius:opaque:)",
                    "title" : "func blur(radius: CGFloat, opaque: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/bold(_:)",
                    "title" : "func bold(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/border(_:width:)",
                    "title" : "func border<S>(S, width: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/brightness(_:)",
                    "title" : "func brightness(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/buttonbordershape(_:)",
                    "title" : "func buttonBorderShape(ButtonBorderShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/buttonrepeatbehavior(_:)",
                    "title" : "func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/buttonstyle(_:)-4pzx4",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/buttonstyle(_:)-p02q",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/clipshape(_:style:)",
                    "title" : "func clipShape<S>(S, style: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/clipped(antialiased:)",
                    "title" : "func clipped(antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/coloreffect(_:isenabled:)",
                    "title" : "func colorEffect(Shader, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/colorinvert()",
                    "title" : "func colorInvert() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/colormultiply(_:)",
                    "title" : "func colorMultiply(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/compositinggroup()",
                    "title" : "func compositingGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3jsox",
                    "title" : "func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8c9m8",
                    "title" : "func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9i7a9",
                    "title" : "func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-33n0o",
                    "title" : "func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4p7jw",
                    "title" : "func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6mgem",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3yfgp",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-85rlq",
                    "title" : "func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9ntsz",
                    "title" : "func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-34jvq",
                    "title" : "func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5dzcf",
                    "title" : "func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5i0tx",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/containerbackground(_:for:)",
                    "title" : "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/containerbackground(for:alignment:content:)",
                    "title" : "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/containerrelativeframe(_:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/containerrelativeframe(_:alignment:_:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/containerrelativeframe(_:count:span:spacing:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/containershape(_:)",
                    "title" : "func containerShape<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/contentmargins(_:_:for:)-8qh4g",
                    "title" : "func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/contentmargins(_:_:for:)-9amj8",
                    "title" : "func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/contentmargins(_:for:)",
                    "title" : "func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/contentshape(_:_:eofill:)",
                    "title" : "func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/contentshape(_:eofill:)",
                    "title" : "func contentShape<S>(S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/contenttransition(_:)",
                    "title" : "func contentTransition(ContentTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/contextmenu(_:)",
                    "title" : "func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/contextmenu(forselectiontype:menu:primaryaction:)",
                    "title" : "func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/contextmenu(menuitems:)",
                    "title" : "func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/contextmenu(menuitems:preview:)",
                    "title" : "func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/contrast(_:)",
                    "title" : "func contrast(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/controlgroupstyle(_:)",
                    "title" : "func controlGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/controlsize(_:)",
                    "title" : "func controlSize(ControlSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/coordinatespace(_:)",
                    "title" : "func coordinateSpace(NamedCoordinateSpace) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/coordinatespace(name:)",
                    "title" : "func coordinateSpace<T>(name: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/cornerradius(_:antialiased:)",
                    "title" : "func cornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/datepickerstyle(_:)",
                    "title" : "func datePickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/defaultappstorage(_:)",
                    "title" : "func defaultAppStorage(UserDefaults) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/defaultfocus(_:_:priority:)",
                    "title" : "func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/defaulthovereffect(_:)",
                    "title" : "func defaultHoverEffect(HoverEffect?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/defaultscrollanchor(_:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/deferssystemgestures(on:)",
                    "title" : "func defersSystemGestures(on: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/deletedisabled(_:)",
                    "title" : "func deleteDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/dialogsuppressiontoggle(_:issuppressed:)-1wyog",
                    "title" : "func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/dialogsuppressiontoggle(_:issuppressed:)-3scm7",
                    "title" : "func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/dialogsuppressiontoggle(_:issuppressed:)-5la8y",
                    "title" : "func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/dialogsuppressiontoggle(issuppressed:)",
                    "title" : "func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/disableautocorrection(_:)",
                    "title" : "func disableAutocorrection(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/disabled(_:)",
                    "title" : "func disabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/disclosuregroupstyle(_:)",
                    "title" : "func disclosureGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/distortioneffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/draggable(_:)",
                    "title" : "func draggable<T>(() -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/draggable(_:preview:)",
                    "title" : "func draggable<V, T>(() -> T, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/drawinggroup(opaque:colormode:)",
                    "title" : "func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/dropdestination(for:action:istargeted:)",
                    "title" : "func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/dynamictypesize(_:)",
                    "title" : "func dynamicTypeSize(DynamicTypeSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/edgesignoringsafearea(_:)",
                    "title" : "func edgesIgnoringSafeArea(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/environment(_:)",
                    "title" : "func environment<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/environment(_:_:)",
                    "title" : "func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/environmentobject(_:)",
                    "title" : "func environmentObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/filedialogbrowseroptions(_:)",
                    "title" : "func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/filedialogconfirmationlabel(_:)-14vv5",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/filedialogconfirmationlabel(_:)-3de66",
                    "title" : "func fileDialogConfirmationLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/filedialogconfirmationlabel(_:)-9wpgm",
                    "title" : "func fileDialogConfirmationLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/filedialogcustomizationid(_:)",
                    "title" : "func fileDialogCustomizationID(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/filedialogdefaultdirectory(_:)",
                    "title" : "func fileDialogDefaultDirectory(URL?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/filedialogimportsunresolvedaliases(_:)",
                    "title" : "func fileDialogImportsUnresolvedAliases(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/filedialogmessage(_:)-26xce",
                    "title" : "func fileDialogMessage(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/filedialogmessage(_:)-60g2j",
                    "title" : "func fileDialogMessage(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/filedialogmessage(_:)-7etbd",
                    "title" : "func fileDialogMessage<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/filedialogurlenabled(_:)",
                    "title" : "func fileDialogURLEnabled(Predicate<URL>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8ffv9",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9ck1d",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-4c2kd",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-4jpbp",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4dysf",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4m1ys",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3w5lc",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-6zjqj",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fileexporterfilenamelabel(_:)-3upwx",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fileexporterfilenamelabel(_:)-5u21p",
                    "title" : "func fileExporterFilenameLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fileexporterfilenamelabel(_:)-7bjzl",
                    "title" : "func fileExporterFilenameLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/filemover(ispresented:file:oncompletion:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/filemover(ispresented:file:oncompletion:oncancellation:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/filemover(ispresented:files:oncompletion:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/filemover(ispresented:files:oncompletion:oncancellation:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/finddisabled(_:)",
                    "title" : "func findDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/findnavigator(ispresented:)",
                    "title" : "func findNavigator(isPresented: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fixedsize()",
                    "title" : "func fixedSize() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fixedsize(horizontal:vertical:)",
                    "title" : "func fixedSize(horizontal: Bool, vertical: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/flipsforrighttoleftlayoutdirection(_:)",
                    "title" : "func flipsForRightToLeftLayoutDirection(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/focuseffectdisabled(_:)",
                    "title" : "func focusEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/focusable(_:)",
                    "title" : "func focusable(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/focusable(_:interactions:)",
                    "title" : "func focusable(Bool, interactions: FocusInteractions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/focused(_:)",
                    "title" : "func focused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/focused(_:equals:)",
                    "title" : "func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/focusedobject(_:)-219lv",
                    "title" : "func focusedObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/focusedobject(_:)-2tq2f",
                    "title" : "func focusedObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/focusedsceneobject(_:)-36etv",
                    "title" : "func focusedSceneObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/focusedsceneobject(_:)-5211t",
                    "title" : "func focusedSceneObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/focusedscenevalue(_:_:)-5enia",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/focusedscenevalue(_:_:)-7z3eo",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/focusedvalue(_:)",
                    "title" : "func focusedValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/focusedvalue(_:_:)-3unys",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/focusedvalue(_:_:)-638vg",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/font(_:)",
                    "title" : "func font(Font?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fontdesign(_:)",
                    "title" : "func fontDesign(Font.Design?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fontweight(_:)",
                    "title" : "func fontWeight(Font.Weight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fontwidth(_:)",
                    "title" : "func fontWidth(Font.Width?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/foregroundstyle(_:)",
                    "title" : "func foregroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/foregroundstyle(_:_:)",
                    "title" : "func foregroundStyle<S1, S2>(S1, S2) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/foregroundstyle(_:_:_:)",
                    "title" : "func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/formstyle(_:)",
                    "title" : "func formStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/frame()",
                    "title" : "func frame() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/frame(width:height:alignment:)",
                    "title" : "func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fullscreencover(ispresented:ondismiss:content:)",
                    "title" : "func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/fullscreencover(item:ondismiss:content:)",
                    "title" : "func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/gaugestyle(_:)",
                    "title" : "func gaugeStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/geometrygroup()",
                    "title" : "func geometryGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/gesture(_:including:)",
                    "title" : "func gesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/grayscale(_:)",
                    "title" : "func grayscale(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/gridcellanchor(_:)",
                    "title" : "func gridCellAnchor(UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/gridcellcolumns(_:)",
                    "title" : "func gridCellColumns(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/gridcellunsizedaxes(_:)",
                    "title" : "func gridCellUnsizedAxes(Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/gridcolumnalignment(_:)",
                    "title" : "func gridColumnAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/groupboxstyle(_:)",
                    "title" : "func groupBoxStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/handlesexternalevents(preferring:allowing:)",
                    "title" : "func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/headerprominence(_:)",
                    "title" : "func headerProminence(Prominence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/help(_:)-3od2h",
                    "title" : "func help<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/help(_:)-42xgg",
                    "title" : "func help(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/help(_:)-9lryd",
                    "title" : "func help(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/hidden()",
                    "title" : "func hidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/highprioritygesture(_:including:)",
                    "title" : "func highPriorityGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/hovereffect(_:)",
                    "title" : "func hoverEffect(HoverEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/hovereffect(_:isenabled:)",
                    "title" : "func hoverEffect(HoverEffect, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/hovereffectdisabled(_:)",
                    "title" : "func hoverEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/huerotation(_:)",
                    "title" : "func hueRotation(Angle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/id(_:)",
                    "title" : "func id<ID>(ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/ignoressafearea(_:edges:)",
                    "title" : "func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/imagescale(_:)",
                    "title" : "func imageScale(Image.Scale) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/indexviewstyle(_:)",
                    "title" : "func indexViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/inspector(ispresented:content:)",
                    "title" : "func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/inspectorcolumnwidth(_:)",
                    "title" : "func inspectorColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/inspectorcolumnwidth(min:ideal:max:)",
                    "title" : "func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/interactionactivitytrackingtag(_:)",
                    "title" : "func interactionActivityTrackingTag(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/interactivedismissdisabled(_:)",
                    "title" : "func interactiveDismissDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/invalidatablecontent(_:)",
                    "title" : "func invalidatableContent(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/italic(_:)",
                    "title" : "func italic(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/itemprovider(_:)",
                    "title" : "func itemProvider(Optional<() -> NSItemProvider?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/kerning(_:)",
                    "title" : "func kerning(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/keyboardshortcut(_:)-8k9zw",
                    "title" : "func keyboardShortcut(KeyboardShortcut?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/keyboardshortcut(_:)-a0tu",
                    "title" : "func keyboardShortcut(KeyboardShortcut) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/keyboardshortcut(_:modifiers:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/keyboardshortcut(_:modifiers:localization:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/keyboardtype(_:)",
                    "title" : "func keyboardType(UIKeyboardType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/keyframeanimator(initialvalue:repeating:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/keyframeanimator(initialvalue:trigger:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/labelstyle(_:)",
                    "title" : "func labelStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/labeledcontentstyle(_:)",
                    "title" : "func labeledContentStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/labelshidden()",
                    "title" : "func labelsHidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/layereffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/layoutdirectionbehavior(_:)",
                    "title" : "func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/layoutpriority(_:)",
                    "title" : "func layoutPriority(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/layoutvalue(key:value:)",
                    "title" : "func layoutValue<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/linelimit(_:)-6z8et",
                    "title" : "func lineLimit(PartialRangeThrough<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/linelimit(_:)-7wvyw",
                    "title" : "func lineLimit(PartialRangeFrom<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/linelimit(_:)-99qpa",
                    "title" : "func lineLimit(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/linelimit(_:)-eis5",
                    "title" : "func lineLimit(ClosedRange<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/linelimit(_:reservesspace:)",
                    "title" : "func lineLimit(Int, reservesSpace: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/linespacing(_:)",
                    "title" : "func lineSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/listitemtint(_:)-2477c",
                    "title" : "func listItemTint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/listitemtint(_:)-5r9ib",
                    "title" : "func listItemTint(ListItemTint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/listrowbackground(_:)",
                    "title" : "func listRowBackground<V>(V?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/listrowinsets(_:)",
                    "title" : "func listRowInsets(EdgeInsets?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/listrowseparator(_:edges:)",
                    "title" : "func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/listrowseparatortint(_:edges:)",
                    "title" : "func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/listrowspacing(_:)",
                    "title" : "func listRowSpacing(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/listsectionseparator(_:edges:)",
                    "title" : "func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/listsectionseparatortint(_:edges:)",
                    "title" : "func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/listsectionspacing(_:)-8l8tj",
                    "title" : "func listSectionSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/listsectionspacing(_:)-9jzs7",
                    "title" : "func listSectionSpacing(ListSectionSpacing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/liststyle(_:)",
                    "title" : "func listStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/luminancetoalpha()",
                    "title" : "func luminanceToAlpha() -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/mask(_:)",
                    "title" : "func mask<Mask>(Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/mask(alignment:_:)",
                    "title" : "func mask<Mask>(alignment: Alignment, () -> Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/matchedgeometryeffect(id:in:properties:anchor:issource:)",
                    "title" : "func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/menuactiondismissbehavior(_:)",
                    "title" : "func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/menuindicator(_:)",
                    "title" : "func menuIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/menuorder(_:)",
                    "title" : "func menuOrder(MenuOrder) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/menustyle(_:)",
                    "title" : "func menuStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/minimumscalefactor(_:)",
                    "title" : "func minimumScaleFactor(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/modifier(_:)",
                    "title" : "func modifier<T>(T) -> ModifiedContent<Self, T>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/monospaced(_:)",
                    "title" : "func monospaced(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/monospaceddigit()",
                    "title" : "func monospacedDigit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/movedisabled(_:)",
                    "title" : "func moveDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(TextAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationbarbackbuttonhidden(_:)",
                    "title" : "func navigationBarBackButtonHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationbarhidden(_:)",
                    "title" : "func navigationBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationbaritems(leading:)",
                    "title" : "func navigationBarItems<L>(leading: L) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationbaritems(leading:trailing:)",
                    "title" : "func navigationBarItems<L, T>(leading: L, trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationbaritems(trailing:)",
                    "title" : "func navigationBarItems<T>(trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationbartitle(_:)-25r5u",
                    "title" : "func navigationBarTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationbartitle(_:)-2wnok",
                    "title" : "func navigationBarTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationbartitle(_:)-3qpo9",
                    "title" : "func navigationBarTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationbartitle(_:displaymode:)-1naek",
                    "title" : "func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationbartitle(_:displaymode:)-5w6c4",
                    "title" : "func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationbartitle(_:displaymode:)-6j3io",
                    "title" : "func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationbartitledisplaymode(_:)",
                    "title" : "func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationdestination(for:destination:)",
                    "title" : "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationdestination(ispresented:destination:)",
                    "title" : "func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationdestination(item:destination:)",
                    "title" : "func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationdocument(_:)",
                    "title" : "func navigationDocument(URL) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationdocument(_:preview:)-1nmx8",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationdocument(_:preview:)-764on",
                    "title" : "func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationdocument(_:preview:)-8dh28",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationdocument(_:preview:)-wo4l",
                    "title" : "func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationsplitviewcolumnwidth(_:)",
                    "title" : "func navigationSplitViewColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationsplitviewcolumnwidth(min:ideal:max:)",
                    "title" : "func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationsplitviewstyle(_:)",
                    "title" : "func navigationSplitViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationtitle(_:)-3ij3e",
                    "title" : "func navigationTitle(Binding<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationtitle(_:)-3ok06",
                    "title" : "func navigationTitle<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationtitle(_:)-6b9u3",
                    "title" : "func navigationTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationtitle(_:)-6nvoi",
                    "title" : "func navigationTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationtitle(_:)-9yw2g",
                    "title" : "func navigationTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/navigationviewstyle(_:)",
                    "title" : "func navigationViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/offset(_:)",
                    "title" : "func offset(CGSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/offset(x:y:)",
                    "title" : "func offset(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onappear(perform:)",
                    "title" : "func onAppear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onchange(of:initial:_:)-42cfk",
                    "title" : "func onChange<V>(of: V, initial: Bool, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onchange(of:initial:_:)-52v3o",
                    "title" : "func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onchange(of:perform:)",
                    "title" : "func onChange<V>(of: V, perform: (V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/oncontinueuseractivity(_:perform:)",
                    "title" : "func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/oncontinuoushover(coordinatespace:perform:)",
                    "title" : "func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/ondrag(_:)",
                    "title" : "func onDrag(() -> NSItemProvider) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/ondrag(_:preview:)",
                    "title" : "func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/ondrop(of:delegate:)-3xiem",
                    "title" : "func onDrop(of: [UTType], delegate: DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/ondrop(of:delegate:)-7f7t",
                    "title" : "func onDrop(of: [String], delegate: DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/ondrop(of:istargeted:perform:)-3pu6z",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/ondrop(of:istargeted:perform:)-6qmqd",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/ondrop(of:istargeted:perform:)-6vmyf",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/ondrop(of:istargeted:perform:)-h4bx",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onhover(perform:)",
                    "title" : "func onHover(perform: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onkeypress(_:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onkeypress(_:phases:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onkeypress(characters:phases:action:)",
                    "title" : "func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onkeypress(keys:phases:action:)",
                    "title" : "func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onkeypress(phases:action:)",
                    "title" : "func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onlongpressgesture(minimumduration:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onlongpressgesture(minimumduration:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onpreferencechange(_:perform:)",
                    "title" : "func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onreceive(_:perform:)",
                    "title" : "func onReceive<P>(P, perform: (P.Output) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/onsubmit(of:_:)",
                    "title" : "func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/ontapgesture(count:coordinatespace:perform:)",
                    "title" : "func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/ontapgesture(count:perform:)",
                    "title" : "func onTapGesture(count: Int, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/opacity(_:)",
                    "title" : "func opacity(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/overlay(_:alignment:)",
                    "title" : "func overlay<Overlay>(Overlay, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/overlay(_:ignoressafeareaedges:)",
                    "title" : "func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/overlay(_:in:fillstyle:)",
                    "title" : "func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/overlay(alignment:content:)",
                    "title" : "func overlay<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/overlaypreferencevalue(_:_:)",
                    "title" : "func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/overlaypreferencevalue(_:alignment:_:)",
                    "title" : "func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/padding(_:)-4hz7l",
                    "title" : "func padding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/padding(_:)-5hqw5",
                    "title" : "func padding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/paletteselectioneffect(_:)",
                    "title" : "func paletteSelectionEffect(PaletteSelectionEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/persistentsystemoverlays(_:)",
                    "title" : "func persistentSystemOverlays(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/phaseanimator(_:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/phaseanimator(_:trigger:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/pickerstyle(_:)",
                    "title" : "func pickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/popover(ispresented:attachmentanchor:arrowedge:content:)",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/popover(item:attachmentanchor:arrowedge:content:)",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/position(_:)",
                    "title" : "func position(CGPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/position(x:y:)",
                    "title" : "func position(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/preference(key:value:)",
                    "title" : "func preference<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/preferredcolorscheme(_:)",
                    "title" : "func preferredColorScheme(ColorScheme?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/presentationbackground(_:)",
                    "title" : "func presentationBackground<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/presentationbackground(alignment:content:)",
                    "title" : "func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/presentationbackgroundinteraction(_:)",
                    "title" : "func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/presentationcompactadaptation(_:)",
                    "title" : "func presentationCompactAdaptation(PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/presentationcompactadaptation(horizontal:vertical:)",
                    "title" : "func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/presentationcontentinteraction(_:)",
                    "title" : "func presentationContentInteraction(PresentationContentInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/presentationcornerradius(_:)",
                    "title" : "func presentationCornerRadius(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/presentationdetents(_:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/presentationdetents(_:selection:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/presentationdragindicator(_:)",
                    "title" : "func presentationDragIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/previewcontext(_:)",
                    "title" : "func previewContext<C>(C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/previewdevice(_:)",
                    "title" : "func previewDevice(PreviewDevice?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/previewdisplayname(_:)",
                    "title" : "func previewDisplayName(String?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/previewinterfaceorientation(_:)",
                    "title" : "func previewInterfaceOrientation(InterfaceOrientation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/previewlayout(_:)",
                    "title" : "func previewLayout(PreviewLayout) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/privacysensitive(_:)",
                    "title" : "func privacySensitive(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/progressviewstyle(_:)",
                    "title" : "func progressViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/projectioneffect(_:)",
                    "title" : "func projectionEffect(ProjectionTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/redacted(reason:)",
                    "title" : "func redacted(reason: RedactionReasons) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/refreshable(action:)",
                    "title" : "func refreshable(action: () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/renameaction(_:)-4lu2t",
                    "title" : "func renameAction(() -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/renameaction(_:)-6j1k7",
                    "title" : "func renameAction(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/replacedisabled(_:)",
                    "title" : "func replaceDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/rotation3deffect(_:axis:anchor:anchorz:perspective:)",
                    "title" : "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/rotationeffect(_:anchor:)",
                    "title" : "func rotationEffect(Angle, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/safeareainset(edge:alignment:spacing:content:)-1x6sq",
                    "title" : "func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/safeareainset(edge:alignment:spacing:content:)-38nto",
                    "title" : "func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/safeareapadding(_:)-32v5o",
                    "title" : "func safeAreaPadding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/safeareapadding(_:)-7675u",
                    "title" : "func safeAreaPadding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/safeareapadding(_:_:)",
                    "title" : "func safeAreaPadding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/saturation(_:)",
                    "title" : "func saturation(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scaleeffect(_:anchor:)-c2ks",
                    "title" : "func scaleEffect(CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scaleeffect(_:anchor:)-uyvl",
                    "title" : "func scaleEffect(CGSize, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scaleeffect(x:y:anchor:)",
                    "title" : "func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scaledtofill()",
                    "title" : "func scaledToFill() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scaledtofit()",
                    "title" : "func scaledToFit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scenepadding(_:)",
                    "title" : "func scenePadding(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scenepadding(_:edges:)",
                    "title" : "func scenePadding(ScenePadding, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scrollbouncebehavior(_:axes:)",
                    "title" : "func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scrollclipdisabled(_:)",
                    "title" : "func scrollClipDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scrollcontentbackground(_:)",
                    "title" : "func scrollContentBackground(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scrolldisabled(_:)",
                    "title" : "func scrollDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scrolldismisseskeyboard(_:)",
                    "title" : "func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scrollindicators(_:axes:)",
                    "title" : "func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scrollindicatorsflash(onappear:)",
                    "title" : "func scrollIndicatorsFlash(onAppear: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scrollindicatorsflash(trigger:)",
                    "title" : "func scrollIndicatorsFlash(trigger: some Equatable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scrollposition(id:anchor:)",
                    "title" : "func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scrolltargetbehavior(_:)",
                    "title" : "func scrollTargetBehavior(some ScrollTargetBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scrolltargetlayout(isenabled:)",
                    "title" : "func scrollTargetLayout(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scrolltransition(_:axis:transition:)",
                    "title" : "func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/scrolltransition(topleading:bottomtrailing:axis:transition:)",
                    "title" : "func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchcompletion(_:)",
                    "title" : "func searchCompletion(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchdictationbehavior(_:)",
                    "title" : "func searchDictationBehavior(TextInputDictationBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchscopes(_:activation:_:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchscopes(_:scopes:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchsuggestions(_:)",
                    "title" : "func searchSuggestions<S>(() -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchsuggestions(_:for:)",
                    "title" : "func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2eqh0",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4inpx",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5cf9c",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:editabletokens:placement:prompt:token:)-2sy7j",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:editabletokens:placement:prompt:token:)-4ph5x",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:editabletokens:placement:prompt:token:)-9adb8",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:ispresented:placement:prompt:)-3inby",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:ispresented:placement:prompt:)-5jhgs",
                    "title" : "func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:ispresented:placement:prompt:)-6jwph",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:placement:prompt:)-2pm16",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:placement:prompt:)-541rg",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:placement:prompt:)-8one4",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:placement:prompt:suggestions:)-2se3i",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:placement:prompt:suggestions:)-4bj8a",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:placement:prompt:suggestions:)-4hpc5",
                    "title" : "func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:tokens:ispresented:placement:prompt:token:)-1y5lq",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:tokens:ispresented:placement:prompt:token:)-4puta",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:tokens:ispresented:placement:prompt:token:)-6mynf",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:tokens:placement:prompt:token:)-10rau",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:tokens:placement:prompt:token:)-4p57e",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:tokens:placement:prompt:token:)-7b96t",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4ijuy",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4ktm9",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-73d5z",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3qvf",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6v1m0",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8kyw8",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/selectiondisabled(_:)",
                    "title" : "func selectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/sensoryfeedback(_:trigger:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/sensoryfeedback(_:trigger:condition:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/sensoryfeedback(trigger:_:)",
                    "title" : "func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/shadow(color:radius:x:y:)",
                    "title" : "func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/sheet(ispresented:ondismiss:content:)",
                    "title" : "func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/sheet(item:ondismiss:content:)",
                    "title" : "func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/simultaneousgesture(_:including:)",
                    "title" : "func simultaneousGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/speechadjustedpitch(_:)",
                    "title" : "func speechAdjustedPitch(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/speechalwaysincludespunctuation(_:)",
                    "title" : "func speechAlwaysIncludesPunctuation(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/speechannouncementsqueued(_:)",
                    "title" : "func speechAnnouncementsQueued(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/speechspellsoutcharacters(_:)",
                    "title" : "func speechSpellsOutCharacters(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/springloadingbehavior(_:)",
                    "title" : "func springLoadingBehavior(SpringLoadingBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/statusbar(hidden:)",
                    "title" : "func statusBar(hidden: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/statusbarhidden(_:)",
                    "title" : "func statusBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/strikethrough(_:pattern:color:)",
                    "title" : "func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/submitlabel(_:)",
                    "title" : "func submitLabel(SubmitLabel) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/submitscope(_:)",
                    "title" : "func submitScope(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/swipeactions(edge:allowsfullswipe:content:)",
                    "title" : "func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/symboleffect(_:options:isactive:)",
                    "title" : "func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/symboleffect(_:options:value:)",
                    "title" : "func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/symboleffectsremoved(_:)",
                    "title" : "func symbolEffectsRemoved(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/symbolrenderingmode(_:)",
                    "title" : "func symbolRenderingMode(SymbolRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/symbolvariant(_:)",
                    "title" : "func symbolVariant(SymbolVariants) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/tabitem(_:)",
                    "title" : "func tabItem<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/tabviewstyle(_:)",
                    "title" : "func tabViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/tablecolumnheaders(_:)",
                    "title" : "func tableColumnHeaders(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/tablestyle(_:)",
                    "title" : "func tableStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/tag(_:)",
                    "title" : "func tag<V>(V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/task(id:priority:_:)",
                    "title" : "func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/textcase(_:)",
                    "title" : "func textCase(Text.Case?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/textcontenttype(_:)",
                    "title" : "func textContentType(UITextContentType?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/texteditorstyle(_:)",
                    "title" : "func textEditorStyle(some TextEditorStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/textfieldstyle(_:)",
                    "title" : "func textFieldStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/textinputautocapitalization(_:)",
                    "title" : "func textInputAutocapitalization(TextInputAutocapitalization?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/textscale(_:isenabled:)",
                    "title" : "func textScale(Text.Scale, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/textselection(_:)",
                    "title" : "func textSelection<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/tint(_:)",
                    "title" : "func tint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/togglestyle(_:)",
                    "title" : "func toggleStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/toolbar(_:for:)",
                    "title" : "func toolbar(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/toolbar(content:)-26i16",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/toolbar(content:)-8w54m",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/toolbar(id:content:)",
                    "title" : "func toolbar<Content>(id: String, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/toolbar(removing:)",
                    "title" : "func toolbar(removing: ToolbarDefaultItemKind?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/toolbarbackground(_:for:)",
                    "title" : "func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/toolbarcolorscheme(_:for:)",
                    "title" : "func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/toolbarrole(_:)",
                    "title" : "func toolbarRole(ToolbarRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/toolbartitledisplaymode(_:)",
                    "title" : "func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/toolbartitlemenu(content:)",
                    "title" : "func toolbarTitleMenu<C>(content: () -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/tracking(_:)",
                    "title" : "func tracking(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/transaction(_:)",
                    "title" : "func transaction((inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/transaction(_:body:)",
                    "title" : "func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/transaction(value:_:)",
                    "title" : "func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/transformanchorpreference(key:value:transform:)",
                    "title" : "func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/transformeffect(_:)",
                    "title" : "func transformEffect(CGAffineTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/transformenvironment(_:transform:)",
                    "title" : "func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/transformpreference(_:_:)",
                    "title" : "func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/transition(_:)",
                    "title" : "func transition(AnyTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/truncationmode(_:)",
                    "title" : "func truncationMode(Text.TruncationMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/typeselectequivalent(_:)-122nw",
                    "title" : "func typeSelectEquivalent(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/typeselectequivalent(_:)-4vn9",
                    "title" : "func typeSelectEquivalent(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/typeselectequivalent(_:)-677h2",
                    "title" : "func typeSelectEquivalent<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/typesettinglanguage(_:isenabled:)-2296u",
                    "title" : "func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/typesettinglanguage(_:isenabled:)-79njc",
                    "title" : "func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/underline(_:pattern:color:)",
                    "title" : "func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/unredacted()",
                    "title" : "func unredacted() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/useractivity(_:element:_:)",
                    "title" : "func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/useractivity(_:isactive:_:)",
                    "title" : "func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/visualeffect(_:)",
                    "title" : "func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/zindex(_:)",
                    "title" : "func zIndex(Double) -> some View",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/streamdeckkeyarealayout",
            "title" : "StreamDeckKeyAreaLayout",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/init(action:content:)-75po",
                "title" : "init(action: @MainActor () -> Void, content: ContentProvider)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/init(action:content:)-7h0vj",
                "title" : "init(action: KeyAction, content: ContentProvider)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/body",
                "title" : "var body: some View",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/contentprovider",
                "title" : "StreamDeckKeyView.ContentProvider",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/keyaction",
                "title" : "StreamDeckKeyView.KeyAction",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accentcolor(_:)",
                    "title" : "func accentColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibility(activationpoint:)-7755e",
                    "title" : "func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibility(activationpoint:)-7r73k",
                    "title" : "func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibility(addtraits:)",
                    "title" : "func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibility(hidden:)",
                    "title" : "func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibility(hint:)",
                    "title" : "func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibility(identifier:)",
                    "title" : "func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibility(inputlabels:)",
                    "title" : "func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibility(label:)",
                    "title" : "func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibility(removetraits:)",
                    "title" : "func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibility(selectionidentifier:)",
                    "title" : "func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibility(sortpriority:)",
                    "title" : "func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibility(value:)",
                    "title" : "func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityaction(_:_:)",
                    "title" : "func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityaction(action:label:)",
                    "title" : "func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityaction(named:_:)-2oj7q",
                    "title" : "func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityaction(named:_:)-2zlv2",
                    "title" : "func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityaction(named:_:)-sbxi",
                    "title" : "func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityactions(_:)",
                    "title" : "func accessibilityActions<Content>(() -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityactivationpoint(_:)-1xchb",
                    "title" : "func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityactivationpoint(_:)-73bzp",
                    "title" : "func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityaddtraits(_:)",
                    "title" : "func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityadjustableaction(_:)",
                    "title" : "func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitychartdescriptor(_:)",
                    "title" : "func accessibilityChartDescriptor<R>(R) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitychildren(children:)",
                    "title" : "func accessibilityChildren<V>(children: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitycustomcontent(_:_:importance:)-2rf5o",
                    "title" : "func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitycustomcontent(_:_:importance:)-4jfin",
                    "title" : "func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitycustomcontent(_:_:importance:)-6lrjb",
                    "title" : "func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitycustomcontent(_:_:importance:)-6t01l",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitycustomcontent(_:_:importance:)-79j7h",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitycustomcontent(_:_:importance:)-8ap1a",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitycustomcontent(_:_:importance:)-8dn63",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitycustomcontent(_:_:importance:)-r1it",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitydirecttouch(_:options:)",
                    "title" : "func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityelement(children:)",
                    "title" : "func accessibilityElement(children: AccessibilityChildBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityfocused(_:)",
                    "title" : "func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityfocused(_:equals:)",
                    "title" : "func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityheading(_:)",
                    "title" : "func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityhidden(_:)",
                    "title" : "func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityhint(_:)-2c2lg",
                    "title" : "func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityhint(_:)-5121a",
                    "title" : "func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityhint(_:)-9gqsl",
                    "title" : "func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityidentifier(_:)",
                    "title" : "func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityignoresinvertcolors(_:)",
                    "title" : "func accessibilityIgnoresInvertColors(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityinputlabels(_:)-6bs9n",
                    "title" : "func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityinputlabels(_:)-6fq2f",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityinputlabels(_:)-8gnjh",
                    "title" : "func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitylabel(_:)-2bz40",
                    "title" : "func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitylabel(_:)-8dulx",
                    "title" : "func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitylabel(_:)-9h8t0",
                    "title" : "func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitylabeledpair(role:id:in:)",
                    "title" : "func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitylinkedgroup(id:in:)",
                    "title" : "func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityremovetraits(_:)",
                    "title" : "func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrepresentation(representation:)",
                    "title" : "func accessibilityRepresentation<V>(representation: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrespondstouserinteraction(_:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotor(_:entries:)-2wb43",
                    "title" : "func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotor(_:entries:)-3ties",
                    "title" : "func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotor(_:entries:)-5g972",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotor(_:entries:)-6efi1",
                    "title" : "func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3kere",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotor(_:entries:entryid:entrylabel:)-432wl",
                    "title" : "func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8mawd",
                    "title" : "func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9jfyj",
                    "title" : "func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotor(_:entries:entrylabel:)-203t1",
                    "title" : "func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotor(_:entries:entrylabel:)-66rk9",
                    "title" : "func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotor(_:entries:entrylabel:)-8nf3k",
                    "title" : "func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotor(_:entries:entrylabel:)-9i5rn",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotor(_:textranges:)-3g5c4",
                    "title" : "func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotor(_:textranges:)-3h584",
                    "title" : "func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotor(_:textranges:)-4rmwo",
                    "title" : "func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotor(_:textranges:)-9z2gw",
                    "title" : "func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityrotorentry(id:in:)",
                    "title" : "func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityscrollaction(_:)",
                    "title" : "func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityshowslargecontentviewer()",
                    "title" : "func accessibilityShowsLargeContentViewer() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityshowslargecontentviewer(_:)",
                    "title" : "func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitysortpriority(_:)",
                    "title" : "func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilitytextcontenttype(_:)",
                    "title" : "func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityvalue(_:)-1im4o",
                    "title" : "func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityvalue(_:)-26lg3",
                    "title" : "func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityvalue(_:)-9hy4s",
                    "title" : "func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/accessibilityzoomaction(_:)",
                    "title" : "func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/actionsheet(ispresented:content:)",
                    "title" : "func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/actionsheet(item:content:)",
                    "title" : "func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alert(_:ispresented:actions:)-5fqvv",
                    "title" : "func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alert(_:ispresented:actions:)-5ldqj",
                    "title" : "func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alert(_:ispresented:actions:)-8plw3",
                    "title" : "func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alert(_:ispresented:actions:message:)-2tsqq",
                    "title" : "func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alert(_:ispresented:actions:message:)-4lw11",
                    "title" : "func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alert(_:ispresented:actions:message:)-7xaia",
                    "title" : "func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alert(_:ispresented:presenting:actions:)-26qch",
                    "title" : "func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alert(_:ispresented:presenting:actions:)-8bvhj",
                    "title" : "func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alert(_:ispresented:presenting:actions:)-m53n",
                    "title" : "func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alert(_:ispresented:presenting:actions:message:)-39eew",
                    "title" : "func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alert(_:ispresented:presenting:actions:message:)-5rxxz",
                    "title" : "func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alert(_:ispresented:presenting:actions:message:)-83cc7",
                    "title" : "func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alert(ispresented:content:)",
                    "title" : "func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alert(ispresented:error:actions:)",
                    "title" : "func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alert(ispresented:error:actions:message:)",
                    "title" : "func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alert(item:content:)",
                    "title" : "func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alignmentguide(_:computevalue:)-6uj9w",
                    "title" : "func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alignmentguide(_:computevalue:)-9xg3h",
                    "title" : "func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/alloweddynamicrange(_:)",
                    "title" : "func allowedDynamicRange(Image.DynamicRange?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/allowshittesting(_:)",
                    "title" : "func allowsHitTesting(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/allowstightening(_:)",
                    "title" : "func allowsTightening(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/anchorpreference(key:value:transform:)",
                    "title" : "func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/animation(_:)",
                    "title" : "func animation(Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/animation(_:body:)",
                    "title" : "func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/animation(_:value:)",
                    "title" : "func animation<V>(Animation?, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/aspectratio(_:contentmode:)-6w7zr",
                    "title" : "func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/aspectratio(_:contentmode:)-9644s",
                    "title" : "func aspectRatio(CGSize, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/autocapitalization(_:)",
                    "title" : "func autocapitalization(UITextAutocapitalizationType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/autocorrectiondisabled(_:)",
                    "title" : "func autocorrectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/background(_:alignment:)",
                    "title" : "func background<Background>(Background, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/background(_:ignoressafeareaedges:)",
                    "title" : "func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/background(_:in:fillstyle:)-4qf7h",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/background(_:in:fillstyle:)-92w3e",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/background(alignment:content:)",
                    "title" : "func background<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/background(ignoressafeareaedges:)",
                    "title" : "func background(ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/background(in:fillstyle:)-2bcbc",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/background(in:fillstyle:)-7g4e0",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/backgroundpreferencevalue(_:_:)",
                    "title" : "func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/backgroundpreferencevalue(_:alignment:_:)",
                    "title" : "func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/backgroundstyle(_:)",
                    "title" : "func backgroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/badge(_:)-2xglv",
                    "title" : "func badge(LocalizedStringKey?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/badge(_:)-4y825",
                    "title" : "func badge(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/badge(_:)-904il",
                    "title" : "func badge(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/badge(_:)-dt31",
                    "title" : "func badge<S>(S?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/badgeprominence(_:)",
                    "title" : "func badgeProminence(BadgeProminence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/baselineoffset(_:)",
                    "title" : "func baselineOffset(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/blendmode(_:)",
                    "title" : "func blendMode(BlendMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/blur(radius:opaque:)",
                    "title" : "func blur(radius: CGFloat, opaque: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/bold(_:)",
                    "title" : "func bold(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/border(_:width:)",
                    "title" : "func border<S>(S, width: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/brightness(_:)",
                    "title" : "func brightness(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/buttonbordershape(_:)",
                    "title" : "func buttonBorderShape(ButtonBorderShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/buttonrepeatbehavior(_:)",
                    "title" : "func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/buttonstyle(_:)-1fdiy",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/buttonstyle(_:)-9o3jr",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/clipshape(_:style:)",
                    "title" : "func clipShape<S>(S, style: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/clipped(antialiased:)",
                    "title" : "func clipped(antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/coloreffect(_:isenabled:)",
                    "title" : "func colorEffect(Shader, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/colorinvert()",
                    "title" : "func colorInvert() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/colormultiply(_:)",
                    "title" : "func colorMultiply(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/compositinggroup()",
                    "title" : "func compositingGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1erap",
                    "title" : "func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6bitl",
                    "title" : "func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8nxei",
                    "title" : "func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-43w74",
                    "title" : "func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7pz5z",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9yk8d",
                    "title" : "func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3izo6",
                    "title" : "func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7kzyu",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7sy9o",
                    "title" : "func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1gmza",
                    "title" : "func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1nr13",
                    "title" : "func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4t1mq",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/containerbackground(_:for:)",
                    "title" : "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/containerbackground(for:alignment:content:)",
                    "title" : "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/containerrelativeframe(_:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/containerrelativeframe(_:alignment:_:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/containerrelativeframe(_:count:span:spacing:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/containershape(_:)",
                    "title" : "func containerShape<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/contentmargins(_:_:for:)-5uxmd",
                    "title" : "func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/contentmargins(_:_:for:)-6fyuu",
                    "title" : "func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/contentmargins(_:for:)",
                    "title" : "func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/contentshape(_:_:eofill:)",
                    "title" : "func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/contentshape(_:eofill:)",
                    "title" : "func contentShape<S>(S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/contenttransition(_:)",
                    "title" : "func contentTransition(ContentTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/contextmenu(_:)",
                    "title" : "func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/contextmenu(forselectiontype:menu:primaryaction:)",
                    "title" : "func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/contextmenu(menuitems:)",
                    "title" : "func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/contextmenu(menuitems:preview:)",
                    "title" : "func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/contrast(_:)",
                    "title" : "func contrast(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/controlgroupstyle(_:)",
                    "title" : "func controlGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/controlsize(_:)",
                    "title" : "func controlSize(ControlSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/coordinatespace(_:)",
                    "title" : "func coordinateSpace(NamedCoordinateSpace) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/coordinatespace(name:)",
                    "title" : "func coordinateSpace<T>(name: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/cornerradius(_:antialiased:)",
                    "title" : "func cornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/datepickerstyle(_:)",
                    "title" : "func datePickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/defaultappstorage(_:)",
                    "title" : "func defaultAppStorage(UserDefaults) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/defaultfocus(_:_:priority:)",
                    "title" : "func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/defaulthovereffect(_:)",
                    "title" : "func defaultHoverEffect(HoverEffect?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/defaultscrollanchor(_:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/deferssystemgestures(on:)",
                    "title" : "func defersSystemGestures(on: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/deletedisabled(_:)",
                    "title" : "func deleteDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/dialogsuppressiontoggle(_:issuppressed:)-4vzf9",
                    "title" : "func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/dialogsuppressiontoggle(_:issuppressed:)-67v1m",
                    "title" : "func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/dialogsuppressiontoggle(_:issuppressed:)-9oso1",
                    "title" : "func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/dialogsuppressiontoggle(issuppressed:)",
                    "title" : "func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/disableautocorrection(_:)",
                    "title" : "func disableAutocorrection(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/disabled(_:)",
                    "title" : "func disabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/disclosuregroupstyle(_:)",
                    "title" : "func disclosureGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/distortioneffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/draggable(_:)",
                    "title" : "func draggable<T>(() -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/draggable(_:preview:)",
                    "title" : "func draggable<V, T>(() -> T, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/drawinggroup(opaque:colormode:)",
                    "title" : "func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/dropdestination(for:action:istargeted:)",
                    "title" : "func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/dynamictypesize(_:)",
                    "title" : "func dynamicTypeSize(DynamicTypeSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/edgesignoringsafearea(_:)",
                    "title" : "func edgesIgnoringSafeArea(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/environment(_:)",
                    "title" : "func environment<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/environment(_:_:)",
                    "title" : "func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/environmentobject(_:)",
                    "title" : "func environmentObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/filedialogbrowseroptions(_:)",
                    "title" : "func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/filedialogconfirmationlabel(_:)-5bhvk",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/filedialogconfirmationlabel(_:)-8nm4q",
                    "title" : "func fileDialogConfirmationLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/filedialogconfirmationlabel(_:)-9qdpd",
                    "title" : "func fileDialogConfirmationLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/filedialogcustomizationid(_:)",
                    "title" : "func fileDialogCustomizationID(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/filedialogdefaultdirectory(_:)",
                    "title" : "func fileDialogDefaultDirectory(URL?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/filedialogimportsunresolvedaliases(_:)",
                    "title" : "func fileDialogImportsUnresolvedAliases(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/filedialogmessage(_:)-5gt2w",
                    "title" : "func fileDialogMessage<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/filedialogmessage(_:)-5jefu",
                    "title" : "func fileDialogMessage(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/filedialogmessage(_:)-99fxf",
                    "title" : "func fileDialogMessage(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/filedialogurlenabled(_:)",
                    "title" : "func fileDialogURLEnabled(Predicate<URL>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2xb04",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6epvt",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8oarc",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-gu7f",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-77yws",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-p7b4",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-2lj2p",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-91kkz",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fileexporterfilenamelabel(_:)-3vpcb",
                    "title" : "func fileExporterFilenameLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fileexporterfilenamelabel(_:)-4io22",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fileexporterfilenamelabel(_:)-870px",
                    "title" : "func fileExporterFilenameLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/filemover(ispresented:file:oncompletion:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/filemover(ispresented:file:oncompletion:oncancellation:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/filemover(ispresented:files:oncompletion:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/filemover(ispresented:files:oncompletion:oncancellation:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/finddisabled(_:)",
                    "title" : "func findDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/findnavigator(ispresented:)",
                    "title" : "func findNavigator(isPresented: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fixedsize()",
                    "title" : "func fixedSize() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fixedsize(horizontal:vertical:)",
                    "title" : "func fixedSize(horizontal: Bool, vertical: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/flipsforrighttoleftlayoutdirection(_:)",
                    "title" : "func flipsForRightToLeftLayoutDirection(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/focuseffectdisabled(_:)",
                    "title" : "func focusEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/focusable(_:)",
                    "title" : "func focusable(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/focusable(_:interactions:)",
                    "title" : "func focusable(Bool, interactions: FocusInteractions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/focused(_:)",
                    "title" : "func focused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/focused(_:equals:)",
                    "title" : "func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/focusedobject(_:)-2kin1",
                    "title" : "func focusedObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/focusedobject(_:)-8wkf9",
                    "title" : "func focusedObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/focusedsceneobject(_:)-32l5z",
                    "title" : "func focusedSceneObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/focusedsceneobject(_:)-3jxv1",
                    "title" : "func focusedSceneObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/focusedscenevalue(_:_:)-7982z",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/focusedscenevalue(_:_:)-90t2h",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/focusedvalue(_:)",
                    "title" : "func focusedValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/focusedvalue(_:_:)-70z8r",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/focusedvalue(_:_:)-o8ck",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/font(_:)",
                    "title" : "func font(Font?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fontdesign(_:)",
                    "title" : "func fontDesign(Font.Design?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fontweight(_:)",
                    "title" : "func fontWeight(Font.Weight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fontwidth(_:)",
                    "title" : "func fontWidth(Font.Width?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/foregroundstyle(_:)",
                    "title" : "func foregroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/foregroundstyle(_:_:)",
                    "title" : "func foregroundStyle<S1, S2>(S1, S2) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/foregroundstyle(_:_:_:)",
                    "title" : "func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/formstyle(_:)",
                    "title" : "func formStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/frame()",
                    "title" : "func frame() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/frame(width:height:alignment:)",
                    "title" : "func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fullscreencover(ispresented:ondismiss:content:)",
                    "title" : "func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/fullscreencover(item:ondismiss:content:)",
                    "title" : "func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/gaugestyle(_:)",
                    "title" : "func gaugeStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/geometrygroup()",
                    "title" : "func geometryGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/gesture(_:including:)",
                    "title" : "func gesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/grayscale(_:)",
                    "title" : "func grayscale(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/gridcellanchor(_:)",
                    "title" : "func gridCellAnchor(UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/gridcellcolumns(_:)",
                    "title" : "func gridCellColumns(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/gridcellunsizedaxes(_:)",
                    "title" : "func gridCellUnsizedAxes(Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/gridcolumnalignment(_:)",
                    "title" : "func gridColumnAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/groupboxstyle(_:)",
                    "title" : "func groupBoxStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/handlesexternalevents(preferring:allowing:)",
                    "title" : "func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/headerprominence(_:)",
                    "title" : "func headerProminence(Prominence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/help(_:)-2zrl4",
                    "title" : "func help<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/help(_:)-9kqkn",
                    "title" : "func help(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/help(_:)-9yx52",
                    "title" : "func help(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/hidden()",
                    "title" : "func hidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/highprioritygesture(_:including:)",
                    "title" : "func highPriorityGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/hovereffect(_:)",
                    "title" : "func hoverEffect(HoverEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/hovereffect(_:isenabled:)",
                    "title" : "func hoverEffect(HoverEffect, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/hovereffectdisabled(_:)",
                    "title" : "func hoverEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/huerotation(_:)",
                    "title" : "func hueRotation(Angle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/id(_:)",
                    "title" : "func id<ID>(ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/ignoressafearea(_:edges:)",
                    "title" : "func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/imagescale(_:)",
                    "title" : "func imageScale(Image.Scale) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/indexviewstyle(_:)",
                    "title" : "func indexViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/inspector(ispresented:content:)",
                    "title" : "func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/inspectorcolumnwidth(_:)",
                    "title" : "func inspectorColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/inspectorcolumnwidth(min:ideal:max:)",
                    "title" : "func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/interactionactivitytrackingtag(_:)",
                    "title" : "func interactionActivityTrackingTag(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/interactivedismissdisabled(_:)",
                    "title" : "func interactiveDismissDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/invalidatablecontent(_:)",
                    "title" : "func invalidatableContent(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/italic(_:)",
                    "title" : "func italic(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/itemprovider(_:)",
                    "title" : "func itemProvider(Optional<() -> NSItemProvider?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/kerning(_:)",
                    "title" : "func kerning(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/keyboardshortcut(_:)-3gwr1",
                    "title" : "func keyboardShortcut(KeyboardShortcut?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/keyboardshortcut(_:)-7y8e4",
                    "title" : "func keyboardShortcut(KeyboardShortcut) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/keyboardshortcut(_:modifiers:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/keyboardshortcut(_:modifiers:localization:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/keyboardtype(_:)",
                    "title" : "func keyboardType(UIKeyboardType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/keyframeanimator(initialvalue:repeating:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/keyframeanimator(initialvalue:trigger:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/labelstyle(_:)",
                    "title" : "func labelStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/labeledcontentstyle(_:)",
                    "title" : "func labeledContentStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/labelshidden()",
                    "title" : "func labelsHidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/layereffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/layoutdirectionbehavior(_:)",
                    "title" : "func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/layoutpriority(_:)",
                    "title" : "func layoutPriority(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/layoutvalue(key:value:)",
                    "title" : "func layoutValue<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/linelimit(_:)-1ntym",
                    "title" : "func lineLimit(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/linelimit(_:)-3r4tg",
                    "title" : "func lineLimit(ClosedRange<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/linelimit(_:)-71ixd",
                    "title" : "func lineLimit(PartialRangeThrough<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/linelimit(_:)-9jici",
                    "title" : "func lineLimit(PartialRangeFrom<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/linelimit(_:reservesspace:)",
                    "title" : "func lineLimit(Int, reservesSpace: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/linespacing(_:)",
                    "title" : "func lineSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/listitemtint(_:)-43bb6",
                    "title" : "func listItemTint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/listitemtint(_:)-8bxx7",
                    "title" : "func listItemTint(ListItemTint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/listrowbackground(_:)",
                    "title" : "func listRowBackground<V>(V?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/listrowinsets(_:)",
                    "title" : "func listRowInsets(EdgeInsets?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/listrowseparator(_:edges:)",
                    "title" : "func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/listrowseparatortint(_:edges:)",
                    "title" : "func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/listrowspacing(_:)",
                    "title" : "func listRowSpacing(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/listsectionseparator(_:edges:)",
                    "title" : "func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/listsectionseparatortint(_:edges:)",
                    "title" : "func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/listsectionspacing(_:)-89x7h",
                    "title" : "func listSectionSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/listsectionspacing(_:)-lkyt",
                    "title" : "func listSectionSpacing(ListSectionSpacing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/liststyle(_:)",
                    "title" : "func listStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/luminancetoalpha()",
                    "title" : "func luminanceToAlpha() -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/mask(_:)",
                    "title" : "func mask<Mask>(Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/mask(alignment:_:)",
                    "title" : "func mask<Mask>(alignment: Alignment, () -> Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/matchedgeometryeffect(id:in:properties:anchor:issource:)",
                    "title" : "func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/menuactiondismissbehavior(_:)",
                    "title" : "func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/menuindicator(_:)",
                    "title" : "func menuIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/menuorder(_:)",
                    "title" : "func menuOrder(MenuOrder) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/menustyle(_:)",
                    "title" : "func menuStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/minimumscalefactor(_:)",
                    "title" : "func minimumScaleFactor(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/modifier(_:)",
                    "title" : "func modifier<T>(T) -> ModifiedContent<Self, T>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/monospaced(_:)",
                    "title" : "func monospaced(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/monospaceddigit()",
                    "title" : "func monospacedDigit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/movedisabled(_:)",
                    "title" : "func moveDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(TextAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationbarbackbuttonhidden(_:)",
                    "title" : "func navigationBarBackButtonHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationbarhidden(_:)",
                    "title" : "func navigationBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationbaritems(leading:)",
                    "title" : "func navigationBarItems<L>(leading: L) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationbaritems(leading:trailing:)",
                    "title" : "func navigationBarItems<L, T>(leading: L, trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationbaritems(trailing:)",
                    "title" : "func navigationBarItems<T>(trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationbartitle(_:)-39wit",
                    "title" : "func navigationBarTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationbartitle(_:)-3j0q",
                    "title" : "func navigationBarTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationbartitle(_:)-7pl2e",
                    "title" : "func navigationBarTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationbartitle(_:displaymode:)-33wk3",
                    "title" : "func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationbartitle(_:displaymode:)-3ru17",
                    "title" : "func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationbartitle(_:displaymode:)-5ovrk",
                    "title" : "func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationbartitledisplaymode(_:)",
                    "title" : "func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationdestination(for:destination:)",
                    "title" : "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationdestination(ispresented:destination:)",
                    "title" : "func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationdestination(item:destination:)",
                    "title" : "func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationdocument(_:)",
                    "title" : "func navigationDocument(URL) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationdocument(_:preview:)-1kzpl",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationdocument(_:preview:)-42fj9",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationdocument(_:preview:)-7tj7q",
                    "title" : "func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationdocument(_:preview:)-aif7",
                    "title" : "func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationsplitviewcolumnwidth(_:)",
                    "title" : "func navigationSplitViewColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationsplitviewcolumnwidth(min:ideal:max:)",
                    "title" : "func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationsplitviewstyle(_:)",
                    "title" : "func navigationSplitViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationtitle(_:)-1ia42",
                    "title" : "func navigationTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationtitle(_:)-321j0",
                    "title" : "func navigationTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationtitle(_:)-45k16",
                    "title" : "func navigationTitle(Binding<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationtitle(_:)-5r1o8",
                    "title" : "func navigationTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationtitle(_:)-68tfa",
                    "title" : "func navigationTitle<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/navigationviewstyle(_:)",
                    "title" : "func navigationViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/offset(_:)",
                    "title" : "func offset(CGSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/offset(x:y:)",
                    "title" : "func offset(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onappear(perform:)",
                    "title" : "func onAppear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onchange(of:initial:_:)-2guic",
                    "title" : "func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onchange(of:initial:_:)-3zrzr",
                    "title" : "func onChange<V>(of: V, initial: Bool, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onchange(of:perform:)",
                    "title" : "func onChange<V>(of: V, perform: (V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/oncontinueuseractivity(_:perform:)",
                    "title" : "func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/oncontinuoushover(coordinatespace:perform:)",
                    "title" : "func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/ondrag(_:)",
                    "title" : "func onDrag(() -> NSItemProvider) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/ondrag(_:preview:)",
                    "title" : "func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/ondrop(of:delegate:)-4znvd",
                    "title" : "func onDrop(of: [UTType], delegate: DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/ondrop(of:delegate:)-8a5je",
                    "title" : "func onDrop(of: [String], delegate: DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/ondrop(of:istargeted:perform:)-4k0ui",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/ondrop(of:istargeted:perform:)-4llae",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/ondrop(of:istargeted:perform:)-6spry",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/ondrop(of:istargeted:perform:)-9a2c3",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onhover(perform:)",
                    "title" : "func onHover(perform: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onkeypress(_:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onkeypress(_:phases:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onkeypress(characters:phases:action:)",
                    "title" : "func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onkeypress(keys:phases:action:)",
                    "title" : "func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onkeypress(phases:action:)",
                    "title" : "func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onlongpressgesture(minimumduration:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onpreferencechange(_:perform:)",
                    "title" : "func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onreceive(_:perform:)",
                    "title" : "func onReceive<P>(P, perform: (P.Output) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/onsubmit(of:_:)",
                    "title" : "func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/ontapgesture(count:coordinatespace:perform:)",
                    "title" : "func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/ontapgesture(count:perform:)",
                    "title" : "func onTapGesture(count: Int, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/opacity(_:)",
                    "title" : "func opacity(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/overlay(_:alignment:)",
                    "title" : "func overlay<Overlay>(Overlay, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/overlay(_:ignoressafeareaedges:)",
                    "title" : "func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/overlay(_:in:fillstyle:)",
                    "title" : "func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/overlay(alignment:content:)",
                    "title" : "func overlay<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/overlaypreferencevalue(_:_:)",
                    "title" : "func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/overlaypreferencevalue(_:alignment:_:)",
                    "title" : "func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/padding(_:)-4fglm",
                    "title" : "func padding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/padding(_:)-6xj1c",
                    "title" : "func padding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/paletteselectioneffect(_:)",
                    "title" : "func paletteSelectionEffect(PaletteSelectionEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/persistentsystemoverlays(_:)",
                    "title" : "func persistentSystemOverlays(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/phaseanimator(_:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/phaseanimator(_:trigger:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/pickerstyle(_:)",
                    "title" : "func pickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/popover(ispresented:attachmentanchor:arrowedge:content:)",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/popover(item:attachmentanchor:arrowedge:content:)",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/position(_:)",
                    "title" : "func position(CGPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/position(x:y:)",
                    "title" : "func position(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/preference(key:value:)",
                    "title" : "func preference<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/preferredcolorscheme(_:)",
                    "title" : "func preferredColorScheme(ColorScheme?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/presentationbackground(_:)",
                    "title" : "func presentationBackground<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/presentationbackground(alignment:content:)",
                    "title" : "func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/presentationbackgroundinteraction(_:)",
                    "title" : "func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/presentationcompactadaptation(_:)",
                    "title" : "func presentationCompactAdaptation(PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/presentationcompactadaptation(horizontal:vertical:)",
                    "title" : "func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/presentationcontentinteraction(_:)",
                    "title" : "func presentationContentInteraction(PresentationContentInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/presentationcornerradius(_:)",
                    "title" : "func presentationCornerRadius(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/presentationdetents(_:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/presentationdetents(_:selection:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/presentationdragindicator(_:)",
                    "title" : "func presentationDragIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/previewcontext(_:)",
                    "title" : "func previewContext<C>(C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/previewdevice(_:)",
                    "title" : "func previewDevice(PreviewDevice?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/previewdisplayname(_:)",
                    "title" : "func previewDisplayName(String?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/previewinterfaceorientation(_:)",
                    "title" : "func previewInterfaceOrientation(InterfaceOrientation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/previewlayout(_:)",
                    "title" : "func previewLayout(PreviewLayout) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/privacysensitive(_:)",
                    "title" : "func privacySensitive(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/progressviewstyle(_:)",
                    "title" : "func progressViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/projectioneffect(_:)",
                    "title" : "func projectionEffect(ProjectionTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/redacted(reason:)",
                    "title" : "func redacted(reason: RedactionReasons) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/refreshable(action:)",
                    "title" : "func refreshable(action: () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/renameaction(_:)-5j15u",
                    "title" : "func renameAction(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/renameaction(_:)-67q8r",
                    "title" : "func renameAction(() -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/replacedisabled(_:)",
                    "title" : "func replaceDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)",
                    "title" : "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/rotationeffect(_:anchor:)",
                    "title" : "func rotationEffect(Angle, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/safeareainset(edge:alignment:spacing:content:)-4484r",
                    "title" : "func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/safeareainset(edge:alignment:spacing:content:)-50avf",
                    "title" : "func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/safeareapadding(_:)-49f3m",
                    "title" : "func safeAreaPadding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/safeareapadding(_:)-sz7w",
                    "title" : "func safeAreaPadding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/safeareapadding(_:_:)",
                    "title" : "func safeAreaPadding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/saturation(_:)",
                    "title" : "func saturation(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scaleeffect(_:anchor:)-5bd0x",
                    "title" : "func scaleEffect(CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scaleeffect(_:anchor:)-755qx",
                    "title" : "func scaleEffect(CGSize, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scaleeffect(x:y:anchor:)",
                    "title" : "func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scaledtofill()",
                    "title" : "func scaledToFill() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scaledtofit()",
                    "title" : "func scaledToFit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scenepadding(_:)",
                    "title" : "func scenePadding(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scenepadding(_:edges:)",
                    "title" : "func scenePadding(ScenePadding, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scrollbouncebehavior(_:axes:)",
                    "title" : "func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scrollclipdisabled(_:)",
                    "title" : "func scrollClipDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scrollcontentbackground(_:)",
                    "title" : "func scrollContentBackground(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scrolldisabled(_:)",
                    "title" : "func scrollDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scrolldismisseskeyboard(_:)",
                    "title" : "func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scrollindicators(_:axes:)",
                    "title" : "func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scrollindicatorsflash(onappear:)",
                    "title" : "func scrollIndicatorsFlash(onAppear: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scrollindicatorsflash(trigger:)",
                    "title" : "func scrollIndicatorsFlash(trigger: some Equatable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scrollposition(id:anchor:)",
                    "title" : "func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scrolltargetbehavior(_:)",
                    "title" : "func scrollTargetBehavior(some ScrollTargetBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scrolltargetlayout(isenabled:)",
                    "title" : "func scrollTargetLayout(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scrolltransition(_:axis:transition:)",
                    "title" : "func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/scrolltransition(topleading:bottomtrailing:axis:transition:)",
                    "title" : "func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchcompletion(_:)",
                    "title" : "func searchCompletion(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchdictationbehavior(_:)",
                    "title" : "func searchDictationBehavior(TextInputDictationBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchscopes(_:activation:_:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchscopes(_:scopes:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchsuggestions(_:)",
                    "title" : "func searchSuggestions<S>(() -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchsuggestions(_:for:)",
                    "title" : "func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1osth",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-419d",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4wqnh",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:editabletokens:placement:prompt:token:)-1se6a",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:editabletokens:placement:prompt:token:)-6yhlp",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:editabletokens:placement:prompt:token:)-xn49",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:ispresented:placement:prompt:)-8bvf1",
                    "title" : "func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:ispresented:placement:prompt:)-8d1ht",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:ispresented:placement:prompt:)-9um4y",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:placement:prompt:)-3u21f",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:placement:prompt:)-3x7g0",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:placement:prompt:)-5lp4h",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:placement:prompt:suggestions:)-1cxxg",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:placement:prompt:suggestions:)-2jg1j",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:placement:prompt:suggestions:)-5nnff",
                    "title" : "func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:tokens:ispresented:placement:prompt:token:)-26ec1",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:tokens:ispresented:placement:prompt:token:)-3u0wz",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:tokens:ispresented:placement:prompt:token:)-aa70",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:tokens:placement:prompt:token:)-3dhrg",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:tokens:placement:prompt:token:)-3ysqm",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:tokens:placement:prompt:token:)-4wa8k",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-2mugc",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-90sti",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-c9up",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2su4l",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6exqy",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-z0gk",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/selectiondisabled(_:)",
                    "title" : "func selectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/sensoryfeedback(_:trigger:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/sensoryfeedback(_:trigger:condition:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/sensoryfeedback(trigger:_:)",
                    "title" : "func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/shadow(color:radius:x:y:)",
                    "title" : "func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/sheet(ispresented:ondismiss:content:)",
                    "title" : "func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/sheet(item:ondismiss:content:)",
                    "title" : "func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/simultaneousgesture(_:including:)",
                    "title" : "func simultaneousGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/speechadjustedpitch(_:)",
                    "title" : "func speechAdjustedPitch(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/speechalwaysincludespunctuation(_:)",
                    "title" : "func speechAlwaysIncludesPunctuation(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/speechannouncementsqueued(_:)",
                    "title" : "func speechAnnouncementsQueued(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/speechspellsoutcharacters(_:)",
                    "title" : "func speechSpellsOutCharacters(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/springloadingbehavior(_:)",
                    "title" : "func springLoadingBehavior(SpringLoadingBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/statusbar(hidden:)",
                    "title" : "func statusBar(hidden: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/statusbarhidden(_:)",
                    "title" : "func statusBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/strikethrough(_:pattern:color:)",
                    "title" : "func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/submitlabel(_:)",
                    "title" : "func submitLabel(SubmitLabel) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/submitscope(_:)",
                    "title" : "func submitScope(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/swipeactions(edge:allowsfullswipe:content:)",
                    "title" : "func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/symboleffect(_:options:isactive:)",
                    "title" : "func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/symboleffect(_:options:value:)",
                    "title" : "func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/symboleffectsremoved(_:)",
                    "title" : "func symbolEffectsRemoved(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/symbolrenderingmode(_:)",
                    "title" : "func symbolRenderingMode(SymbolRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/symbolvariant(_:)",
                    "title" : "func symbolVariant(SymbolVariants) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/tabitem(_:)",
                    "title" : "func tabItem<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/tabviewstyle(_:)",
                    "title" : "func tabViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/tablecolumnheaders(_:)",
                    "title" : "func tableColumnHeaders(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/tablestyle(_:)",
                    "title" : "func tableStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/tag(_:)",
                    "title" : "func tag<V>(V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/task(id:priority:_:)",
                    "title" : "func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/textcase(_:)",
                    "title" : "func textCase(Text.Case?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/textcontenttype(_:)",
                    "title" : "func textContentType(UITextContentType?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/texteditorstyle(_:)",
                    "title" : "func textEditorStyle(some TextEditorStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/textfieldstyle(_:)",
                    "title" : "func textFieldStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/textinputautocapitalization(_:)",
                    "title" : "func textInputAutocapitalization(TextInputAutocapitalization?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/textscale(_:isenabled:)",
                    "title" : "func textScale(Text.Scale, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/textselection(_:)",
                    "title" : "func textSelection<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/tint(_:)",
                    "title" : "func tint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/togglestyle(_:)",
                    "title" : "func toggleStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/toolbar(_:for:)",
                    "title" : "func toolbar(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/toolbar(content:)-2deto",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/toolbar(content:)-3zrm6",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/toolbar(id:content:)",
                    "title" : "func toolbar<Content>(id: String, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/toolbar(removing:)",
                    "title" : "func toolbar(removing: ToolbarDefaultItemKind?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/toolbarbackground(_:for:)",
                    "title" : "func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/toolbarcolorscheme(_:for:)",
                    "title" : "func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/toolbarrole(_:)",
                    "title" : "func toolbarRole(ToolbarRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/toolbartitledisplaymode(_:)",
                    "title" : "func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/toolbartitlemenu(content:)",
                    "title" : "func toolbarTitleMenu<C>(content: () -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/tracking(_:)",
                    "title" : "func tracking(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/transaction(_:)",
                    "title" : "func transaction((inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/transaction(_:body:)",
                    "title" : "func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/transaction(value:_:)",
                    "title" : "func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/transformanchorpreference(key:value:transform:)",
                    "title" : "func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/transformeffect(_:)",
                    "title" : "func transformEffect(CGAffineTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/transformenvironment(_:transform:)",
                    "title" : "func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/transformpreference(_:_:)",
                    "title" : "func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/transition(_:)",
                    "title" : "func transition(AnyTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/truncationmode(_:)",
                    "title" : "func truncationMode(Text.TruncationMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/typeselectequivalent(_:)-1gckf",
                    "title" : "func typeSelectEquivalent<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/typeselectequivalent(_:)-42lv1",
                    "title" : "func typeSelectEquivalent(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/typeselectequivalent(_:)-47pjo",
                    "title" : "func typeSelectEquivalent(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/typesettinglanguage(_:isenabled:)-2slm4",
                    "title" : "func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/typesettinglanguage(_:isenabled:)-8ejjg",
                    "title" : "func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/underline(_:pattern:color:)",
                    "title" : "func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/unredacted()",
                    "title" : "func unredacted() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/useractivity(_:element:_:)",
                    "title" : "func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/useractivity(_:isactive:_:)",
                    "title" : "func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/visualeffect(_:)",
                    "title" : "func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/zindex(_:)",
                    "title" : "func zIndex(Double) -> some View",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/streamdeckkeyview",
            "title" : "StreamDeckKeyView",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproductid\/init(integerliteral:)",
                "title" : "init(integerLiteral: Int)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproductid\/init(rawvalue:)",
                "title" : "init(rawValue: Int)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproductid\/rawvalue",
                "title" : "let rawValue: Int",
                "type" : "property"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproductid\/sd_2019",
                "title" : "static let sd_2019: StreamDeckProductId",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproductid\/sd_mini",
                "title" : "static let sd_mini: StreamDeckProductId",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproductid\/sd_mini_2022",
                "title" : "static let sd_mini_2022: StreamDeckProductId",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproductid\/sd_mk2",
                "title" : "static let sd_mk2: StreamDeckProductId",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproductid\/sd_mk2_scissor",
                "title" : "static let sd_mk2_scissor: StreamDeckProductId",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproductid\/sd_original",
                "title" : "static let sd_original: StreamDeckProductId",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproductid\/sd_pedal",
                "title" : "static let sd_pedal: StreamDeckProductId",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproductid\/sd_plus",
                "title" : "static let sd_plus: StreamDeckProductId",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproductid\/sd_xl",
                "title" : "static let sd_xl: StreamDeckProductId",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproductid\/sd_xl_2022",
                "title" : "static let sd_xl_2022: StreamDeckProductId",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckproductid\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/streamdeckproductid\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/streamdeckproductid",
            "title" : "StreamDeckProductId",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckviewcontext\/device",
                "title" : "let device: StreamDeck",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckviewcontext\/index",
                "title" : "var index: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckviewcontext\/size",
                "title" : "var size: CGSize",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckviewcontext\/updaterequired()",
                "title" : "func updateRequired()",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/streamdeckviewcontext",
            "title" : "StreamDeckViewContext",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/version\/init(major:minor:patch:)-7y3qe",
                "title" : "init(major: Int, minor: Int, patch: Int)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/version\/init(major:minor:patch:)-jtk0",
                "title" : "init?(major: String, minor: String, patch: String)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/version\/init(string:)",
                "title" : "init?(string: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/version\/major",
                "title" : "let major: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/version\/minor",
                "title" : "let minor: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/version\/patch",
                "title" : "let patch: Int",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/version\/'...(_:)-38ra2",
                    "title" : "static func ... (Self) -> PartialRangeThrough<Self>",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/version\/'...(_:)-3hzyi",
                    "title" : "static func ... (Self) -> PartialRangeFrom<Self>",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/version\/'...(_:_:)",
                    "title" : "static func ... (Self, Self) -> ClosedRange<Self>",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/version\/'.._(_:)",
                    "title" : "static func ..< (Self) -> PartialRangeUpTo<Self>",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/version\/'.._(_:_:)",
                    "title" : "static func ..< (Self, Self) -> Range<Self>",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/version\/_(_:_:)-23651",
                    "title" : "static func < (Version, Version) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/version\/_(_:_:)-5basv",
                    "title" : "static func > (Self, Self) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/version\/_=(_:_:)-7u940",
                    "title" : "static func >= (Self, Self) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/version\/_=(_:_:)-9mjzw",
                    "title" : "static func <= (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/version\/comparable-implementations",
                "title" : "Comparable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/version\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/version\/customstringconvertible-implementations",
                "title" : "CustomStringConvertible Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/version\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/version\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/version",
            "title" : "Version",
            "type" : "struct"
          },
          {
            "title" : "Variables",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/streamdeckkit\/streamdecklogginghandler",
            "title" : "var streamDeckLoggingHandler: LoggingHandler?",
            "type" : "var"
          },
          {
            "title" : "Macros",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/streamdeckkit\/streamdeckview()",
            "title" : "macro StreamDeckView()",
            "type" : "macro"
          },
          {
            "title" : "Type Aliases",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/streamdeckkit\/inputeventhandler",
            "title" : "InputEventHandler",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/streamdeckkit\/logginghandler",
            "title" : "LoggingHandler",
            "type" : "typealias"
          },
          {
            "title" : "Enumerations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/imageformat\/bmp",
                "title" : "case bmp",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/imageformat\/jpeg",
                "title" : "case jpeg",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/imageformat\/none",
                "title" : "case none",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/imageformat\/unknown(_:)",
                "title" : "case unknown(UInt32)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/imageformat\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/imageformat\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/imageformat",
            "title" : "ImageFormat",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/inputevent\/fling(start:end:)",
                "title" : "case fling(start: CGPoint, end: CGPoint)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/inputevent\/keypress(index:pressed:)",
                "title" : "case keyPress(index: Int, pressed: Bool)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/inputevent\/rotaryencoderpress(index:pressed:)",
                "title" : "case rotaryEncoderPress(index: Int, pressed: Bool)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/inputevent\/rotaryencoderrotation(index:rotation:)",
                "title" : "case rotaryEncoderRotation(index: Int, rotation: Int)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/inputevent\/touch(_:)",
                "title" : "case touch(CGPoint)",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/inputevent\/direction-swift.property",
                "title" : "var direction: Direction",
                "type" : "property"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/inputevent\/direction-swift.enum\/down",
                    "title" : "case down",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/inputevent\/direction-swift.enum\/left",
                    "title" : "case left",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/inputevent\/direction-swift.enum\/none",
                    "title" : "case none",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/inputevent\/direction-swift.enum\/right",
                    "title" : "case right",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/inputevent\/direction-swift.enum\/up",
                    "title" : "case up",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/streamdeckkit\/inputevent\/direction-swift.enum\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/streamdeckkit\/inputevent\/direction-swift.enum\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/inputevent\/direction-swift.enum",
                "title" : "InputEvent.Direction",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/inputevent\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/inputevent\/customstringconvertible-implementations",
                "title" : "CustomStringConvertible Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/inputevent\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/inputevent\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/inputevent",
            "title" : "InputEvent",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproduct\/mini",
                "title" : "case mini",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproduct\/pedal",
                "title" : "case pedal",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproduct\/plus",
                "title" : "case plus",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproduct\/regular",
                "title" : "case regular",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproduct\/xl",
                "title" : "case xl",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/streamdeckkit\/streamdeckproduct\/init(productid:)",
                "title" : "init?(productId: Int)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/streamdeckproduct\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/streamdeckproduct\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/streamdeckproduct",
            "title" : "StreamDeckProduct",
            "type" : "enum"
          },
          {
            "title" : "Extended Modules",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Extended Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/swiftui\/environmentvalues\/streamdeckviewcontext",
                    "title" : "var streamDeckViewContext: StreamDeckViewContext",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/swiftui\/environmentvalues",
                "title" : "EnvironmentValues",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/swiftui",
            "title" : "SwiftUI",
            "type" : "extension"
          },
          {
            "children" : [
              {
                "title" : "Extended Classes",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/streamdeckkit\/uikit\/uiimage\/sdk_colored(_:size:)",
                    "title" : "static func sdk_colored(UIColor, size: CGSize) -> UIImage",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/streamdeckkit\/uikit\/uiimage",
                "title" : "UIImage",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/streamdeckkit\/uikit",
            "title" : "UIKit",
            "type" : "extension"
          }
        ],
        "icon" : "logo.png",
        "path" : "\/documentation\/streamdeckkit",
        "title" : "StreamDeckKit",
        "type" : "module"
      }
    ]
  },
  "references" : {
    "logo.png" : {
      "alt" : "A technology icon representing the StreamDeckKit framework.",
      "identifier" : "logo.png",
      "type" : "image",
      "variants" : [
        {
          "traits" : [
            "1x",
            "light"
          ],
          "url" : "\/images\/logo.png"
        }
      ]
    }
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 1
  }
}