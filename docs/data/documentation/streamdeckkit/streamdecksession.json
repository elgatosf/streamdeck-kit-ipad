{
  "abstract" : [
    {
      "text" : "A mechanism that enables Stream Deck driver state observation and device detection.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:13StreamDeckKit0aB7SessionC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "StreamDeckSession"
      }
    ],
    "modules" : [
      {
        "name" : "StreamDeckKit"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "StreamDeckSession"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "StreamDeckSession"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "StreamDeckSession"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To begin interacting with devices,  set-up the session and observe device connections.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "StreamDeckSession.setUp(",
            "    newDeviceHandler: { device in",
            "        print(\"\\(device.info.productName) attached.\")",
            "        \/\/ Handle input events of a device.",
            "        device.inputEventHandler = { event in",
            "            print(\"Received \\(event) from \\(device.info.productName)\")",
            "        }",
            "    }",
            ")"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can configure a device by using the instance methods of ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeck",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ". Therefore you can hold your own reference to connected devices, or",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "you can use the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/devices",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " property.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "for device in StreamDeckSession.instance.devices {",
            "    device.setImage(UIImage(named: \"flower\"), to: 4)",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Prerequisites",
          "level" : 2,
          "text" : "Prerequisites",
          "type" : "heading"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Using Stream Deck Kit requires the ",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "Stream Deck Connect",
                      "type" : "text"
                    }
                  ],
                  "type" : "strong"
                },
                {
                  "text" : " App to be installed,",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "and the contained driver to be activated in system settings.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can check if all conditions are met, with the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/state-swift.property",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " property.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let cancellable = StreamDeckSession.instance.$state.sink { state in",
            "    if case let .failed(error) = state, error == .driverVersionMismatch {",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "If ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/state-swift.property",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " is .",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/State-swift.enum\/started",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " but the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/devices",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " collection is empty, It may be that there is no device",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "connected, or the driver is not activated. As we can currently not distinguish these cases, you can ask the user to check both options.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can also link them to the Stream Deck Connect app to check if everything is okay. There, the whole setup process is described in detail.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckLayout"
      ],
      "title" : "Essentials"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/devices",
        "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/didSetUp",
        "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/driverVersion",
        "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/newDevicePublisher",
        "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/state-swift.property"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/setUp(stateHandler:newDeviceHandler:)-swift.method"
      ],
      "title" : "Instance Methods"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/NewDeviceHandler",
        "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/StateHandler"
      ],
      "title" : "Type Aliases"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/instance"
      ],
      "title" : "Type Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/setUp(stateHandler:newDeviceHandler:)-swift.type.method"
      ],
      "title" : "Type Methods"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/SessionError",
        "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/State-swift.enum"
      ],
      "title" : "Enumerations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/streamdeckkit\/streamdecksession"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://StreamDeckKit/documentation/StreamDeckKit": {
  "abstract" : [
    {
      "text" : "Communicate with a Stream Deck via Swift.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit",
  "images" : [
    {
      "identifier" : "logo.png",
      "type" : "icon"
    }
  ],
  "kind" : "symbol",
  "role" : "collection",
  "title" : "StreamDeckKit",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeck": {
  "abstract" : [
    {
      "text" : "An object that represents a physical Stream Deck device.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "StreamDeck"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeck",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "StreamDeck"
    }
  ],
  "role" : "symbol",
  "title" : "StreamDeck",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdeck"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckLayout": {
  "abstract" : [
    {
      "text" : "The basic view to build a layout for Stream Deck from.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "StreamDeckLayout"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckLayout",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "StreamDeckLayout"
    }
  ],
  "role" : "symbol",
  "title" : "StreamDeckLayout",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdecklayout"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckSession": {
  "abstract" : [
    {
      "text" : "A mechanism that enables Stream Deck driver state observation and device detection.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "StreamDeckSession"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "StreamDeckSession"
    }
  ],
  "role" : "symbol",
  "title" : "StreamDeckSession",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdecksession"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckSession/NewDeviceHandler": {
  "abstract" : [
    {
      "text" : "Handler function for newly attached devices.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NewDeviceHandler"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/NewDeviceHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NewDeviceHandler"
    }
  ],
  "role" : "symbol",
  "title" : "StreamDeckSession.NewDeviceHandler",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdecksession\/newdevicehandler"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckSession/SessionError": {
  "abstract" : [
    {
      "text" : "Describes possible reasons for a failing driver-connection.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SessionError"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/SessionError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SessionError"
    }
  ],
  "role" : "symbol",
  "title" : "StreamDeckSession.SessionError",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdecksession\/sessionerror"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckSession/State-swift.enum": {
  "abstract" : [
    {
      "text" : "Reflects the current state of a StreamDeck session.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "State"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/State-swift.enum",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "State"
    }
  ],
  "role" : "symbol",
  "title" : "StreamDeckSession.State",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdecksession\/state-swift.enum"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckSession/State-swift.enum/started": {
  "abstract" : [
    {
      "text" : "Session is started and devices are being observed.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "started"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/State-swift.enum\/started",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "StreamDeckSession.State.started",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdecksession\/state-swift.enum\/started"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckSession/StateHandler": {
  "abstract" : [
    {
      "text" : "Handler function for session state updates.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "StateHandler"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/StateHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "StateHandler"
    }
  ],
  "role" : "symbol",
  "title" : "StreamDeckSession.StateHandler",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdecksession\/statehandler"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckSession/devices": {
  "abstract" : [
    {
      "text" : "Provides the list of currently connected devices.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "devices"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13StreamDeckKit0aB0C",
      "text" : "StreamDeck"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/devices",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "devices",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdecksession\/devices"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckSession/didSetUp": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "didSetUp"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/didSetUp",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "didSetUp",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdecksession\/didsetup"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckSession/driverVersion": {
  "abstract" : [
    {
      "text" : "Provides the current version of the installed driver.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "driverVersion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13StreamDeckKit7VersionV",
      "text" : "Version"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/driverVersion",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "driverVersion",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdecksession\/driverversion"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckSession/instance": {
  "abstract" : [
    {
      "text" : "The shared session instance.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "instance"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13StreamDeckKit0aB7SessionC",
      "text" : "StreamDeckSession"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/instance",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "instance",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdecksession\/instance"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckSession/newDevicePublisher": {
  "abstract" : [
    {
      "text" : "Use this to observe newly attached Stream Deck devices.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "newDevicePublisher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine12AnyPublisherV",
      "text" : "AnyPublisher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13StreamDeckKit0aB0C",
      "text" : "StreamDeck"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5NeverO",
      "text" : "Never"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/newDevicePublisher",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "newDevicePublisher",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdecksession\/newdevicepublisher"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckSession/setUp(stateHandler:newDeviceHandler:)-swift.method": {
  "abstract" : [
    {
      "text" : "Set up this session.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setUp"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "stateHandler"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13StreamDeckKit0aB7SessionC12StateHandlera",
      "text" : "StateHandler"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "newDeviceHandler"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13StreamDeckKit0aB7SessionC16NewDeviceHandlera",
      "text" : "NewDeviceHandler"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/setUp(stateHandler:newDeviceHandler:)-swift.method",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "setUp(stateHandler:newDeviceHandler:)",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdecksession\/setup(statehandler:newdevicehandler:)-swift.method"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckSession/setUp(stateHandler:newDeviceHandler:)-swift.type.method": {
  "abstract" : [
    {
      "text" : "Set up this session.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setUp"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "stateHandler"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13StreamDeckKit0aB7SessionC12StateHandlera",
      "text" : "StateHandler"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "newDeviceHandler"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13StreamDeckKit0aB7SessionC16NewDeviceHandlera",
      "text" : "NewDeviceHandler"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/setUp(stateHandler:newDeviceHandler:)-swift.type.method",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "setUp(stateHandler:newDeviceHandler:)",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdecksession\/setup(statehandler:newdevicehandler:)-swift.type.method"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckSession/state-swift.property": {
  "abstract" : [
    {
      "text" : "Use this to observe the current session state. The ",
      "type" : "text"
    },
    {
      "code" : "State",
      "type" : "codeVoice"
    },
    {
      "text" : " info can be used to inform users about courses of action e.g. in case of an error.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "state"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13StreamDeckKit0aB7SessionC5StateO",
      "text" : "State"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckSession\/state-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "state",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdecksession\/state-swift.property"
},
"logo.png": {
  "alt" : "A technology icon representing the StreamDeckKit framework.",
  "identifier" : "logo.png",
  "type" : "image",
  "variants" : [
    {
      "traits" : [
        "1x",
        "light"
      ],
      "url" : "\/images\/logo.png"
    }
  ]
}
}
}