{
  "abstract" : [
    {
      "text" : "Defines and implements conformance of the StreamDeckView protocol.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckView()"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:14StreamDeckViewAAyycfm",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "macro"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "StreamDeckView"
      },
      {
        "kind" : "text",
        "text" : "()"
      }
    ],
    "modules" : [
      {
        "name" : "StreamDeckKit"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Macro",
    "symbolKind" : "macro",
    "title" : "StreamDeckView()"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "@attached"
            },
            {
              "kind" : "text",
              "text" : "(extension, conformances: "
            },
            {
              "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckView",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:14StreamDeckViewAAP",
              "text" : "StreamDeckView"
            },
            {
              "kind" : "text",
              "text" : ") "
            },
            {
              "kind" : "attribute",
              "text" : "@attached"
            },
            {
              "kind" : "text",
              "text" : "(member, names: named(_$streamDeckViewContext), named(body), named(streamDeck), named(viewSize), named(viewIndex)) "
            },
            {
              "kind" : "keyword",
              "text" : "macro"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "StreamDeckView"
            },
            {
              "kind" : "text",
              "text" : "()"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This macro adds Stream Deck context information and state tracking. Enabling you to to handle different devices and keys.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "@StreamDeckView",
            "struct NumberDisplayKey {",
            "    @State var isPressed: Bool = false",
            "",
            "    var streamDeckBody: some View {",
            "        StreamDeckKeyView  { isPressed in",
            "            \/\/ Changing state will trigger a re-render on Stream Deck",
            "            self.isPressed = isPressed",
            "        } content: {",
            "            ZStack {",
            "                isPressed ? Color.orange : Color.clear",
            "                \/\/ Show the current key index",
            "                Text(\"\\(viewIndex)\")",
            "            }",
            "        }",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/streamdeckkit\/streamdeckview()"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://StreamDeckKit/documentation/StreamDeckKit": {
  "abstract" : [
    {
      "text" : "Communicate with a Stream Deck via Swift.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit",
  "images" : [
    {
      "identifier" : "logo.png",
      "type" : "icon"
    }
  ],
  "kind" : "symbol",
  "role" : "collection",
  "title" : "StreamDeckKit",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckView": {
  "abstract" : [
    {
      "text" : "Protocol for views rendered on StreamDeck.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "StreamDeckView"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "StreamDeckView"
    }
  ],
  "role" : "symbol",
  "title" : "StreamDeckView",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdeckview"
},
"doc://StreamDeckKit/documentation/StreamDeckKit/StreamDeckView()": {
  "abstract" : [
    {
      "text" : "Defines and implements conformance of the StreamDeckView protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "macro"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "StreamDeckView"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/StreamDeckKit\/documentation\/StreamDeckKit\/StreamDeckView()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "StreamDeckView()",
  "type" : "topic",
  "url" : "\/documentation\/streamdeckkit\/streamdeckview()"
},
"logo.png": {
  "alt" : "A technology icon representing the StreamDeckKit framework.",
  "identifier" : "logo.png",
  "type" : "image",
  "variants" : [
    {
      "traits" : [
        "1x",
        "light"
      ],
      "url" : "\/images\/logo.png"
    }
  ]
}
}
}